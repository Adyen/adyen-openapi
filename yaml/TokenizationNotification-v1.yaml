openapi: 3.1.0
info:
  version: '1'
  x-publicVersion: true
  title: Tokenization webhooks
  description: "With Adyen, you can securely store payment details of your shoppers\
    \ with their consent. We refer to these saved payment details as tokens.\n\n We\
    \ use webhooks to inform you about token lifecycle events. For more information,\
    \ refer to our [documentation](https://docs.adyen.com/online-payments/tokenization/)."
  termsOfService: https://www.adyen.com/legal/terms-and-conditions
  contact:
    name: Adyen Developer Experience team
    url: https://github.com/Adyen/adyen-openapi
tags:
- name: General
webhooks:
  recurring.token.alreadyExisting:
    post:
      tags:
      - General
      summary: Token already exists
      description: Adyen sends this webhook when you attempt to create or update a
        token with details that match an already existing token.
      operationId: post-recurring.token.alreadyExisting
      x-sortIndex: 0
      x-methodName: tokenAlreadyExists
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              recurring-token-alreadyExisting:
                $ref: '#/components/examples/post-recurring.token.alreadyExisting-recurring-token-alreadyExisting'
            schema:
              $ref: '#/components/schemas/TokenizationAlreadyExistingDetailsNotificationRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenizationNotificationResponse'
          description: OK - the request has succeeded.
  recurring.token.created:
    post:
      tags:
      - General
      summary: Token created
      description: Adyen sends this webhook when a token is created.
      operationId: post-recurring.token.created
      x-sortIndex: 0
      x-methodName: tokenCreated
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              recurring-token-created:
                $ref: '#/components/examples/post-recurring.token.created-recurring-token-created'
            schema:
              $ref: '#/components/schemas/TokenizationCreatedDetailsNotificationRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenizationNotificationResponse'
          description: OK - the request has succeeded.
  recurring.token.disabled:
    post:
      tags:
      - General
      summary: Token disabled
      description: Adyen sends this webhook when a token is disabled. For example,
        when you [delete stored payment details](https://docs.adyen.com/online-payments/tokenization/managing-tokens/#delete-stored-details),
        or when a third party disables the payment details.
      operationId: post-recurring.token.disabled
      x-sortIndex: 0
      x-methodName: tokenDisabled
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              recurring-token-disabled:
                $ref: '#/components/examples/post-recurring.token.disabled-recurring-token-disabled'
            schema:
              $ref: '#/components/schemas/TokenizationDisabledDetailsNotificationRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenizationNotificationResponse'
          description: OK - the request has succeeded.
  recurring.token.updated:
    post:
      tags:
      - General
      summary: Token updated
      description: Adyen sends this webhook when a token is updated, for example,
        when you [update stored details](https://docs.adyen.com/online-payments/tokenization/managing-tokens/#update-stored-details).
        Tokens can also be updated by card networks.
      operationId: post-recurring.token.updated
      x-sortIndex: 0
      x-methodName: tokenUpdated
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              recurring-token-updated:
                $ref: '#/components/examples/post-recurring.token.updated-recurring-token-updated'
            schema:
              $ref: '#/components/schemas/TokenizationUpdatedDetailsNotificationRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenizationNotificationResponse'
          description: OK - the request has succeeded.
components:
  schemas:
    RecurringToken:
      additionalProperties: false
      properties:
        merchantAccount:
          description: The identifier of the merchant account related to the event
            that triggered the webhook.
          type: string
        shopperReference:
          description: Your unique shopper reference that is associated with the `storedPaymentMethodId`.
          type: string
        storedPaymentMethodId:
          description: The ID of the token.
          type: string
        type:
          description: The type of the payment method.
          type: string
      required:
      - merchantAccount
      - shopperReference
      - type
      - storedPaymentMethodId
      type: object
    RecurringTokenStoreOperation:
      additionalProperties: false
      properties:
        merchantAccount:
          description: The identifier of the merchant account related to the event
            that triggered the webhook.
          type: string
        operation:
          description: A text description that provides details about the operation,
            intended for audit purposes.
          type: string
        shopperReference:
          description: Your unique shopper reference that is associated with the `storedPaymentMethodId`.
          type: string
        storedPaymentMethodId:
          description: The ID of the token.
          type: string
        type:
          description: The type of the payment method.
          type: string
      required:
      - merchantAccount
      - shopperReference
      - type
      - storedPaymentMethodId
      - operation
      type: object
    TokenizationAlreadyExistingDetailsNotificationRequest:
      additionalProperties: false
      properties:
        createdAt:
          description: The date and time when the event happened, in ISO 8601 extended
            format.
          example: '2024-10-29T16:15:29+01:00'
          format: date-time
          type: string
        data:
          description: Contains event details.
          $ref: '#/components/schemas/RecurringTokenStoreOperation'
        environment:
          description: 'The environment from which the webhook originated.


            Possible values: **test**, **live**.'
          enum:
          - test
          - live
          example: live
          type: string
        eventId:
          description: The PSP reference of the event that triggered the webhook.
          type: string
        type:
          description: The type of webhook.
          enum:
          - recurring.token.created
          - recurring.token.alreadyExisting
          - recurring.token.updated
          - recurring.token.disabled
          type: string
        version:
          description: The version of this entity.
          example: '1'
          type: string
      required:
      - environment
      - createdAt
      - type
      - eventId
      - data
      type: object
    TokenizationCreatedDetailsNotificationRequest:
      additionalProperties: false
      properties:
        createdAt:
          description: The date and time when the event happened, in ISO 8601 extended
            format.
          example: '2024-10-29T16:15:29+01:00'
          format: date-time
          type: string
        data:
          description: Contains event details.
          $ref: '#/components/schemas/RecurringTokenStoreOperation'
        environment:
          description: 'The environment from which the webhook originated.


            Possible values: **test**, **live**.'
          enum:
          - test
          - live
          example: live
          type: string
        eventId:
          description: The PSP reference of the event that triggered the webhook.
          type: string
        type:
          description: The type of webhook.
          enum:
          - recurring.token.created
          - recurring.token.alreadyExisting
          - recurring.token.updated
          - recurring.token.disabled
          type: string
        version:
          description: The version of this entity.
          example: '1'
          type: string
      required:
      - environment
      - createdAt
      - type
      - eventId
      - data
      type: object
    TokenizationDisabledDetailsNotificationRequest:
      additionalProperties: false
      properties:
        createdAt:
          description: The date and time when the event happened, in ISO 8601 extended
            format.
          example: '2024-10-29T16:15:29+01:00'
          format: date-time
          type: string
        data:
          description: Contains event details.
          $ref: '#/components/schemas/RecurringToken'
        environment:
          description: 'The environment from which the webhook originated.


            Possible values: **test**, **live**.'
          enum:
          - test
          - live
          example: live
          type: string
        eventId:
          description: The PSP reference of the event that triggered the webhook.
          type: string
        type:
          description: The type of webhook.
          enum:
          - recurring.token.created
          - recurring.token.alreadyExisting
          - recurring.token.updated
          - recurring.token.disabled
          type: string
        version:
          description: The version of this entity.
          example: '1'
          type: string
      required:
      - environment
      - createdAt
      - type
      - eventId
      - data
      type: object
    TokenizationNotificationResponse:
      additionalProperties: false
      properties:
        notificationResponse:
          description: Respond with any **2xx** HTTP status code to [accept the webhook](https://docs.adyen.com/development-resources/webhooks/#accept-webhooks).
          type: string
      type: object
    TokenizationUpdatedDetailsNotificationRequest:
      additionalProperties: false
      properties:
        createdAt:
          description: The date and time when the event happened, in ISO 8601 extended
            format.
          example: '2024-10-29T16:15:29+01:00'
          format: date-time
          type: string
        data:
          description: Contains event details.
          $ref: '#/components/schemas/RecurringTokenStoreOperation'
        environment:
          description: 'The environment from which the webhook originated.


            Possible values: **test**, **live**.'
          enum:
          - test
          - live
          example: live
          type: string
        eventId:
          description: The PSP reference of the event that triggered the webhook.
          type: string
        type:
          description: The type of webhook.
          enum:
          - recurring.token.created
          - recurring.token.alreadyExisting
          - recurring.token.updated
          - recurring.token.disabled
          type: string
        version:
          description: The version of this entity.
          example: '1'
          type: string
      required:
      - environment
      - createdAt
      - type
      - eventId
      - data
      type: object
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
  examples:
    post-recurring.token.alreadyExisting-recurring-token-alreadyExisting:
      summary: Token already exists
      value:
        createdAt: '2025-06-30T16:40:23+02:00'
        eventId: QBQQ9DLNRHHKGK38
        environment: test
        data:
          merchantAccount: YOUR_MERCHANT_ACCOUNT
          storedPaymentMethodId: M5N7TQ4TG5PFWR50
          type: visastandarddebit
          operation: alreadyExisting
          shopperReference: YOUR_SHOPPER_REFERENCE
        type: recurring.token.alreadyExisting
    post-recurring.token.created-recurring-token-created:
      summary: Token is created
      value:
        createdAt: '2025-06-30T16:40:23+02:00'
        eventId: QBQQ9DLNRHHKGK38
        environment: test
        data:
          merchantAccount: YOUR_MERCHANT_ACCOUNT
          storedPaymentMethodId: M5N7TQ4TG5PFWR50
          type: visastandarddebit
          operation: created
          shopperReference: YOUR_SHOPPER_REFERENCE
        type: recurring.token.created
    post-recurring.token.disabled-recurring-token-disabled:
      summary: Token is disabled
      value:
        createdAt: '2025-06-30T16:40:23+02:00'
        eventId: QBQQ9DLNRHHKGK38
        environment: test
        data:
          merchantAccount: YOUR_MERCHANT_ACCOUNT
          storedPaymentMethodId: M5N7TQ4TG5PFWR50
          type: visastandarddebit
          shopperReference: YOUR_SHOPPER_REFERENCE
        type: recurring.token.disabled
    post-recurring.token.updated-recurring-token-updated:
      summary: Token details are updated
      value:
        createdAt: '2025-06-30T16:40:23+02:00'
        eventId: QBQQ9DLNRHHKGK38
        environment: test
        data:
          merchantAccount: YOUR_MERCHANT_ACCOUNT
          storedPaymentMethodId: M5N7TQ4TG5PFWR50
          type: visastandarddebit
          operation: updated
          shopperReference: YOUR_SHOPPER_REFERENCE
        type: recurring.token.updated
