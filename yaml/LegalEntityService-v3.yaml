openapi: 3.1.0
servers:
- url: https://kyc-test.adyen.com/lem/v3
info:
  version: '3'
  x-publicVersion: true
  title: Legal Entity Management API
  description: "The Legal Entity Management API enables you to manage legal entities\
    \ that contain information required for verification. \n## Authentication\nTo\
    \ connect to the Legal Entity Management API, you must use the basic authentication\
    \ credentials of your web service user. If you don't have one, contact the [Adyen\
    \ Support Team](https://www.adyen.help/hc/en-us/requests/new). Use the web service\
    \ user credentials to authenticate your request, for example:\n\n```\ncurl\n-U\
    \ \"ws12345@Scope.BalancePlatform_YourBalancePlatform\":\"YourWsPassword\" \\\n\
    -H \"Content-Type: application/json\" \\\n...\n```\nNote that when going live,\
    \ you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).\n\
    \n## Versioning\nThe Legal Entity Management API supports versioning of its endpoints\
    \ through a version suffix in the endpoint URL. This suffix has the following\
    \ format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://kyc-test.adyen.com/lem/v1/legalEntities\n\
    ```\n## Going live\nWhen going live, your Adyen contact will provide your API\
    \ credential for the live environment. You can then use the username and password\
    \ to send requests to `https://kyc-live.adyen.com/lem/v1`.\n\n"
  x-timestamp: '2022-09-08T12:24:10Z'
  termsOfService: https://www.adyen.com/legal/terms-and-conditions
  contact:
    name: Adyen Developer Experience team
    url: https://www.adyen.help/hc/en-us/community/topics
    email: developer-experience@adyen.com
x-groups:
- Legal entities
- Transfer instruments
- Business lines
- Documents
- Hosted Onboarding Page
tags:
- name: Legal entities
- name: Hosted Onboarding Page
- name: Business lines
- name: Documents
- name: Transfer instruments
paths:
  /businessLines:
    post:
      tags:
      - Business lines
      summary: Create a business line
      description: "Creates a business line. \n\nThis resource contains information\
        \ about your user's line of business, including their industry and their source\
        \ of funds. Adyen uses this information to verify your users as required by\
        \ payment industry regulations. Adyen informs you of the verification results\
        \ through webhooks or API responses."
      x-addedInVersion: '1'
      operationId: post-businessLines
      x-groupName: Business lines
      x-sortIndex: 12
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              createBusinessLines-businessAccounts:
                $ref: '#/components/examples/post-businessLines-createBusinessLines-businessAccounts'
              createBusinessLines-receive:
                $ref: '#/components/examples/post-businessLines-createBusinessLines-receive'
            schema:
              $ref: '#/components/schemas/BusinessLineInfo'
      responses:
        '200':
          content:
            application/json:
              examples:
                createBusinessLines-businessAccounts:
                  $ref: '#/components/examples/post-businessLines-createBusinessLines-businessAccounts-200'
                createBusinessLines-receive:
                  $ref: '#/components/examples/post-businessLines-createBusinessLines-receive-200'
              schema:
                $ref: '#/components/schemas/BusinessLine'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /businessLines/{id}:
    get:
      tags:
      - Business lines
      summary: Get a business line
      description: Returns the detail of a business line.
      x-addedInVersion: '1'
      operationId: get-businessLines-id
      x-groupName: Business lines
      x-sortIndex: 13
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the business line.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessLine'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
    patch:
      tags:
      - Business lines
      summary: Update a business line
      description: Updates a business line.
      x-addedInVersion: '2'
      operationId: patch-businessLines-id
      x-groupName: Business lines
      x-sortIndex: 15
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessLineInfoUpdate'
      parameters:
      - description: The unique identifier of the business line.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessLine'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /documents:
    post:
      tags:
      - Documents
      summary: Upload a document for verification checks
      description: "Uploads a document for verification checks.\n\n Adyen uses the\
        \ information from the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities)\
        \ to run automated verification checks. If these checks fail, you will be\
        \ notified to provide additional documents.\n\n You should only upload documents\
        \ when Adyen requests additional information for the legal entity. "
      x-addedInVersion: '1'
      operationId: post-documents
      x-groupName: Documents
      x-sortIndex: 4
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /documents/{id}:
    delete:
      tags:
      - Documents
      summary: Delete a document
      description: Deletes a document.
      x-addedInVersion: '1'
      operationId: delete-documents-id
      x-groupName: Documents
      x-sortIndex: 7
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the document to be deleted.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoidResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
    get:
      tags:
      - Documents
      summary: Get a document
      description: Returns a document.
      x-addedInVersion: '1'
      operationId: get-documents-id
      x-groupName: Documents
      x-sortIndex: 5
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the document.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
    patch:
      tags:
      - Documents
      summary: Update a document
      description: Updates a document.
      x-addedInVersion: '1'
      operationId: patch-documents-id
      x-groupName: Documents
      x-sortIndex: 6
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
      parameters:
      - description: The unique identifier of the document to be updated.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities:
    post:
      tags:
      - Legal entities
      summary: Create a legal entity
      description: "Creates a legal entity. \n\nThis resource contains information\
        \ about the user that will be onboarded in your platform. Adyen uses this\
        \ information to perform verification checks as required by payment industry\
        \ regulations. Adyen informs you of the verification results through webhooks\
        \ or API responses. \n\n"
      x-addedInVersion: '1'
      operationId: post-legalEntities
      x-groupName: Legal entities
      x-sortIndex: 1
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              createLegalEntityIndividualNL:
                $ref: '#/components/examples/post-legalEntities-createLegalEntityIndividualNL'
              createLegalEntityIndividualUS:
                $ref: '#/components/examples/post-legalEntities-createLegalEntityIndividualUS'
              createLegalEntityOrganizationNL:
                $ref: '#/components/examples/post-legalEntities-createLegalEntityOrganizationNL'
              createLegalEntityOrganizationUS:
                $ref: '#/components/examples/post-legalEntities-createLegalEntityOrganizationUS'
              createLegalEntitySolePropNL:
                $ref: '#/components/examples/post-legalEntities-createLegalEntitySolePropNL'
              createLegalEntitySolePropUS:
                $ref: '#/components/examples/post-legalEntities-createLegalEntitySolePropUS'
            schema:
              $ref: '#/components/schemas/LegalEntityInfo'
      responses:
        '200':
          content:
            application/json:
              examples:
                createLegalEntityIndividualNL:
                  $ref: '#/components/examples/post-legalEntities-createLegalEntityIndividualNL-200'
                createLegalEntityIndividualUS:
                  $ref: '#/components/examples/post-legalEntities-createLegalEntityIndividualUS-200'
                createLegalEntityOrganizationNL:
                  $ref: '#/components/examples/post-legalEntities-createLegalEntityOrganizationNL-200'
                createLegalEntityOrganizationUS:
                  $ref: '#/components/examples/post-legalEntities-createLegalEntityOrganizationUS-200'
                createLegalEntitySolePropNL:
                  $ref: '#/components/examples/post-legalEntities-createLegalEntitySolePropNL-200'
                createLegalEntitySolePropUS:
                  $ref: '#/components/examples/post-legalEntities-createLegalEntitySolePropUS-200'
              schema:
                $ref: '#/components/schemas/LegalEntity'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}:
    get:
      tags:
      - Legal entities
      summary: Get a legal entity
      description: Returns a legal entity.
      x-addedInVersion: '1'
      operationId: get-legalEntities-id
      x-groupName: Legal entities
      x-sortIndex: 2
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the legal entity.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntity'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
    patch:
      tags:
      - Legal entities
      summary: Update a legal entity
      description: "Updates a legal entity.\n\n >To update the `entityAssociations`\
        \ array, you need to replace the entire array. For example, if the array has\
        \ 3 entries and you want to remove 1 entry, you need to PATCH the resource\
        \ with the remaining 2 entries."
      x-addedInVersion: '1'
      operationId: patch-legalEntities-id
      x-groupName: Legal entities
      x-sortIndex: 3
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericEntityInfo'
      parameters:
      - description: The unique identifier of the legal entity.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntity'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}/businessLines:
    get:
      tags:
      - Legal entities
      summary: Get all business lines under a legal entity
      description: Returns the business lines owned by a legal entity.
      x-addedInVersion: '1'
      operationId: get-legalEntities-id-businessLines
      x-groupName: Legal entities
      x-sortIndex: 4
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the legal entity.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessLines'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}/onboardingLinks:
    post:
      tags:
      - Hosted Onboarding Page
      summary: Get a link to an Adyen-hosted onboarding page
      description: Returns a link to an Adyen-hosted onboarding page where you need
        to redirect your user.
      x-addedInVersion: '1'
      operationId: post-legalEntities-id-onboardingLinks
      x-groupName: Hosted Onboarding Page
      x-sortIndex: 1
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardingLinkInfo'
      parameters:
      - description: The unique identifier of the legal entity
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingLink'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /themes:
    get:
      tags:
      - Hosted Onboarding Page
      summary: Get a list of hosted onboarding page themes
      description: Returns a list of hosted onboarding page themes.
      x-addedInVersion: '1'
      operationId: get-themes
      x-groupName: Hosted Onboarding Page
      x-sortIndex: 2
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingThemes'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /themes/{id}:
    get:
      tags:
      - Hosted Onboarding Page
      summary: Get an onboarding link theme
      description: Returns the details of the theme identified in the path.
      x-addedInVersion: '1'
      operationId: get-themes-id
      x-groupName: Hosted Onboarding Page
      x-sortIndex: 4
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the theme
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingTheme'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /transferInstruments:
    post:
      tags:
      - Transfer instruments
      summary: Create a transfer instrument
      description: "Creates a transfer instrument. \n\nA transfer instrument is a\
        \ bank account or other payment details that a legal entity owns. Adyen performs\
        \ verification checks on the transfer instrument as required by payment industry\
        \ regulations. We inform you of the verification results through webhooks\
        \ or API responses.\n\nWhen the transfer instrument passes the verification\
        \ checks, you can start sending funds from the balance platform to the transfer\
        \ instrument (such as payouts)."
      x-addedInVersion: '1'
      operationId: post-transferInstruments
      x-groupName: Transfer instruments
      x-sortIndex: 8
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              createTransferInstrumentEUR:
                $ref: '#/components/examples/post-transferInstruments-createTransferInstrumentEUR'
              createTransferInstrumentUSD:
                $ref: '#/components/examples/post-transferInstruments-createTransferInstrumentUSD'
            schema:
              $ref: '#/components/schemas/TransferInstrumentInfo'
      responses:
        '200':
          content:
            application/json:
              examples:
                createTransferInstrumentEUR:
                  $ref: '#/components/examples/post-transferInstruments-createTransferInstrumentEUR-200'
                createTransferInstrumentUSD:
                  $ref: '#/components/examples/post-transferInstruments-createTransferInstrumentUSD-200'
              schema:
                $ref: '#/components/schemas/TransferInstrument'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /transferInstruments/{id}:
    delete:
      tags:
      - Transfer instruments
      summary: Delete a transfer instrument
      description: Deletes a transfer instrument.
      x-addedInVersion: '1'
      operationId: delete-transferInstruments-id
      x-groupName: Transfer instruments
      x-sortIndex: 11
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the transfer instrument to be deleted.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoidResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
    get:
      tags:
      - Transfer instruments
      summary: Get a transfer instrument
      description: Returns the details of a transfer instrument.
      x-addedInVersion: '1'
      operationId: get-transferInstruments-id
      x-groupName: Transfer instruments
      x-sortIndex: 9
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the transfer instrument.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferInstrument'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
    patch:
      tags:
      - Transfer instruments
      summary: Update a transfer instrument
      description: Updates a transfer instrument.
      x-addedInVersion: '1'
      operationId: patch-transferInstruments-id
      x-groupName: Transfer instruments
      x-sortIndex: 10
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferInstrumentInfo'
      parameters:
      - description: The unique identifier of the transfer instrument.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferInstrument'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
components:
  schemas:
    AULocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The bank account number (without separators or whitespace).
          maxLength: 9
          minLength: 5
          type: string
        bsbCode:
          description: The 6-digit [Bank State Branch (BSB) code](https://en.wikipedia.org/wiki/Bank_state_branch)
            (without separators or spaces).
          maxLength: 6
          minLength: 6
          type: string
        type:
          default: auLocal
          description: '**auLocal**'
          enum:
          - auLocal
          type: string
      required:
      - accountNumber
      - bsbCode
    AdditionalBankIdentification:
      properties:
        code:
          description: The value of the additional bank identification.
          type: string
        type:
          description: "The type of additional bank identification, depending on the\
            \ country.\n\nPossible values:\n\n * **gbSortCode**: The 6-digit [UK sort\
            \ code](https://en.wikipedia.org/wiki/Sort_code), without separators or\
            \ spaces\n * **usRoutingNumber**: The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number),\
            \ without separators or spaces."
          enum:
          - gbSortCode
          - usRoutingNumber
          type: string
    Address:
      properties:
        city:
          description: 'The name of the city. Required if `stateOrProvince` is provided.


            If you specify the city, you must also send `postalCode` and `street`.'
          type: string
        country:
          description: The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country code.
          type: string
        postalCode:
          description: Postal code. Required if `stateOrProvince` and/or `city` is
            provided.
          type: string
        stateOrProvince:
          description: "The two-letter ISO 3166-2 state or province code. For example,\
            \ **CA** in the US. \n\nIf you specify the state or province, you must\
            \ also send `city`, `postalCode`, and `street`."
          type: string
        street:
          description: The name of the street, and the house or building number. Required
            if `stateOrProvince` and/or `city` is provided.
          type: string
        street2:
          description: The apartment, unit, or suite number.
          type: string
      required:
      - country
    Attachment:
      properties:
        content:
          description: The document in Base64-encoded string format.
          format: byte
          type: string
        contentType:
          deprecated: true
          x-deprecatedInVersion: '1'
          description: "The file format.\n\n Possible values: **application/pdf**,\
            \ **image/jpg**, **image/jpeg**, **image/png**. "
          type: string
        filename:
          deprecated: true
          x-deprecatedInVersion: '1'
          description: The name of the file including the file extension.
          type: string
        pageName:
          x-addedInVersion: '2'
          description: The name of the file including the file extension.
          type: string
        pageType:
          description: 'Specifies which side of the ID card is uploaded.


            * When `type` is **driversLicense**, set this to **front** or **back**.


            * When omitted, we infer the page number based on the order of attachments.'
          type: string
      required:
      - content
    BankAccountInfo:
      properties:
        accountIdentification:
          x-addedInVersion: '3'
          description: Identification of the bank account.
          oneOf:
          - $ref: '#/components/schemas/AULocalAccountIdentification'
          - $ref: '#/components/schemas/CZLocalAccountIdentification'
          - $ref: '#/components/schemas/HULocalAccountIdentification'
          - $ref: '#/components/schemas/IbanAccountIdentification'
          - $ref: '#/components/schemas/NOLocalAccountIdentification'
          - $ref: '#/components/schemas/NumberAndBicAccountIdentification'
          - $ref: '#/components/schemas/PLLocalAccountIdentification'
          - $ref: '#/components/schemas/SELocalAccountIdentification'
          - $ref: '#/components/schemas/UKLocalAccountIdentification'
          - $ref: '#/components/schemas/USLocalAccountIdentification'
        accountType:
          deprecated: true
          x-deprecatedInVersion: '2'
          description: The type of bank account.
          type: string
        countryCode:
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country code where the bank account is registered. For example, **NL**.
          type: string
      required:
      - countryCode
    BirthData:
      properties:
        dateOfBirth:
          description: The individual's date of birth, in YYYY-MM-DD format.
          type: string
    BusinessLine:
      properties:
        capability:
          description: The capability for which you are creating the business line.
            For example, **receivePayments**.
          type: string
        id:
          description: The unique identifier of the business line.
          readOnly: true
          type: string
        industryCode:
          description: A code that represents the industry of the legal entity. For
            example, **4431A** for computer software stores.
          type: string
        legalEntityId:
          description: Unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id)
            that owns the business line.
          type: string
        salesChannels:
          description: 'A list of channels where goods or services are sold. You cannot
            combine point of sale and ecommerce in one business line.


            Possible values and combinations:


            - For point of sale: **pos** and **posMoto**


            - For ecommerce: **eCommerce** and **ecomMoto**


            - For Pay by Link: **payByLink**


            Required only in combination with the `capability` to **receivePayments**
            or **receiveFromPlatformPayments**.'
          items:
            type: string
          type: array
        sourceOfFunds:
          description: Contains information about the source of your user's funds.
            Required only for the `capability` to **issueBankAccount**.
          $ref: '#/components/schemas/SourceOfFunds'
        webData:
          description: List of website URLs where your user's goods or services are
            sold. When this is required for a capability but your user does not have
            an online presence, provide the reason in the `webDataExemption` object.
          items:
            $ref: '#/components/schemas/WebData'
          type: array
        webDataExemption:
          description: The reason why the web data is not provided.
          $ref: '#/components/schemas/WebDataExemption'
      required:
      - capability
      - industryCode
      - legalEntityId
      - id
    BusinessLineInfo:
      properties:
        capability:
          description: The capability for which you are creating the business line.
            For example, **receivePayments**.
          type: string
        industryCode:
          description: A code that represents the industry of the legal entity. For
            example, **4431A** for computer software stores.
          type: string
        legalEntityId:
          description: Unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id)
            that owns the business line.
          type: string
        salesChannels:
          description: 'A list of channels where goods or services are sold. You cannot
            combine point of sale and ecommerce in one business line.


            Possible values and combinations:


            - For point of sale: **pos** and **posMoto**


            - For ecommerce: **eCommerce** and **ecomMoto**


            - For Pay by Link: **payByLink**


            Required only in combination with the `capability` to **receivePayments**
            or **receiveFromPlatformPayments**.'
          items:
            type: string
          type: array
        sourceOfFunds:
          description: Contains information about the source of your user's funds.
            Required only for the `capability` to **issueBankAccount**.
          $ref: '#/components/schemas/SourceOfFunds'
        webData:
          description: List of website URLs where your user's goods or services are
            sold. When this is required for a capability but your user does not have
            an online presence, provide the reason in the `webDataExemption` object.
          items:
            $ref: '#/components/schemas/WebData'
          type: array
        webDataExemption:
          description: The reason why the web data is not provided.
          $ref: '#/components/schemas/WebDataExemption'
      required:
      - capability
      - industryCode
      - legalEntityId
    BusinessLineInfoUpdate:
      properties:
        capability:
          description: The capability for which you are creating the business line.
            For example, **receivePayments**.
          type: string
        industryCode:
          description: A code that represents the industry of your legal entity. For
            example, **4431A** for computer software stores.
          type: string
        legalEntityId:
          description: Unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id)
            that owns the business line.
          type: string
        salesChannels:
          description: 'A list of channels where goods or services are sold. You cannot
            combine point of sale and ecommerce in one business line.


            Possible values and combinations:


            - For point of sale: **pos** and **posMoto**


            - For ecommerce: **eCommerce** and **ecomMoto**


            - For Pay by Link: **payByLink**


            Required only in combination with the `capability` to **receivePayments**
            or **receiveFromPlatformPayments**.'
          items:
            type: string
          type: array
        sourceOfFunds:
          description: Contains information about the source of your user's funds.
            Required only for the `capability` to **issueBankAccount**.
          $ref: '#/components/schemas/SourceOfFunds'
        webData:
          description: List of website URLs where your user's goods or services are
            sold. When this is required for a capability but your user does not have
            an online presence, provide the reason in the `webDataExemption` object.
          items:
            $ref: '#/components/schemas/WebData'
          type: array
        webDataExemption:
          description: The reason why the web data is not provided.
          $ref: '#/components/schemas/WebDataExemption'
    BusinessLines:
      properties:
        businessLines:
          description: List of business lines.
          items:
            $ref: '#/components/schemas/BusinessLine'
          type: array
      required:
      - businessLines
    CZLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: "The 2-16 digit bank account number (\u010C\xEDslo \xFA\u010D\
            tu) in the following format:\n\n- The optional prefix (p\u0159ed\u010D\
            \xEDsl\xED).\n\n- The required second part (z\xE1kladn\xED \u010D\xE1\
            st) which must be at least two non-zero digits.\n\nExamples:\n\n- **19-123457**\
            \ (with prefix)\n\n- **123457** (without prefix)\n\n- **000019-0000123457**\
            \ (with prefix, normalized)\n\n- **000000-0000123457** (without prefix,\
            \ normalized)"
          maxLength: 17
          minLength: 2
          type: string
        bankCode:
          description: "The 4-digit bank code (K\xF3d banky), without separators or\
            \ whitespace."
          maxLength: 4
          minLength: 4
          type: string
        type:
          default: czLocal
          description: '**czLocal**'
          enum:
          - czLocal
          type: string
      required:
      - accountNumber
      - bankCode
    Document:
      properties:
        attachment:
          deprecated: true
          x-deprecatedInVersion: '1'
          x-deprecatedMessage: Use the `attachments` array instead.
          description: Object that contains the document.
          $ref: '#/components/schemas/Attachment'
        attachments:
          description: Array that contains the document. The array supports multiple
            attachments for uploading different sides or pages of a document.
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
        description:
          description: Your description for the document.
          type: string
        expiryDate:
          deprecated: true
          x-deprecatedInVersion: '1'
          description: The expiry date of the document, in YYYY-MM-DD format.
          type: string
        fileName:
          description: The filename of the document.
          type: string
        id:
          description: The unique identifier of the document.
          readOnly: true
          type: string
        issuerCountry:
          deprecated: true
          x-deprecatedInVersion: '1'
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country code where the document was issued. For example, **US**.
          type: string
        issuerState:
          deprecated: true
          x-deprecatedInVersion: '1'
          description: The state or province where the document was issued (AU only).
          type: string
        number:
          description: The number in the document.
          type: string
        owner:
          description: Contains information about the resource that owns the document.
          $ref: '#/components/schemas/OwnerEntity'
        type:
          description: "Type of document, used when providing an ID number or uploading\
            \ a document. The possible values depend on the legal entity type.\n\n\
            When providing ID numbers:\n* For **individual**, the `type` values can\
            \ be **driversLicense**, **identityCard**, **nationalIdNumber**, or **passport**.\n\
            \nWhen uploading documents:\n* For **organization**, the `type` values\
            \ can be **proofOfAddress**, **registrationDocument**, **vatDocument**,\
            \ **proofOfOrganizationTaxInfo**, or **proofOfIndustry**. \n\n* For **individual**,\
            \ the `type` values can be **identityCard**, **driversLicense**, **passport**,\
            \ **proofOfNationalIdNumber**, **proofOfResidency**, **proofOfIndustry**,\
            \ or **proofOfIndividualTaxId**.\n\n* For **soleProprietorship**, the\
            \ `type` values can be **constitutionalDocument**, **proofOfAddress**,\
            \ or **proofOfIndustry**.\n\n* Use **bankStatement** to upload documents\
            \ for a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id)."
          enum:
          - bankStatement
          - driversLicense
          - identityCard
          - nationalIdNumber
          - passport
          - proofOfAddress
          - proofOfNationalIdNumber
          - proofOfResidency
          - registrationDocument
          - vatDocument
          - proofOfOrganizationTaxInfo
          - proofOfIndustry
          - constitutionalDocument
          type: string
      required:
      - type
      - description
      - owner
      - attachments
      - id
    DocumentReference:
      properties:
        active:
          description: Identifies whether the document is active and used for checks.
          type: boolean
        fileName:
          description: Document name.
          type: string
        id:
          description: The unique identifier of the resource.
          type: string
    EntityReference:
      properties:
        id:
          description: The unique identifier of the resource.
          type: string
    GenericEntityInfo:
      properties:
        entityAssociations:
          description: 'List of legal entities associated with the current legal entity.

            For example, ultimate beneficial owners associated with an organization
            through ownership or control, or as signatories.'
          items:
            $ref: '#/components/schemas/LegalEntityAssociation'
          type: array
        individual:
          description: Information about the individual. Required if `type` is **individual**.
          $ref: '#/components/schemas/Individual'
        organization:
          description: Information about the organization. Required if `type` is **organization**.
          $ref: '#/components/schemas/Organization'
        soleProprietorship:
          x-addedInVersion: '2'
          description: Information about the sole proprietorship. Required if `type`
            is **soleProprietorship**.
          $ref: '#/components/schemas/SoleProprietorship'
    HULocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 24-digit bank account number without separators, or whitespace.
          maxLength: 24
          minLength: 24
          type: string
        type:
          default: huLocal
          description: '**huLocal**'
          enum:
          - huLocal
          type: string
      required:
      - accountNumber
    IbanAccountIdentification:
      additionalProperties: false
      properties:
        iban:
          description: The international bank account number as defined in the [ISO-13616](https://www.iso.org/standard/81090.html)
            standard.
          type: string
        type:
          default: iban
          description: '**iban**'
          enum:
          - iban
          type: string
      required:
      - iban
    IdentificationData:
      properties:
        expiryDate:
          deprecated: true
          x-deprecatedInVersion: '1'
          description: The expiry date of the document, in YYYY-MM-DD format.
          type: string
        issuerCountry:
          deprecated: true
          x-deprecatedInVersion: '1'
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country code where the document was issued. For example, **US**.
          type: string
        issuerState:
          description: The state or province where the document was issued (AU only).
          type: string
        nationalIdExempt:
          description: Applies only to individuals in the US. Set to **true** if the
            individual does not have an SSN. To verify their identity, Adyen will
            require them to upload an ID document.
          type: boolean
        number:
          description: The number in the document.
          type: string
        type:
          description: "Type of document, used when providing an ID number or uploading\
            \ a document. The possible values depend on the legal entity type.\n\n\
            When providing ID numbers:\n* For **individual**, the `type` values can\
            \ be **driversLicense**, **identityCard**, **nationalIdNumber**, or **passport**.\n\
            \nWhen uploading documents:\n* For **organization**, the `type` values\
            \ can be **proofOfAddress**, **registrationDocument**, **vatDocument**,\
            \ **proofOfOrganizationTaxInfo**, or **proofOfIndustry**. \n\n* For **individual**,\
            \ the `type` values can be **identityCard**, **driversLicense**, **passport**,\
            \ **proofOfNationalIdNumber**, **proofOfResidency**, **proofOfIndustry**,\
            \ or **proofOfIndividualTaxId**.\n\n* For **soleProprietorship**, the\
            \ `type` values can be **constitutionalDocument**, **proofOfAddress**,\
            \ or **proofOfIndustry**.\n\n* Use **bankStatement** to upload documents\
            \ for a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id)."
          enum:
          - bankStatement
          - driversLicense
          - identityCard
          - nationalIdNumber
          - passport
          - proofOfAddress
          - proofOfNationalIdNumber
          - proofOfResidency
          - registrationDocument
          - vatDocument
          - proofOfOrganizationTaxInfo
          - proofOfIndustry
          - constitutionalDocument
          type: string
      required:
      - type
    Individual:
      properties:
        birthData:
          description: The individual's birth information.
          $ref: '#/components/schemas/BirthData'
        email:
          description: The email address of the legal entity.
          type: string
        identificationData:
          description: Information about the individual's identification document.
          $ref: '#/components/schemas/IdentificationData'
        name:
          description: The individual's name.
          $ref: '#/components/schemas/Name'
        nationality:
          description: The individual's nationality.
          type: string
        phone:
          description: The phone number of the legal entity.
          $ref: '#/components/schemas/PhoneNumber'
        residentialAddress:
          description: The residential address of the individual.
          $ref: '#/components/schemas/Address'
        taxInformation:
          x-addedInVersion: '2'
          description: The tax information of the organization.
          items:
            $ref: '#/components/schemas/TaxInformation'
          type: array
        webData:
          deprecated: true
          x-deprecatedInVersion: '1'
          description: The website and app URL of the legal entity.
          $ref: '#/components/schemas/WebData'
      required:
      - name
      - residentialAddress
    LegalEntity:
      properties:
        documentDetails:
          x-addedInVersion: '2'
          description: List of documents uploaded for the legal entity.
          items:
            $ref: '#/components/schemas/DocumentReference'
          type: array
        documents:
          deprecated: true
          x-deprecatedInVersion: '1'
          x-deprecatedMessage: Use the `documentDetails` array instead.
          description: List of documents uploaded for the legal entity.
          items:
            $ref: '#/components/schemas/EntityReference'
          type: array
        entityAssociations:
          description: 'List of legal entities associated with the current legal entity.

            For example, ultimate beneficial owners associated with an organization
            through ownership or control, or as signatories.'
          items:
            $ref: '#/components/schemas/LegalEntityAssociation'
          type: array
        id:
          description: The unique identifier of the legal entity.
          readOnly: true
          type: string
        individual:
          description: Information about the individual. Required if `type` is **individual**.
          $ref: '#/components/schemas/Individual'
        organization:
          description: Information about the organization. Required if `type` is **organization**.
          $ref: '#/components/schemas/Organization'
        reference:
          description: Your reference for the legal entity, maximum 150 characters.
          maxLength: 150
          type: string
        soleProprietorship:
          x-addedInVersion: '2'
          description: Information about the sole proprietorship. Required if `type`
            is **soleProprietorship**.
          $ref: '#/components/schemas/SoleProprietorship'
        transferInstruments:
          description: List of transfer instruments owned by the legal entity.
          items:
            $ref: '#/components/schemas/EntityReference'
          type: array
        type:
          description: "The type of legal entity.\n\n Possible values: **individual**,\
            \ **organization**, or **soleProprietorship**."
          enum:
          - individual
          - organization
          - soleProprietorship
          - trust
          - unincorporatedPartnership
          type: string
      required:
      - type
      - id
    LegalEntityAssociation:
      properties:
        associatorId:
          description: The unique identifier of another legal entity with which the
            `legalEntityId` is associated. When the `legalEntityId` is associated
            to legal entities other than the current one, the response returns all
            the associations.
          readOnly: true
          type: string
        entityType:
          description: "The legal entity type of associated legal entity. \n\nFor\
            \ example, **organization**, **soleProprietorship** or **individual**. "
          readOnly: true
          type: string
        jobTitle:
          description: The individual's job title if the `type` is **uboThroughControl**
            or **signatory**.
          type: string
        legalEntityId:
          description: The unique identifier of the associated [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id).
          type: string
        name:
          description: 'The name of the associated [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id).


            - For **individual**, `name.firstName` and `name.lastName`.

            - For **organization**, `legalName`.

            - For **soleProprietorship**, `name`.'
          readOnly: true
          type: string
        type:
          description: "Defines the relationship of the legal entity to the current\
            \ legal entity. \n\nFor example, **uboThroughOwnership**, **uboThroughControl**,\
            \ or **signatory**. "
          enum:
          - signatory
          - uboThroughControl
          - uboThroughOwnership
          type: string
      required:
      - legalEntityId
      - type
    LegalEntityInfo:
      properties:
        entityAssociations:
          description: 'List of legal entities associated with the current legal entity.

            For example, ultimate beneficial owners associated with an organization
            through ownership or control, or as signatories.'
          items:
            $ref: '#/components/schemas/LegalEntityAssociation'
          type: array
        individual:
          description: Information about the individual. Required if `type` is **individual**.
          $ref: '#/components/schemas/Individual'
        organization:
          description: Information about the organization. Required if `type` is **organization**.
          $ref: '#/components/schemas/Organization'
        reference:
          description: Your reference for the legal entity, maximum 150 characters.
          maxLength: 150
          type: string
        soleProprietorship:
          x-addedInVersion: '2'
          description: Information about the sole proprietorship. Required if `type`
            is **soleProprietorship**.
          $ref: '#/components/schemas/SoleProprietorship'
        type:
          description: "The type of legal entity.\n\n Possible values: **individual**,\
            \ **organization**, or **soleProprietorship**."
          enum:
          - individual
          - organization
          - soleProprietorship
          - trust
          - unincorporatedPartnership
          type: string
      required:
      - type
    NOLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 11 digit bank account number without separators, or whitespace.
          maxLength: 11
          minLength: 11
          type: string
        type:
          default: noLocal
          description: '**noLocal**'
          enum:
          - noLocal
          type: string
      required:
      - accountNumber
    Name:
      properties:
        firstName:
          description: The individual's first name.
          type: string
        infix:
          description: The infix in the individual's name, if any.
          type: string
        lastName:
          description: The individual's last name.
          type: string
      required:
      - firstName
      - lastName
    NumberAndBicAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The bank account number, without separators or whitespace.
            The length and format depends on the bank or country.
          maxLength: 34
          type: string
        additionalBankIdentification:
          description: Additional identification codes of the bank. Some banks may
            require these identifiers for cross-border transfers.
          $ref: '#/components/schemas/AdditionalBankIdentification'
        bic:
          description: The bank's 8 or 11 character BIC or SWIFT code.
          maxLength: 11
          minLength: 8
          type: string
        type:
          default: numberAndBic
          description: '**numberAndBic**'
          enum:
          - numberAndBic
          type: string
      required:
      - accountNumber
      - bic
    OnboardingLink:
      properties:
        url:
          description: 'The URL of the hosted onboarding page where you need to redirect
            your user. This URL expires after 4 minutes and can only be used once.


            If the link expires, you need to create a new link.'
          type: string
    OnboardingLinkInfo:
      properties:
        locale:
          description: "The language that will be used for the page, specified by\
            \ a combination of two letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)\
            \ language and [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
            \ country codes. Possible values: **cs-CZ**, **de-DE**, **en-US**, **es-ES**,\
            \ **it-IT**, **nl-NL**, **no-NO**, **pl-PL**, **pt-PT**, **sv-SE**. \n\
            \nIf not specified in the request or if the language is not supported,\
            \ the page uses the browser language. If the browser language is not supported,\
            \ the page uses **en-US** by default."
          type: string
        redirectUrl:
          description: The URL where the user is redirected after they complete hosted
            onboarding.
          type: string
        themeId:
          description: The unique identifier of the hosted onboarding theme.
          type: string
    OnboardingTheme:
      properties:
        createdAt:
          description: The creation date of the theme.
          format: date-time
          type: string
        description:
          description: The description of the theme.
          type: string
        id:
          description: The unique identifier of the theme.
          type: string
        properties:
          additionalProperties:
            type: string
          description: The properties of the theme.
          type: object
        updatedAt:
          description: The date when the theme was last updated.
          format: date-time
          type: string
      required:
      - properties
      - id
      - createdAt
    OnboardingThemes:
      properties:
        next:
          description: The next page. Only present if there is a next page.
          type: string
        previous:
          description: The previous page. Only present if there is a previous page.
          type: string
        themes:
          items:
            $ref: '#/components/schemas/OnboardingTheme'
          type: array
      required:
      - themes
    Organization:
      properties:
        description:
          description: Your description for the organization.
          type: string
        doingBusinessAs:
          description: The organization's trading name, if different from the registered
            legal name.
          type: string
        email:
          description: The email address of the legal entity.
          type: string
        legalName:
          description: The organization's legal name.
          type: string
        phone:
          description: The phone number of the legal entity.
          $ref: '#/components/schemas/PhoneNumber'
        principalPlaceOfBusiness:
          description: The address where the organization operates from. Provide this
            if the principal place of business is different from the `registeredAddress`.
          $ref: '#/components/schemas/Address'
        registeredAddress:
          description: The address of the organization registered at their registrar
            (such as the Chamber of Commerce).
          $ref: '#/components/schemas/Address'
        registrationNumber:
          description: The organization's registration number.
          type: string
        stockData:
          description: Information about the organization's publicly traded stock.
            Provide this object only if `type` is **listedPublicCompany**.
          $ref: '#/components/schemas/StockData'
        taxInformation:
          x-addedInVersion: '2'
          description: The tax information of the organization.
          items:
            $ref: '#/components/schemas/TaxInformation'
          type: array
        taxReportingClassification:
          x-addedInVersion: '2'
          description: The tax reporting classification (FATCA/CRS self-certification)
            of the organization.
          $ref: '#/components/schemas/TaxReportingClassification'
        type:
          description: "Type of organization. \n\nPossible values: **associationIncorporated**,\
            \ **governmentalOrganization**, **listedPublicCompany**, **nonProfit**,\
            \ **partnershipIncorporated**, **privateCompany**."
          enum:
          - associationIncorporated
          - governmentalOrganization
          - listedPublicCompany
          - nonProfit
          - partnershipIncorporated
          - privateCompany
          type: string
        vatAbsenceReason:
          x-addedInVersion: '2'
          description: 'The reason the organization has not provided a VAT number.


            Possible values: **industryExemption**, **belowTaxThreshold**.'
          enum:
          - industryExemption
          - belowTaxThreshold
          type: string
        vatNumber:
          x-addedInVersion: '2'
          description: The organization's VAT number.
          type: string
        webData:
          deprecated: true
          x-deprecatedInVersion: '1'
          description: The website and app URL of the legal entity.
          $ref: '#/components/schemas/WebData'
      required:
      - legalName
      - type
      - registeredAddress
    OwnerEntity:
      properties:
        id:
          description: Unique identifier of the resource that owns the document. For
            `type` **legalEntity**, this value is the unique identifier of the [legal
            entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id).
            For `type` **bankAccount**, this value is the unique identifier of the
            [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id).
          type: string
        type:
          description: 'Type of resource that owns the document.


            Possible values: **legalEntity**, **bankAccount**.'
          type: string
      required:
      - id
      - type
    PLLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 26-digit bank account number ([Numer rachunku](https://pl.wikipedia.org/wiki/Numer_Rachunku_Bankowego)),
            without separators or whitespace.
          maxLength: 26
          minLength: 26
          type: string
        type:
          default: plLocal
          description: '**plLocal**'
          enum:
          - plLocal
          type: string
      required:
      - accountNumber
    PhoneNumber:
      properties:
        number:
          description: The full phone number, including the country code. For example,
            **+3112345678**.
          type: string
        type:
          description: "The type of phone number.\n Possible values: **mobile**, **landline**,\
            \ **sip**, **fax.** "
          type: string
      required:
      - number
    RecurringDetail:
      properties:
        merchantAccount:
          description: The merchant account used when the payment details were stored.
          type: string
        reference:
          description: The `recurringDetailReference` returned in the response when
            the payment details were stored.
          type: string
        shopperReference:
          description: The unique identifier used when the payment details were stored.
          type: string
    SELocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 7-10 digit bank account number ([Bankkontonummer](https://sv.wikipedia.org/wiki/Bankkonto))
            without the clearing number, separators, or whitespace.
          maxLength: 10
          minLength: 7
          type: string
        clearingNumber:
          description: The 4-5 digit clearing number ([Clearingnummer](https://sv.wikipedia.org/wiki/Clearingnummer)),
            without separators or spaces.
          maxLength: 5
          minLength: 4
          type: string
        type:
          default: seLocal
          description: '**seLocal**'
          enum:
          - seLocal
          type: string
      required:
      - accountNumber
      - clearingNumber
    ServiceError:
      properties:
        errorCode:
          description: The error code mapped to the error message.
          type: string
        errorType:
          description: The category of the error.
          type: string
        message:
          description: A short explanation of the issue.
          type: string
        pspReference:
          description: The PSP reference of the payment.
          type: string
        status:
          description: The HTTP response status.
          format: int32
          type: integer
    SoleProprietorship:
      properties:
        countryOfGoverningLaw:
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country code of the governing country.
          type: string
        doingBusinessAs:
          description: The registered name, if different from the `name`.
          type: string
        name:
          description: The legal name.
          type: string
        principalPlaceOfBusiness:
          description: The business address. Required if the principal place of business
            is different from the `registeredAddress`.
          $ref: '#/components/schemas/Address'
        registeredAddress:
          description: The address registered at the registrar, such as the Chamber
            of Commerce.
          $ref: '#/components/schemas/Address'
        registrationNumber:
          description: The registration number.
          type: string
        vatAbsenceReason:
          description: 'The reason for not providing a VAT number.


            Possible values: **industryExemption**, **belowTaxThreshold**.'
          enum:
          - industryExemption
          - belowTaxThreshold
          type: string
        vatNumber:
          description: The VAT number.
          type: string
      required:
      - name
      - registeredAddress
    SourceOfFunds:
      properties:
        acquiringBusinessLineId:
          description: The unique identifier of the business line that will be the
            source of funds.This must be a business line for a **receivePayments**
            or **receiveFromPlatformPayments** capability. Required when `adyenProcessedFunds`
            is **true**.
          type: string
        adyenProcessedFunds:
          description: "Indicates whether the funds are coming from transactions processed\
            \ by Adyen.\n\n - If **true**, the `acquiringBusinessLineId` is required.\n\
            \n - If **false**, a `description` is required."
          type: boolean
        description:
          description: Text describing the source of funds. For example, for `type`
            **business**, provide a description of the business. Required when `adyenProcessedFunds`
            is **false**.
          type: string
        type:
          description: 'The type of the source of funds. Possible value: **business**.'
          enum:
          - business
          type: string
    StockData:
      properties:
        marketIdentifier:
          description: The four-digit [Market Identifier Code](https://en.wikipedia.org/wiki/Market_Identifier_Code)
            of the stock market where the organization's stocks are traded.
          type: string
        stockNumber:
          description: The 12-digit International Securities Identification Number
            (ISIN) of the company, without dashes (-).
          type: string
        tickerSymbol:
          description: The stock ticker symbol.
          type: string
    TaxInformation:
      properties:
        country:
          description: The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country code.
          maxLength: 2
          minLength: 2
          type: string
        number:
          description: The organization's tax ID number (TIN).
          type: string
        type:
          description: The TIN type depending on the country where it was issued.
            Provide only for countries that have multiple tax IDs, such as Sweden,
            the UK, or the US. For example, provide **SSN**, **EIN**, or **ITIN**
            for the US.
          type: string
    TaxReportingClassification:
      properties:
        businessType:
          description: 'The organization''s business type.


            Possible values: **other**, **listedPublicCompany**, **subsidiaryOfListedPublicCompany**,
            **governmentalOrganization**, **internationalOrganization**, **financialInstitution**.'
          enum:
          - other
          - listedPublicCompany
          - subsidiaryOfListedPublicCompany
          - governmentalOrganization
          - internationalOrganization
          - financialInstitution.
          type: string
        financialInstitutionNumber:
          description: The Global Intermediary Identification Number (GIIN) required
            for FATCA.
          type: string
        mainSourceOfIncome:
          description: 'The organization''s main source of income.


            Possible values: **businessOperation**, **realEstateSales**, **investmentInterestOrRoyalty**,
            **propertyRental**, **other**.'
          enum:
          - businessOperation
          - realEstateSales
          - investmentInterestOrRoyalty
          - propertyRental
          - other
          type: string
        type:
          description: 'The tax reporting classification type.


            Possible values: **nonFinancialNonReportable**, **financialNonReportable**,
            **nonFinancialActive**, **nonFinancialPassive**.'
          enum:
          - nonFinancialNonReportable
          - financialNonReportable
          - nonFinancialActive
          - nonFinancialPassive
          type: string
    TransferInstrument:
      properties:
        bankAccount:
          description: Contains information about the legal entity's bank account.
            Required when `type` is **bankAccount**.
          $ref: '#/components/schemas/BankAccountInfo'
        documentDetails:
          x-addedInVersion: '2'
          description: List of documents uploaded for the transfer instrument.
          items:
            $ref: '#/components/schemas/DocumentReference'
          type: array
        id:
          description: The unique identifier of the transfer instrument.
          readOnly: true
          type: string
        legalEntityId:
          description: The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id)
            that owns the transfer instrument.
          type: string
        recurringDetail:
          description: Contains information about the legal entity's previously stored
            payment details. Required when `type` is **recurringDetail**.
          $ref: '#/components/schemas/RecurringDetail'
        type:
          description: 'The type of transfer instrument.


            Possible values: **bankAccount**, **recurringDetail**.'
          enum:
          - bankAccount
          - recurringDetail
          type: string
      required:
      - legalEntityId
      - type
      - id
    TransferInstrumentInfo:
      properties:
        bankAccount:
          description: Contains information about the legal entity's bank account.
            Required when `type` is **bankAccount**.
          $ref: '#/components/schemas/BankAccountInfo'
        legalEntityId:
          description: The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id)
            that owns the transfer instrument.
          type: string
        recurringDetail:
          description: Contains information about the legal entity's previously stored
            payment details. Required when `type` is **recurringDetail**.
          $ref: '#/components/schemas/RecurringDetail'
        type:
          description: 'The type of transfer instrument.


            Possible values: **bankAccount**, **recurringDetail**.'
          enum:
          - bankAccount
          - recurringDetail
          type: string
      required:
      - legalEntityId
      - type
    UKLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 8-digit bank account number, without separators or whitespace.
          maxLength: 8
          minLength: 8
          type: string
        sortCode:
          description: The 6-digit [sort code](https://en.wikipedia.org/wiki/Sort_code),
            without separators or spaces.
          maxLength: 6
          minLength: 6
          type: string
        type:
          default: ukLocal
          description: '**ukLocal**'
          enum:
          - ukLocal
          type: string
      required:
      - accountNumber
      - sortCode
    USLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The bank account number, without separators or whitespace.
          maxLength: 18
          minLength: 2
          type: string
        accountType:
          default: checking
          description: 'The bank account type.


            Possible values: **checking** or **savings**. Defaults to **checking**.'
          enum:
          - checking
          - savings
          type: string
        routingNumber:
          description: The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number),
            without separators or spaces.
          maxLength: 9
          minLength: 9
          type: string
        type:
          default: usLocal
          description: '**usLocal**'
          enum:
          - usLocal
          type: string
      required:
      - accountNumber
      - routingNumber
    VoidResponse: {}
    WebData:
      properties:
        webAddress:
          description: The URL of the website.
          type: string
    WebDataExemption:
      properties:
        reason:
          description: 'The reason why the web data was not provided. Possible value:
            **noOnlinePresence**.'
          enum:
          - noOnlinePresence
          type: string
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
    BasicAuth:
      scheme: basic
      type: http
  examples:
    post-businessLines-createBusinessLines-businessAccounts:
      summary: Create a business line for a business account
      description: Example request for creating a business line for a business account
      value:
        capability: issueBankAccount
        industryCode: '55'
        webData:
        - webAddress: https://www.adyen.com
        legalEntityId: LE322JV223222D5FZ9N74BSGM
        sourceOfFunds:
          type: business
          adyenProcessedFunds: 'false'
          description: Funds from my flower shop business
    post-businessLines-createBusinessLines-businessAccounts-200:
      summary: Example response for creating a business line
      value:
        capability: issueBankAccount
        industryCode: '55'
        legalEntityId: LE322JV223222D5FZ9N74BSGM
        sourceOfFunds:
          adyenProcessedFunds: 'false'
          description: Funds from my flower shop business
          type: business
        webData:
        - webAddress: https://www.adyen.com
        id: SE322KT223222D5FJ7TJN2986
    post-businessLines-createBusinessLines-receive:
      summary: Create a business line for receiving payments
      description: Example request for receiving payments
      value:
        capability: receivePayments
        salesChannels:
        - eCommerce
        - ecomMoto
        industryCode: 339E
        legalEntityId: LE322JV223222D5FZ9N74BSGM
        webData:
        - webAddress: https://yoururl.com
    post-businessLines-createBusinessLines-receive-200:
      summary: Example response for creating a business line
      value:
        capability: receivePayments
        industryCode: 339E
        legalEntityId: LE322JV223222D5FZ9N74BSGM
        salesChannels:
        - eCommerce
        - ecomMoto
        webData:
        - webAddress: https://yoururl.com
        id: SE322KT223222D5FJ7TJN2986
    post-legalEntities-createLegalEntityIndividualNL:
      summary: Create a legal entity for an individual residing in the Netherlands
      description: Example request for creating a legal entity for an individual residing
        in the Netherlands
      value:
        type: individual
        individual:
          residentialAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
          name:
            firstName: Shelly
            lastName: Eller
          birthData:
            dateOfBirth: '1990-06-21'
          email: s.eller@example.com
    post-legalEntities-createLegalEntityIndividualNL-200:
      summary: Individual legal entity created
      description: Example response for creating a legal entity for an individual
        residing in the Netherlands
      value:
        individual:
          email: s.eller@example.com
          birthData:
            dateOfBirth: '1990-06-21'
          name:
            firstName: Shelly
            lastName: Eller
          residentialAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
        type: individual
        id: LE322JV223222D5GG42KN6869
    post-legalEntities-createLegalEntityIndividualUS:
      summary: Create a legal entity for an individual residing in the US
      description: Example request for creating a legal entity for an individual residing
        in the US
      value:
        type: individual
        individual:
          residentialAddress:
            city: New York
            country: US
            postalCode: '10003'
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
          phone:
            number: '+14153671502'
            type: mobile
          name:
            firstName: Shelly
            lastName: Eller
          birthData:
            dateOfBirth: '1990-06-21'
          email: s.eller@example.com
    post-legalEntities-createLegalEntityIndividualUS-200:
      summary: Individual legal entity created
      description: Example response for creating a legal entity for an individual
        residing in the US
      value:
        individual:
          email: s.eller@example.com
          phone:
            number: '+14153671502'
            type: mobile
          birthData:
            dateOfBirth: '1990-06-21'
          name:
            firstName: Shelly
            lastName: Eller
          residentialAddress:
            city: New York
            country: US
            postalCode: '10003'
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
        type: individual
        id: LE322JV223222D5GGMHPC2FPL
    post-legalEntities-createLegalEntityOrganizationNL:
      summary: Create a legal entity for a Dutch organization
      description: Example request for creating a legal entity for an organization
        operating in the Netherlands
      value:
        type: organization
        organization:
          legalName: Explorer Company based in NL
          doingBusinessAs: API Company Trading
          type: privateCompany
          registeredAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
          registrationNumber: '34179503'
          email: organization@example.com
        entityAssociations:
        - jobTitle: CEO
          legalEntityId: LE322JV223222D5GG42KN6869
          type: signatory
    post-legalEntities-createLegalEntityOrganizationNL-200:
      summary: Organization legal entity created
      description: Example response for creating a legal entity for an organization
        operating in the Netherlands
      value:
        organization:
          legalName: Explorer Company based in NL
          doingBusinessAs: API Company Trading
          registrationNumber: '34179503'
          email: organization@example.com
          registeredAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
          taxExempt: false
          type: privateCompany
        type: organization
        id: LE322JV223222D5FZ9N74BSGM
    post-legalEntities-createLegalEntityOrganizationUS:
      summary: Create a legal entity for an organization in the US
      description: Example request for creating a legal entity for an organization
        operating in the US
      value:
        type: organization
        organization:
          legalName: Explorer Company based in US
          registrationNumber: '101002749'
          type: privateCompany
          registeredAddress:
            city: New York
            country: US
            postalCode: '10003'
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
    post-legalEntities-createLegalEntityOrganizationUS-200:
      summary: Organization legal entity created
      description: Example response for creating a legal entity for an organization
        operating in the US
      value:
        organization:
          legalName: Explorer Company based in US
          registrationNumber: '101002749'
          registeredAddress:
            city: New York
            country: US
            postalCode: '10003'
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
          taxExempt: false
          type: privateCompany
        type: organization
        id: LE322JV223222D5FZ9N74BSGM
    post-legalEntities-createLegalEntitySolePropNL:
      summary: Create a legal entity for a Dutch sole proprietor
      description: Example request for creating a legal entity for a sole proprietor
        operating in the Netherlands
      value:
        type: soleProprietorship
        soleProprietorship:
          name: Shelly Seller Sole Trader
          countryOfGoverningLaw: NL
          registeredAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
    post-legalEntities-createLegalEntitySolePropNL-200:
      summary: Sole proprietor legal enity created
      description: Example response for creating a legal entity for a sole proprietor
        operating in the Netherlands
      value:
        type: soleProprietorship
        soleProprietorship:
          name: Shelly Seller Sole Trader
          countryOfGoverningLaw: NL
          registeredAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
        id: LE32272223222D5CGBR254SKT
    post-legalEntities-createLegalEntitySolePropUS:
      summary: Create a legal entity for a sole proprietor in the US
      description: Example request for creating a legal entity for a sole proprietor
        operating in the US
      value:
        type: soleProprietorship
        soleProprietorship:
          name: Shelly Eller Sole Trader
          countryOfGoverningLaw: US
          registeredAddress:
            city: New York
            country: US
            postalCode: '10003'
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
    post-legalEntities-createLegalEntitySolePropUS-200:
      summary: Sole proprietor legal enity created
      description: Example response for creating a legal entity for a sole proprietor
        operating in the US
      value:
        type: soleProprietorship
        soleProprietorship:
          name: Shelly Eller Sole Trader
          countryOfGoverningLaw: US
          registeredAddress:
            city: New York
            country: US
            postalCode: '10003'
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
        id: LE32272223222D5CGBR254SKT
    post-transferInstruments-createTransferInstrumentEUR:
      summary: Add a EUR bank account
      description: Example request for creating a transfer instrument for EUR
      value:
        legalEntityId: LE322KH223222D5GG4C9J83RN
        type: bankAccount
        bankAccount:
          countryCode: NL
          currencyCode: EUR
          iban: NL62ABNA0000000123
    post-transferInstruments-createTransferInstrumentEUR-200:
      summary: Bank account added
      description: Example response for adding a bank account as a transfer instrument
        of a legal entity
      value:
        bankAccount:
          countryCode: NL
          currencyCode: EUR
          iban: NL62ABNA0000000123
        legalEntityId: LE322KH223222D5GG4C9J83RN
        type: bankAccount
        id: SE576BH223222F5GJVKHH6BDT
    post-transferInstruments-createTransferInstrumentUSD:
      summary: Add a USD bank account
      description: Example request for creating a transfer instrument for USD
      value:
        legalEntityId: LE322JV223222D5GGMHPC2FPL
        type: bankAccount
        bankAccount:
          countryCode: US
          currencyCode: USD
          accountNumber: '0000000123'
          branchCode: '121202211'
          accountType: checking
    post-transferInstruments-createTransferInstrumentUSD-200:
      summary: Bank account added
      description: Example response for adding a bank account as a transfer instrument
        of a legal entity
      value:
        bankAccount:
          accountNumber: '0000000123'
          accountType: checking
          branchCode: '121202211'
          countryCode: US
          currencyCode: USD
        legalEntityId: LE322JV223222D5GGMHPC2FPL
        type: bankAccount
        id: SE322JV223222F5GJVKHH8DTC
