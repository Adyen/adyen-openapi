openapi: 3.1.0
servers:
- url: https://kyc-test.adyen.com/lem/v3
info:
  version: '3'
  x-publicVersion: true
  title: Legal Entity Management API
  description: "The Legal Entity Management API enables you to manage legal entities\
    \ that contain information required for verification. \n## Authentication\nEach\
    \ request to the Legal Entity Management API must be signed with an API key. Generate\
    \ an API key in your Customer Area if you have a [platform setup](https://docs.adyen.com/platforms/manage-access/api-credentials-web-service/#generate-api-key)\
    \ or [marketplace setup](https://docs.adyen.com/marketplaces/manage-access/api-credentials-web-service/#generate-api-key).\n\
    \n If you have an Adyen Issuing integration, [generate an API key](https://docs.adyen.com/issuing/manage-access/api-credentials-web-service/#generate-api-key)\
    \ in your Balance Platform Customer Area.\n\nTo connect to the API, add an `X-API-Key`\
    \ header with the API key as the value. For example:\n\n```\ncurl\n-H \"X-API-Key:\
    \ YOUR_API_KEY\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n## Versioning\n\
    The Legal Entity Management API supports [versioning](https://docs.adyen.com/development-resources/versioning)\
    \ using a version suffix in the endpoint URL. This suffix has the following format:\
    \ \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://kyc-test.adyen.com/lem/v3/legalEntities\n\
    ```\n## Going live\nWhen going live, generate an API key in your [live Customer\
    \ Area](https://ca-live.adyen.com/ca/) if you have an Adyen for Platforms integration\
    \ or [live Balance Platform Customer Area](https://balanceplatform-live.adyen.com/balanceplatform/)\
    \ if you have an Adyen Issuing integration.You can then use the API key to send\
    \ requests to `https://kyc-live.adyen.com/lem/v3`.\n\n"
  termsOfService: https://www.adyen.com/legal/terms-and-conditions
  contact:
    name: Adyen Developer Experience team
    url: https://github.com/Adyen/adyen-openapi
tags:
- name: Legal entities
- name: Transfer instruments
- name: Business lines
- name: Documents
- name: Terms of Service
- name: Tax eDelivery consent
- name: Hosted Onboarding
- name: PCI questionnaires
paths:
  /businessLines:
    post:
      tags:
      - Business lines
      summary: Create a business line
      description: "Creates a business line. \n\nThis resource contains information\
        \ about your user's line of business, including their industry and their source\
        \ of funds. Adyen uses this information to verify your users as required by\
        \ payment industry regulations. Adyen informs you of the verification results\
        \ through webhooks or API responses.\n\n"
      x-addedInVersion: '1'
      operationId: post-businessLines
      x-sortIndex: 12
      x-methodName: createBusinessLine
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              createBusinessLines-businessAccounts:
                $ref: '#/components/examples/post-businessLines-createBusinessLines-businessAccounts'
              createBusinessLines-receive:
                $ref: '#/components/examples/post-businessLines-createBusinessLines-receive'
            schema:
              $ref: '#/components/schemas/BusinessLineInfo'
      responses:
        '200':
          content:
            application/json:
              examples:
                createBusinessLines-businessAccounts:
                  $ref: '#/components/examples/post-businessLines-createBusinessLines-businessAccounts-200'
                createBusinessLines-receive:
                  $ref: '#/components/examples/post-businessLines-createBusinessLines-receive-200'
              schema:
                $ref: '#/components/schemas/BusinessLine'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /businessLines/{id}:
    delete:
      tags:
      - Business lines
      summary: Delete a business line
      description: "Deletes a business line.\n\n >If you delete a business line linked\
        \ to a [payment method](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api),\
        \ it can affect your merchant account's ability to use the [payment method](https://docs.adyen.com/api-explorer/Management/latest/post/merchants/_merchantId_/paymentMethodSettings).\
        \ The business line is removed from all linked merchant accounts."
      x-addedInVersion: '1'
      operationId: delete-businessLines-id
      x-sortIndex: 14
      x-methodName: deleteBusinessLine
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the business line to be deleted.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: 'No Content - look at the actual response code for the status
            of the request. '
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
    get:
      tags:
      - Business lines
      summary: Get a business line
      description: Returns the detail of a business line.
      x-addedInVersion: '1'
      operationId: get-businessLines-id
      x-sortIndex: 13
      x-methodName: getBusinessLine
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the business line.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-businessLines-id-success-200'
              schema:
                $ref: '#/components/schemas/BusinessLine'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
    patch:
      tags:
      - Business lines
      summary: Update a business line
      description: Updates a business line.
      x-addedInVersion: '2'
      operationId: patch-businessLines-id
      x-sortIndex: 15
      x-methodName: updateBusinessLine
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              updateBusinessLine:
                $ref: '#/components/examples/patch-businessLines-id-updateBusinessLine'
            schema:
              $ref: '#/components/schemas/BusinessLineInfoUpdate'
      parameters:
      - description: The unique identifier of the business line.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                updateBusinessLine:
                  $ref: '#/components/examples/patch-businessLines-id-updateBusinessLine-200'
              schema:
                $ref: '#/components/schemas/BusinessLine'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /documents:
    post:
      tags:
      - Documents
      summary: Upload a document for verification checks
      description: "Uploads a document for verification checks.\n\n Adyen uses the\
        \ information from the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities)\
        \ to run automated verification checks. If these checks fail, you will be\
        \ notified to provide additional documents.\n\n You should only upload documents\
        \ when Adyen requests additional information for the legal entity.\n\n >You\
        \ can upload a maximum of 15 pages for photo IDs."
      x-addedInVersion: '1'
      operationId: post-documents
      x-sortIndex: 4
      x-methodName: uploadDocumentForVerificationChecks
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              uploadDocument:
                $ref: '#/components/examples/post-documents-uploadDocument'
            schema:
              $ref: '#/components/schemas/Document'
      parameters:
      - description: Use a suberror code as your requested verification code. You
          can include one code at a time in your request header. Requested verification
          codes can only be used in your test environment.
        example: '1_3008'
        name: x-requested-verification-code
        in: header
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                uploadDocument:
                  $ref: '#/components/examples/post-documents-uploadDocument-200'
              schema:
                $ref: '#/components/schemas/Document'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /documents/{id}:
    delete:
      tags:
      - Documents
      summary: Delete a document
      description: Deletes a document.
      x-addedInVersion: '1'
      operationId: delete-documents-id
      x-sortIndex: 7
      x-methodName: deleteDocument
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the document to be deleted.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: 'No Content - look at the actual response code for the status
            of the request. '
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
    get:
      tags:
      - Documents
      summary: Get a document
      description: Returns a document.
      x-addedInVersion: '1'
      operationId: get-documents-id
      x-sortIndex: 5
      x-methodName: getDocument
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the document.
        name: id
        in: path
        required: true
        schema:
          type: string
      - description: Do not load document content while fetching the document.
        name: skipContent
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-documents-id-success-200'
              schema:
                $ref: '#/components/schemas/Document'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
    patch:
      tags:
      - Documents
      summary: Update a document
      description: "Updates a document.\n\n >You can upload a maximum of 15 pages\
        \ for photo IDs."
      x-addedInVersion: '1'
      operationId: patch-documents-id
      x-sortIndex: 6
      x-methodName: updateDocument
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              updateDocument:
                $ref: '#/components/examples/patch-documents-id-updateDocument'
            schema:
              $ref: '#/components/schemas/Document'
      parameters:
      - description: The unique identifier of the document to be updated.
        name: id
        in: path
        required: true
        schema:
          type: string
      - description: Use the requested verification code 0_0001 to resolve any suberrors
          associated with the document. Requested verification codes can only be used
          in your test environment.
        example: '0_0001'
        name: x-requested-verification-code
        in: header
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                updateDocument:
                  $ref: '#/components/examples/patch-documents-id-updateDocument-200'
              schema:
                $ref: '#/components/schemas/Document'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities:
    post:
      tags:
      - Legal entities
      summary: Create a legal entity
      description: "Creates a legal entity. \n\nThis resource contains information\
        \ about the user that will be onboarded in your platform. Adyen uses this\
        \ information to perform verification checks as required by payment industry\
        \ regulations. Adyen informs you of the verification results through webhooks\
        \ or API responses. \n\n"
      x-addedInVersion: '1'
      operationId: post-legalEntities
      x-sortIndex: 1
      x-methodName: createLegalEntity
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              createLegalEntityIndividualAU:
                $ref: '#/components/examples/post-legalEntities-createLegalEntityIndividualAU'
              createLegalEntityIndividualNL:
                $ref: '#/components/examples/post-legalEntities-createLegalEntityIndividualNL'
              createLegalEntityIndividualUS:
                $ref: '#/components/examples/post-legalEntities-createLegalEntityIndividualUS'
              createLegalEntityOrganizationNL:
                $ref: '#/components/examples/post-legalEntities-createLegalEntityOrganizationNL'
              createLegalEntityOrganizationUS:
                $ref: '#/components/examples/post-legalEntities-createLegalEntityOrganizationUS'
              createLegalEntitySolePropNL:
                $ref: '#/components/examples/post-legalEntities-createLegalEntitySolePropNL'
              createLegalEntitySolePropUS:
                $ref: '#/components/examples/post-legalEntities-createLegalEntitySolePropUS'
              createTrustAU:
                $ref: '#/components/examples/post-legalEntities-createTrustAU'
            schema:
              $ref: '#/components/schemas/LegalEntityInfoRequiredType'
      parameters:
      - description: Use a suberror code as your requested verification code. You
          can include one code at a time in your request header. Requested verification
          codes can only be used in your test environment.
        example: '1_3004'
        name: x-requested-verification-code
        in: header
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                createLegalEntityIndividualAU:
                  $ref: '#/components/examples/post-legalEntities-createLegalEntityIndividualAU-200'
                createLegalEntityIndividualNL:
                  $ref: '#/components/examples/post-legalEntities-createLegalEntityIndividualNL-200'
                createLegalEntityIndividualUS:
                  $ref: '#/components/examples/post-legalEntities-createLegalEntityIndividualUS-200'
                createLegalEntityOrganizationNL:
                  $ref: '#/components/examples/post-legalEntities-createLegalEntityOrganizationNL-200'
                createLegalEntityOrganizationUS:
                  $ref: '#/components/examples/post-legalEntities-createLegalEntityOrganizationUS-200'
                createLegalEntitySolePropNL:
                  $ref: '#/components/examples/post-legalEntities-createLegalEntitySolePropNL-200'
                createLegalEntitySolePropUS:
                  $ref: '#/components/examples/post-legalEntities-createLegalEntitySolePropUS-200'
                createTrustAU:
                  $ref: '#/components/examples/post-legalEntities-createTrustAU-200'
              schema:
                $ref: '#/components/schemas/LegalEntity'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}:
    get:
      tags:
      - Legal entities
      summary: Get a legal entity
      description: Returns a legal entity.
      x-addedInVersion: '1'
      operationId: get-legalEntities-id
      x-sortIndex: 2
      x-methodName: getLegalEntity
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the legal entity.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-legalEntities-id-success-200'
              schema:
                $ref: '#/components/schemas/LegalEntity'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
    patch:
      tags:
      - Legal entities
      summary: Update a legal entity
      description: "Updates a legal entity.\n\n >To change the legal entity type,\
        \ include only the new `type` in your request. To update the `entityAssociations`\
        \ array, you need to replace the entire array. For example, if the array has\
        \ 3 entries and you want to remove 1 entry, you need to PATCH the resource\
        \ with the remaining 2 entries."
      x-addedInVersion: '1'
      operationId: patch-legalEntities-id
      x-sortIndex: 3
      x-methodName: updateLegalEntity
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              changeLegalEntityType:
                $ref: '#/components/examples/patch-legalEntities-id-changeLegalEntityType'
              updateLegalEntityOrganization:
                $ref: '#/components/examples/patch-legalEntities-id-updateLegalEntityOrganization'
              updateLegalEntitySoleProp:
                $ref: '#/components/examples/patch-legalEntities-id-updateLegalEntitySoleProp'
              updateLegalRepresentative:
                $ref: '#/components/examples/patch-legalEntities-id-updateLegalRepresentative'
              updateTrustMember:
                $ref: '#/components/examples/patch-legalEntities-id-updateTrustMember'
              updateTrustMemberExempt:
                $ref: '#/components/examples/patch-legalEntities-id-updateTrustMemberExempt'
            schema:
              $ref: '#/components/schemas/LegalEntityInfo'
      parameters:
      - description: The unique identifier of the legal entity.
        name: id
        in: path
        required: true
        schema:
          type: string
      - description: Use the requested verification code 0_0001 to resolve any suberrors
          associated with the legal entity. Requested verification codes can only
          be used in your test environment.
        example: '0_0001'
        name: x-requested-verification-code
        in: header
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                changeLegalEntityType:
                  $ref: '#/components/examples/patch-legalEntities-id-changeLegalEntityType-200'
                updateLegalEntityOrganization:
                  $ref: '#/components/examples/patch-legalEntities-id-updateLegalEntityOrganization-200'
                updateLegalEntitySoleProp:
                  $ref: '#/components/examples/patch-legalEntities-id-updateLegalEntitySoleProp-200'
                updateLegalRepresentative:
                  $ref: '#/components/examples/patch-legalEntities-id-updateLegalRepresentative-200'
                updateTrustMember:
                  $ref: '#/components/examples/patch-legalEntities-id-updateTrustMember-200'
                updateTrustMemberExempt:
                  $ref: '#/components/examples/patch-legalEntities-id-updateTrustMemberExempt-200'
              schema:
                $ref: '#/components/schemas/LegalEntity'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}/acceptedTermsOfServiceDocument/{termsofserviceacceptancereference}:
    get:
      tags:
      - Terms of Service
      summary: Get accepted Terms of Service document
      description: Returns the accepted Terms of Service document for a legal entity.
      x-addedInVersion: '2'
      operationId: get-legalEntities-id-acceptedTermsOfServiceDocument-termsofserviceacceptancereference
      x-sortIndex: 4
      x-methodName: getAcceptedTermsOfServiceDocument
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the legal entity. For sole proprietorship,
          this is the individual legal entity ID of the owner. For organizations,
          this is the ID of the organization.
        name: id
        in: path
        required: true
        schema:
          type: string
      - description: An Adyen-generated reference for the accepted Terms of Service.
        name: termsofserviceacceptancereference
        in: path
        required: true
        schema:
          type: string
      - description: 'The format of the Terms of Service document. Possible values:
          **JSON**, **PDF**, or **TXT**'
        name: termsOfServiceDocumentFormat
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAcceptedTermsOfServiceDocumentResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}/businessLines:
    get:
      tags:
      - Legal entities
      summary: Get all business lines under a legal entity
      description: Returns the business lines owned by a legal entity.
      x-addedInVersion: '1'
      operationId: get-legalEntities-id-businessLines
      x-sortIndex: 4
      x-methodName: getAllBusinessLinesUnderLegalEntity
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the legal entity.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-legalEntities-id-businessLines-success-200'
              schema:
                $ref: '#/components/schemas/BusinessLines'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}/checkTaxElectronicDeliveryConsent:
    post:
      tags:
      - Tax eDelivery consent
      summary: Check the status of consent for electronic delivery of tax forms
      description: Returns the consent status for electronic delivery of tax forms.
      x-addedInVersion: '1'
      operationId: post-legalEntities-id-checkTaxElectronicDeliveryConsent
      x-sortIndex: 2
      x-methodName: checkStatusOfConsentForElectronicDeliveryOfTaxForms
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the legal entity. For sole proprietorships,
          this is the individual legal entity ID of the owner. For organizations,
          this is the ID of the organization.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckTaxElectronicDeliveryConsentResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}/checkVerificationErrors:
    post:
      tags:
      - Legal entities
      summary: Check a legal entity's verification errors
      description: Returns the verification errors for a legal entity and its supporting
        entities.
      x-addedInVersion: '3'
      operationId: post-legalEntities-id-checkVerificationErrors
      x-sortIndex: 2
      x-methodName: checkLegalEntitysVerificationErrors
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the legal entity.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                checkVerificationErrors:
                  $ref: '#/components/examples/post-legalEntities-id-checkVerificationErrors-checkVerificationErrors-200'
              schema:
                $ref: '#/components/schemas/VerificationErrors'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}/confirmDataReview:
    post:
      tags:
      - Legal entities
      summary: Confirm data review
      description: Confirms that your user has reviewed the data for the legal entity
        specified in the path. Call this endpoint to inform Adyen that your user reviewed
        and verified that the data is up-to-date. The endpoint returns the timestamp
        of when Adyen received the request.
      x-addedInVersion: '3'
      operationId: post-legalEntities-id-confirmDataReview
      x-sortIndex: 22
      x-methodName: confirmDataReview
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the legal entity.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                confirmDataReview:
                  $ref: '#/components/examples/post-legalEntities-id-confirmDataReview-confirmDataReview-200'
              schema:
                $ref: '#/components/schemas/DataReviewConfirmationResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}/onboardingLinks:
    post:
      tags:
      - Hosted Onboarding
      summary: Get a link to an Adyen-hosted onboarding page
      description: 'Returns a link to an Adyen-hosted onboarding page where you need
        to redirect your user.


        '
      x-addedInVersion: '1'
      operationId: post-legalEntities-id-onboardingLinks
      x-sortIndex: 1
      x-methodName: getLinkToAdyenhostedOnboardingPage
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              createOnboardingLink:
                $ref: '#/components/examples/post-legalEntities-id-onboardingLinks-createOnboardingLink'
            schema:
              $ref: '#/components/schemas/OnboardingLinkInfo'
      parameters:
      - description: The unique identifier of the legal entity
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                createOnboardingLink:
                  $ref: '#/components/examples/post-legalEntities-id-onboardingLinks-createOnboardingLink-200'
              schema:
                $ref: '#/components/schemas/OnboardingLink'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}/pciQuestionnaires:
    get:
      tags:
      - PCI questionnaires
      summary: Get PCI questionnaire details
      description: Get a list of signed PCI questionnaires.
      x-addedInVersion: '1'
      operationId: get-legalEntities-id-pciQuestionnaires
      x-sortIndex: 3
      x-methodName: getPciQuestionnaireDetails
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the legal entity to get PCI questionnaire
          information.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-legalEntities-id-pciQuestionnaires-success-200'
              schema:
                $ref: '#/components/schemas/GetPciQuestionnaireInfosResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}/pciQuestionnaires/generatePciTemplates:
    post:
      tags:
      - PCI questionnaires
      summary: Generate PCI questionnaire
      description: Generates the required PCI questionnaires based on the user's [salesChannel](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businessLines__reqParam_salesChannels).
      x-addedInVersion: '1'
      operationId: post-legalEntities-id-pciQuestionnaires-generatePciTemplates
      x-sortIndex: 1
      x-methodName: generatePciQuestionnaire
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              createPciQuestionnaire:
                $ref: '#/components/examples/post-legalEntities-id-pciQuestionnaires-generatePciTemplates-createPciQuestionnaire'
            schema:
              $ref: '#/components/schemas/GeneratePciDescriptionRequest'
      parameters:
      - description: The unique identifier of the legal entity to get PCI questionnaire
          information.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                createPciQuestionnaire:
                  $ref: '#/components/examples/post-legalEntities-id-pciQuestionnaires-generatePciTemplates-createPciQuestionnaire-200'
              schema:
                $ref: '#/components/schemas/GeneratePciDescriptionResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}/pciQuestionnaires/signPciTemplates:
    post:
      tags:
      - PCI questionnaires
      summary: Sign PCI questionnaire
      description: Signs the required PCI questionnaire.
      x-addedInVersion: '1'
      operationId: post-legalEntities-id-pciQuestionnaires-signPciTemplates
      x-sortIndex: 2
      x-methodName: signPciQuestionnaire
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              signPciQuestionnaire:
                $ref: '#/components/examples/post-legalEntities-id-pciQuestionnaires-signPciTemplates-signPciQuestionnaire'
            schema:
              $ref: '#/components/schemas/PciSigningRequest'
      parameters:
      - description: The legal entity ID of the user that has a contractual relationship
          with your platform.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                signPciQuestionnaire:
                  $ref: '#/components/examples/post-legalEntities-id-pciQuestionnaires-signPciTemplates-signPciQuestionnaire-200'
              schema:
                $ref: '#/components/schemas/PciSigningResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}/pciQuestionnaires/{pciid}:
    get:
      tags:
      - PCI questionnaires
      summary: Get PCI questionnaire
      description: Returns the signed PCI questionnaire.
      x-addedInVersion: '1'
      operationId: get-legalEntities-id-pciQuestionnaires-pciid
      x-sortIndex: 4
      x-methodName: getPciQuestionnaire
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The legal entity ID of the individual who signed the PCI questionnaire.
        name: id
        in: path
        required: true
        schema:
          type: string
      - description: The unique identifier of the signed PCI questionnaire.
        name: pciid
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-legalEntities-id-pciQuestionnaires-pciid-success-200'
              schema:
                $ref: '#/components/schemas/GetPciQuestionnaireResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}/setTaxElectronicDeliveryConsent:
    post:
      tags:
      - Tax eDelivery consent
      summary: Set the consent status for electronic delivery of tax forms
      description: Set the consent status for electronic delivery of tax forms.
      x-addedInVersion: '1'
      operationId: post-legalEntities-id-setTaxElectronicDeliveryConsent
      x-sortIndex: 1
      x-methodName: setConsentStatusForElectronicDeliveryOfTaxForms
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetTaxElectronicDeliveryConsentRequest'
      parameters:
      - description: The unique identifier of the legal entity. For sole proprietorships,
          this is the individual legal entity ID of the owner. For organizations,
          this is the ID of the organization.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: 'No Content - look at the actual response code for the status
            of the request. '
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}/termsOfService:
    post:
      tags:
      - Terms of Service
      summary: Get Terms of Service document
      description: Returns the Terms of Service document for a legal entity.
      x-addedInVersion: '1'
      operationId: post-legalEntities-id-termsOfService
      x-sortIndex: 1
      x-methodName: getTermsOfServiceDocument
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              createTermsofService:
                $ref: '#/components/examples/post-legalEntities-id-termsOfService-createTermsofService'
            schema:
              $ref: '#/components/schemas/GetTermsOfServiceDocumentRequest'
      parameters:
      - description: The unique identifier of the legal entity. For sole proprietorships,
          this is the individual legal entity ID of the owner. For organizations,
          this is the ID of the organization.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                createTermsofService:
                  $ref: '#/components/examples/post-legalEntities-id-termsOfService-createTermsofService-200'
              schema:
                $ref: '#/components/schemas/GetTermsOfServiceDocumentResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}/termsOfService/{termsofservicedocumentid}:
    patch:
      tags:
      - Terms of Service
      summary: Accept Terms of Service
      description: Accepts Terms of Service.
      x-addedInVersion: '1'
      operationId: patch-legalEntities-id-termsOfService-termsofservicedocumentid
      x-sortIndex: 2
      x-methodName: acceptTermsOfService
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              updateTermsofService:
                $ref: '#/components/examples/patch-legalEntities-id-termsOfService-termsofservicedocumentid-updateTermsofService'
            schema:
              $ref: '#/components/schemas/AcceptTermsOfServiceRequest'
      parameters:
      - description: 'The unique identifier of the legal entity.


          For sole proprietorships, this is the individual legal entity ID of the
          owner.


          For organizations, this is the ID of the organization.


          For legal representatives of individuals, this is the ID of the individual.


          '
        name: id
        in: path
        required: true
        schema:
          type: string
      - description: The unique identifier of the Terms of Service document.
        name: termsofservicedocumentid
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                updateTermsofService:
                  $ref: '#/components/examples/patch-legalEntities-id-termsOfService-termsofservicedocumentid-updateTermsofService-200'
              schema:
                $ref: '#/components/schemas/AcceptTermsOfServiceResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}/termsOfServiceAcceptanceInfos:
    get:
      tags:
      - Terms of Service
      summary: Get Terms of Service information for a legal entity
      description: Returns Terms of Service information for a legal entity.
      x-addedInVersion: '1'
      operationId: get-legalEntities-id-termsOfServiceAcceptanceInfos
      x-sortIndex: 3
      x-methodName: getTermsOfServiceInformationForLegalEntity
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the legal entity. For sole proprietorships,
          this is the individual legal entity ID of the owner. For organizations,
          this is the ID of the organization.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-legalEntities-id-termsOfServiceAcceptanceInfos-success-200'
              schema:
                $ref: '#/components/schemas/GetTermsOfServiceAcceptanceInfosResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /legalEntities/{id}/termsOfServiceStatus:
    get:
      tags:
      - Terms of Service
      summary: Get Terms of Service status
      description: Returns the required types of Terms of Service that need to be
        accepted by a legal entity.
      x-addedInVersion: '1'
      operationId: get-legalEntities-id-termsOfServiceStatus
      x-sortIndex: 4
      x-methodName: getTermsOfServiceStatus
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the legal entity. For sole proprietorships,
          this is the individual legal entity ID of the owner. For organizations,
          this is the ID of the organization.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-legalEntities-id-termsOfServiceStatus-success-200'
              schema:
                $ref: '#/components/schemas/CalculateTermsOfServiceStatusResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /themes:
    get:
      tags:
      - Hosted Onboarding
      summary: Get a list of hosted onboarding page themes
      description: 'Returns a list of hosted onboarding page themes.


        '
      x-addedInVersion: '1'
      operationId: get-themes
      x-sortIndex: 2
      x-methodName: listHostedOnboardingPageThemes
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-themes-success-200'
              schema:
                $ref: '#/components/schemas/OnboardingThemes'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /themes/{id}:
    get:
      tags:
      - Hosted Onboarding
      summary: Get an onboarding link theme
      description: Returns the details of the theme identified in the path.
      x-addedInVersion: '1'
      operationId: get-themes-id
      x-sortIndex: 4
      x-methodName: getOnboardingLinkTheme
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the theme
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-themes-id-success-200'
              schema:
                $ref: '#/components/schemas/OnboardingTheme'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /transferInstruments:
    post:
      tags:
      - Transfer instruments
      summary: Create a transfer instrument
      description: "Creates a transfer instrument. \n\nA transfer instrument is a\
        \ bank account that a legal entity owns. Adyen performs verification checks\
        \ on the transfer instrument as required by payment industry regulations.\
        \ We inform you of the verification results through webhooks or API responses.\n\
        \nWhen the transfer instrument passes the verification checks, you can start\
        \ sending funds from the balance platform to the transfer instrument (such\
        \ as payouts)."
      x-addedInVersion: '1'
      operationId: post-transferInstruments
      x-sortIndex: 8
      x-methodName: createTransferInstrument
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              createTransferInstrumentEUR:
                $ref: '#/components/examples/post-transferInstruments-createTransferInstrumentEUR'
              createTransferInstrumentUSD:
                $ref: '#/components/examples/post-transferInstruments-createTransferInstrumentUSD'
            schema:
              $ref: '#/components/schemas/TransferInstrumentInfo'
      parameters:
      - description: Use a suberror code as your requested verification code. You
          can include one code at a time in your request header. Requested verification
          codes can only be used in your test environment.
        example: '1_7002'
        name: x-requested-verification-code
        in: header
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                createTransferInstrumentEUR:
                  $ref: '#/components/examples/post-transferInstruments-createTransferInstrumentEUR-200'
                createTransferInstrumentUSD:
                  $ref: '#/components/examples/post-transferInstruments-createTransferInstrumentUSD-200'
              schema:
                $ref: '#/components/schemas/TransferInstrument'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /transferInstruments/{id}:
    delete:
      tags:
      - Transfer instruments
      summary: Delete a transfer instrument
      description: Deletes a transfer instrument.
      x-addedInVersion: '1'
      operationId: delete-transferInstruments-id
      x-sortIndex: 11
      x-methodName: deleteTransferInstrument
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the transfer instrument to be deleted.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: 'No Content - look at the actual response code for the status
            of the request. '
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
    get:
      tags:
      - Transfer instruments
      summary: Get a transfer instrument
      description: Returns the details of a transfer instrument.
      x-addedInVersion: '1'
      operationId: get-transferInstruments-id
      x-sortIndex: 9
      x-methodName: getTransferInstrument
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the transfer instrument.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-transferInstruments-id-success-200'
              schema:
                $ref: '#/components/schemas/TransferInstrument'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
    patch:
      tags:
      - Transfer instruments
      summary: Update a transfer instrument
      description: Updates a transfer instrument.
      x-addedInVersion: '1'
      operationId: patch-transferInstruments-id
      x-sortIndex: 10
      x-methodName: updateTransferInstrument
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              updateTransferInstrument:
                $ref: '#/components/examples/patch-transferInstruments-id-updateTransferInstrument'
            schema:
              $ref: '#/components/schemas/TransferInstrumentInfo'
      parameters:
      - description: The unique identifier of the transfer instrument.
        name: id
        in: path
        required: true
        schema:
          type: string
      - description: Use the requested verification code 0_0001 to resolve any suberrors
          associated with the transfer instrument. Requested verification codes can
          only be used in your test environment.
        example: '0_0001'
        name: x-requested-verification-code
        in: header
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                updateTransferInstrument:
                  $ref: '#/components/examples/patch-transferInstruments-id-updateTransferInstrument-200'
              schema:
                $ref: '#/components/schemas/TransferInstrument'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
components:
  schemas:
    AULocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The bank account number, without separators or whitespace.
          maxLength: 9
          minLength: 5
          type: string
        bsbCode:
          description: The 6-digit [Bank State Branch (BSB) code](https://en.wikipedia.org/wiki/Bank_state_branch),
            without separators or whitespace.
          maxLength: 6
          minLength: 6
          type: string
        type:
          default: auLocal
          description: '**auLocal**'
          enum:
          - auLocal
          type: string
      required:
      - type
      - accountNumber
      - bsbCode
      type: object
    AcceptTermsOfServiceRequest:
      additionalProperties: false
      properties:
        acceptedBy:
          description: 'The legal entity ID of the user accepting the Terms of Service.


            For organizations, this must be the individual legal entity ID of an authorized
            signatory for the organization.


            For sole proprietorships, this must be the individual legal entity ID
            of the owner.


            For individuals, this must be the individual legal entity id of either
            the individual, parent, or guardian.


            '
          type: string
        ipAddress:
          description: The IP address of the user accepting the Terms of Service.
          type: string
      required:
      - acceptedBy
      type: object
    AcceptTermsOfServiceResponse:
      additionalProperties: false
      properties:
        acceptedBy:
          description: The unique identifier of the user that accepted the Terms of
            Service.
          type: string
        id:
          description: The unique identifier of the Terms of Service acceptance.
          type: string
        ipAddress:
          description: The IP address of the user that accepted the Terms of Service.
          type: string
        language:
          description: 'The language used for the Terms of Service document, specified
            by the two-letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)
            language code. Possible value: **en** for English.'
          type: string
        termsOfServiceDocumentId:
          description: The unique identifier of the Terms of Service document.
          type: string
        type:
          description: 'The type of Terms of Service.


            Possible values:

            *  **adyenForPlatformsManage**

            *  **adyenIssuing**

            *  **adyenForPlatformsAdvanced**

            *  **adyenCapital**

            *  **adyenAccount**

            *  **adyenCard**

            *  **adyenFranchisee**

            *  **adyenPccr**

            *  **adyenChargeCard**


            '
          enum:
          - adyenAccount
          - adyenCapital
          - adyenCard
          - adyenChargeCard
          - adyenForPlatformsAdvanced
          - adyenForPlatformsManage
          - adyenFranchisee
          - adyenIssuing
          - adyenPccr
          type: string
      type: object
    AdditionalBankIdentification:
      additionalProperties: false
      properties:
        code:
          description: The value of the additional bank identification.
          type: string
        type:
          description: "The type of additional bank identification, depending on the\
            \ country.\n\nPossible values:\n\n * **gbSortCode**: The 6-digit [UK sort\
            \ code](https://en.wikipedia.org/wiki/Sort_code), without separators or\
            \ spaces\n * **usRoutingNumber**: The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number),\
            \ without separators or spaces."
          enum:
          - gbSortCode
          - usRoutingNumber
          type: string
      type: object
    Address:
      additionalProperties: false
      properties:
        city:
          description: 'The name of the city. Required if `stateOrProvince` is provided.


            If you specify the city, you must also send `postalCode` and `street`.'
          type: string
        country:
          description: The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country code.
          type: string
        postalCode:
          description: Postal code. Required if `stateOrProvince` and/or `city` is
            provided.
          type: string
        stateOrProvince:
          description: 'The two-letter ISO 3166-2 state or province code. For example,
            **CA** in the US.


            If you specify the state or province, you must also send `city`, `postalCode`,
            and `street`.'
          type: string
        street:
          description: The name of the street, and the house or building number. Required
            if `stateOrProvince` and/or `city` is provided.
          type: string
        street2:
          description: The apartment, unit, or suite number.
          type: string
      required:
      - country
      type: object
    Amount:
      additionalProperties: false
      properties:
        currency:
          description: The type of currency. Must be EUR (or EUR equivalent)
          type: string
        value:
          description: Total value of amount. Must be >= 0
          format: int64
          type: integer
      type: object
    Attachment:
      additionalProperties: false
      properties:
        content:
          description: The document in Base64-encoded string format.
          format: byte
          type: string
        contentType:
          deprecated: true
          x-deprecatedInVersion: '1'
          description: "The file format.\n\n Possible values: **application/pdf**,\
            \ **image/jpg**, **image/jpeg**, **image/png**. "
          type: string
        filename:
          deprecated: true
          x-deprecatedInVersion: '1'
          description: The name of the file including the file extension.
          type: string
        pageName:
          x-addedInVersion: '2'
          description: The name of the file including the file extension.
          type: string
        pageType:
          description: 'Specifies which side of the ID card is uploaded.


            * When `type` is **driversLicense** or **identityCard**, set this to **front**
            or **back**.


            * When omitted, we infer the page number based on the order of attachments.'
          type: string
      required:
      - content
      type: object
    BankAccountInfo:
      additionalProperties: false
      properties:
        accountIdentification:
          x-addedInVersion: '3'
          description: Identification of the bank account.
          oneOf:
          - $ref: '#/components/schemas/AULocalAccountIdentification'
          - $ref: '#/components/schemas/CALocalAccountIdentification'
          - $ref: '#/components/schemas/CZLocalAccountIdentification'
          - $ref: '#/components/schemas/DKLocalAccountIdentification'
          - $ref: '#/components/schemas/HKLocalAccountIdentification'
          - $ref: '#/components/schemas/HULocalAccountIdentification'
          - $ref: '#/components/schemas/IbanAccountIdentification'
          - $ref: '#/components/schemas/NOLocalAccountIdentification'
          - $ref: '#/components/schemas/NZLocalAccountIdentification'
          - $ref: '#/components/schemas/NumberAndBicAccountIdentification'
          - $ref: '#/components/schemas/PLLocalAccountIdentification'
          - $ref: '#/components/schemas/SELocalAccountIdentification'
          - $ref: '#/components/schemas/SGLocalAccountIdentification'
          - $ref: '#/components/schemas/UKLocalAccountIdentification'
          - $ref: '#/components/schemas/USLocalAccountIdentification'
        accountType:
          deprecated: true
          x-deprecatedInVersion: '2'
          description: The type of bank account.
          type: string
        bankName:
          description: The name of the banking institution where the bank account
            is held.
          type: string
        countryCode:
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country code where the bank account is registered. For example, **NL**.
          type: string
        trustedSource:
          description: Identifies if the bank account was created through [instant
            bank verification](https://docs.adyen.com/release-notes/platforms-and-financial-products#releaseNote=2023-05-08-hosted-onboarding).
          readOnly: true
          type: boolean
      type: object
    BirthData:
      additionalProperties: false
      properties:
        dateOfBirth:
          description: The individual's date of birth, in YYYY-MM-DD format.
          type: string
      type: object
    BusinessLine:
      additionalProperties: false
      properties:
        capability:
          deprecated: true
          x-deprecatedInVersion: '3'
          x-deprecatedMessage: Use `service` instead.
          description: 'The capability for which you are creating the business line.


            Possible values: **receivePayments**, **receiveFromPlatformPayments**,
            **issueBankAccount**'
          enum:
          - receivePayments
          - receiveFromPlatformPayments
          - issueBankAccount
          type: string
        id:
          description: The unique identifier of the business line.
          readOnly: true
          type: string
        industryCode:
          description: A code that represents the industry of the legal entity for
            [marketplaces](https://docs.adyen.com/marketplaces/verification-requirements/reference-additional-products/#list-industry-codes)
            or [platforms](https://docs.adyen.com/platforms/verification-requirements/reference-additional-products/#list-industry-codes).
            For example, **4431A** for computer software stores.
          type: string
        legalEntityId:
          description: Unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id)
            that owns the business line.
          type: string
        problems:
          x-addedInVersion: '3'
          description: The verification errors related to capabilities for this supporting
            entity.
          items:
            $ref: '#/components/schemas/CapabilityProblem'
          type: array
        salesChannels:
          description: 'A list of channels where goods or services are sold.


            Possible values: **pos**, **posMoto**, **eCommerce**, **ecomMoto**, **payByLink**.


            Required only in combination with the `service` **paymentProcessing**.'
          items:
            type: string
          type: array
        service:
          x-addedInVersion: '3'
          description: 'The service for which you are creating the business line.




            Possible values:

            *  **paymentProcessing**

            *  **banking**


            '
          enum:
          - paymentProcessing
          - banking
          type: string
        sourceOfFunds:
          description: Contains information about the source of your user's funds.
            Required only for the `service` **banking**.
          $ref: '#/components/schemas/SourceOfFunds'
        webData:
          description: List of website URLs where your user's goods or services are
            sold. When this is required for a service but your user does not have
            an online presence, provide the reason in the `webDataExemption` object.
          items:
            $ref: '#/components/schemas/WebData'
          type: array
        webDataExemption:
          description: The reason why the web data is not provided.
          $ref: '#/components/schemas/WebDataExemption'
      required:
      - service
      - industryCode
      - legalEntityId
      - id
      type: object
    BusinessLineInfo:
      additionalProperties: false
      properties:
        capability:
          deprecated: true
          x-deprecatedInVersion: '3'
          x-deprecatedMessage: Use `service` instead.
          description: 'The capability for which you are creating the business line.


            Possible values: **receivePayments**, **receiveFromPlatformPayments**,
            **issueBankAccount**'
          enum:
          - receivePayments
          - receiveFromPlatformPayments
          - issueBankAccount
          type: string
        industryCode:
          description: A code that represents the industry of the legal entity for
            [marketplaces](https://docs.adyen.com/marketplaces/verification-requirements/reference-additional-products/#list-industry-codes)
            or [platforms](https://docs.adyen.com/platforms/verification-requirements/reference-additional-products/#list-industry-codes).
            For example, **4431A** for computer software stores.
          type: string
        legalEntityId:
          description: Unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id)
            that owns the business line.
          type: string
        salesChannels:
          description: 'A list of channels where goods or services are sold.


            Possible values: **pos**, **posMoto**, **eCommerce**, **ecomMoto**, **payByLink**.


            Required only in combination with the `service` **paymentProcessing**.'
          items:
            type: string
          type: array
        service:
          x-addedInVersion: '3'
          description: 'The service for which you are creating the business line.




            Possible values:

            *  **paymentProcessing**

            *  **banking**


            '
          enum:
          - paymentProcessing
          - banking
          type: string
        sourceOfFunds:
          description: Contains information about the source of your user's funds.
            Required only for the `service` **banking**.
          $ref: '#/components/schemas/SourceOfFunds'
        webData:
          description: List of website URLs where your user's goods or services are
            sold. When this is required for a service but your user does not have
            an online presence, provide the reason in the `webDataExemption` object.
          items:
            $ref: '#/components/schemas/WebData'
          type: array
        webDataExemption:
          description: The reason why the web data is not provided.
          $ref: '#/components/schemas/WebDataExemption'
      required:
      - service
      - industryCode
      - legalEntityId
      type: object
    BusinessLineInfoUpdate:
      additionalProperties: false
      properties:
        industryCode:
          description: A code that represents the industry of your legal entity. For
            example, **4431A** for computer software stores.
          type: string
        salesChannels:
          description: 'A list of channels where goods or services are sold.


            Possible values: **pos**, **posMoto**, **eCommerce**, **ecomMoto**, **payByLink**.


            Required only in combination with the `service` **paymentProcessing**.'
          items:
            type: string
          type: array
        sourceOfFunds:
          description: Contains information about the source of your user's funds.
            Required only for the `service` **banking**.
          $ref: '#/components/schemas/SourceOfFunds'
        webData:
          description: List of website URLs where your user's goods or services are
            sold. When this is required for a service but your user does not have
            an online presence, provide the reason in the `webDataExemption` object.
          items:
            $ref: '#/components/schemas/WebData'
          type: array
        webDataExemption:
          description: The reason why the web data is not provided.
          $ref: '#/components/schemas/WebDataExemption'
      type: object
    BusinessLines:
      additionalProperties: false
      properties:
        businessLines:
          description: List of business lines.
          items:
            $ref: '#/components/schemas/BusinessLine'
          type: array
      required:
      - businessLines
      type: object
    CALocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 5- to 12-digit bank account number, without separators
            or whitespace.
          maxLength: 12
          minLength: 5
          type: string
        accountType:
          default: checking
          description: 'The bank account type.


            Possible values: **checking** or **savings**. Defaults to **checking**.'
          enum:
          - checking
          - savings
          type: string
        institutionNumber:
          description: The 3-digit institution number, without separators or whitespace.
          maxLength: 3
          minLength: 3
          type: string
        transitNumber:
          description: The 5-digit transit number, without separators or whitespace.
          maxLength: 5
          minLength: 5
          type: string
        type:
          default: caLocal
          description: '**caLocal**'
          enum:
          - caLocal
          type: string
      required:
      - type
      - accountNumber
      - institutionNumber
      - transitNumber
      type: object
    CZLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: "The 2- to 16-digit bank account number (\u010C\xEDslo \xFA\
            \u010Dtu) in the following format:\n\n- The optional prefix (p\u0159ed\u010D\
            \xEDsl\xED).\n\n- The required second part (z\xE1kladn\xED \u010D\xE1\
            st) which must be at least two non-zero digits.\n\nExamples:\n\n- **19-123457**\
            \ (with prefix)\n\n- **123457** (without prefix)\n\n- **000019-0000123457**\
            \ (with prefix, normalized)\n\n- **000000-0000123457** (without prefix,\
            \ normalized)"
          maxLength: 17
          minLength: 2
          type: string
        bankCode:
          description: "The 4-digit bank code (K\xF3d banky), without separators or\
            \ whitespace."
          maxLength: 4
          minLength: 4
          type: string
        type:
          default: czLocal
          description: '**czLocal**'
          enum:
          - czLocal
          type: string
      required:
      - type
      - accountNumber
      - bankCode
      type: object
    CalculateTermsOfServiceStatusResponse:
      additionalProperties: false
      properties:
        termsOfServiceTypes:
          description: The type of Terms of Service that the legal entity needs to
            accept. If empty, no Terms of Service needs to be accepted.
          items:
            enum:
            - adyenAccount
            - adyenCapital
            - adyenCard
            - adyenChargeCard
            - adyenForPlatformsAdvanced
            - adyenForPlatformsManage
            - adyenFranchisee
            - adyenIssuing
            - adyenPccr
            type: string
          type: array
      type: object
    CapabilityProblem:
      additionalProperties: false
      properties:
        entity:
          $ref: '#/components/schemas/CapabilityProblemEntity'
        verificationErrors:
          items:
            $ref: '#/components/schemas/VerificationError'
          type: array
      type: object
    CapabilityProblemEntity:
      additionalProperties: false
      properties:
        documents:
          description: List of document IDs corresponding to the verification errors
            from capabilities.
          items:
            type: string
          type: array
        id:
          type: string
        owner:
          $ref: '#/components/schemas/CapabilityProblemEntity-recursive'
        type:
          enum:
          - BankAccount
          - Document
          - LegalEntity
          - product
          type: string
      type: object
    CapabilityProblemEntity-recursive:
      additionalProperties: false
      properties:
        documents:
          description: List of document IDs corresponding to the verification errors
            from capabilities.
          items:
            type: string
          type: array
        id:
          type: string
        type:
          enum:
          - BankAccount
          - Document
          - LegalEntity
          - product
          type: string
      required: []
      type: object
    CapabilitySettings:
      additionalProperties: false
      properties:
        amountPerIndustry:
          additionalProperties:
            $ref: '#/components/schemas/Amount'
          description: The maximum amount a card holder can spend per industry.
          type: object
        authorizedCardUsers:
          description: The number of card holders who can use the card.
          type: boolean
        fundingSource:
          description: The funding source of the card, for example **debit**.
          items:
            enum:
            - credit
            - debit
            - prepaid
            type: string
          type: array
        interval:
          description: The period when the rule conditions apply.
          enum:
          - daily
          - monthly
          - weekly
          type: string
        maxAmount:
          description: The maximum amount a card holder can withdraw per day.
          $ref: '#/components/schemas/Amount'
      type: object
    CheckTaxElectronicDeliveryConsentResponse:
      additionalProperties: false
      properties:
        US1099k:
          description: Consent to electronically deliver tax form US1099-K.
          type: boolean
      type: object
    DKLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 4-10 digits bank account number (Kontonummer) (without
            separators or whitespace).
          maxLength: 10
          minLength: 4
          type: string
        bankCode:
          description: The 4-digit bank code (Registreringsnummer) (without separators
            or whitespace).
          maxLength: 4
          minLength: 4
          type: string
        type:
          default: dkLocal
          description: '**dkLocal**'
          enum:
          - dkLocal
          type: string
      required:
      - type
      - accountNumber
      - bankCode
      type: object
    DataReviewConfirmationResponse:
      additionalProperties: false
      properties:
        dataReviewedAt:
          description: Date when data review was confirmed.
          type: string
      type: object
    Document:
      additionalProperties: false
      properties:
        attachment:
          deprecated: true
          x-deprecatedInVersion: '1'
          x-deprecatedMessage: Use the `attachments` array instead.
          description: Object that contains the document.
          $ref: '#/components/schemas/Attachment'
        attachments:
          description: Array that contains the document. The array supports multiple
            attachments for uploading different sides or pages of a document.
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
        creationDate:
          description: The creation date of the document.
          format: date-time
          readOnly: true
          type: string
        description:
          description: Your description for the document.
          type: string
        expiryDate:
          deprecated: true
          x-deprecatedInVersion: '1'
          description: The expiry date of the document, in YYYY-MM-DD format.
          type: string
        fileName:
          description: The filename of the document.
          type: string
        id:
          description: The unique identifier of the document.
          readOnly: true
          type: string
        issuerCountry:
          deprecated: true
          x-deprecatedInVersion: '1'
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country code where the document was issued. For example, **US**.
          type: string
        issuerState:
          deprecated: true
          x-deprecatedInVersion: '1'
          description: The state or province where the document was issued (AU only).
          type: string
        modificationDate:
          description: The modification date of the document.
          format: date-time
          readOnly: true
          type: string
        number:
          description: The number in the document.
          type: string
        owner:
          description: Contains information about the resource that owns the document.
          $ref: '#/components/schemas/OwnerEntity'
        type:
          description: 'Type of document, used when providing an ID number or uploading
            a document. The possible values depend on the legal entity type.


            * For **organization**, the `type` values can be **proofOfAddress**, **registrationDocument**,
            **vatDocument**, **proofOfOrganizationTaxInfo**, **proofOfOwnership**,
            **proofOfIndustry**, **proofOfSignatory**, or **proofOfFundingOrWealthSource**.


            * For **individual**, the `type` values can be **identityCard**, **driversLicense**,
            **passport**, **liveSelfie**, **proofOfNationalIdNumber**, **proofOfResidency**,
            **proofOfIndustry**, **proofOfIndividualTaxId**, **proofOfFundingOrWealthSource**
            or **proofOfRelationship**.


            * For **soleProprietorship**, the `type` values can be **constitutionalDocument**,
            **proofOfAddress**, or **proofOfIndustry**.


            * For **trust**, the `type` value can be **constitutionalDocument**.


            * Use **bankStatement** to upload documents for a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id).'
          enum:
          - bankStatement
          - driversLicense
          - identityCard
          - nationalIdNumber
          - passport
          - proofOfAddress
          - proofOfNationalIdNumber
          - proofOfResidency
          - registrationDocument
          - vatDocument
          - proofOfOrganizationTaxInfo
          - proofOfIndividualTaxId
          - proofOfOwnership
          - proofOfSignatory
          - liveSelfie
          - proofOfIndustry
          - constitutionalDocument
          - proofOfFundingOrWealthSource
          - proofOfRelationship
          type: string
      required:
      - description
      - type
      type: object
    DocumentPage:
      additionalProperties: false
      properties:
        pageName:
          type: string
        pageNumber:
          format: int32
          type: integer
        type:
          enum:
          - BACK
          - FRONT
          - UNDEFINED
          type: string
      type: object
    DocumentReference:
      additionalProperties: false
      properties:
        active:
          description: Identifies whether the document is active and used for checks.
          type: boolean
        description:
          description: Your description for the document.
          type: string
        fileName:
          description: Document name.
          type: string
        id:
          description: The unique identifier of the resource.
          type: string
        modificationDate:
          description: The modification date of the document.
          format: date-time
          type: string
        pages:
          description: List of document pages
          items:
            $ref: '#/components/schemas/DocumentPage'
          type: array
        type:
          description: Type of document, used when providing an ID number or uploading
            a document.
          type: string
      type: object
    EntityReference:
      additionalProperties: false
      properties:
        id:
          description: The unique identifier of the resource.
          type: string
      type: object
    GeneratePciDescriptionRequest:
      additionalProperties: false
      properties:
        additionalSalesChannels:
          description: 'An array of additional sales channels to generate PCI questionnaires.
            Include the relevant sales channels if you need your user to sign PCI
            questionnaires. Not required if you [create stores](https://docs.adyen.com/platforms)
            and [add payment methods](https://docs.adyen.com/adyen-for-platforms-model)
            before you generate the questionnaires.


            Possible values:

            *  **eCommerce**

            *  **pos**

            *  **ecomMoto**

            *  **posMoto**


            '
          items:
            enum:
            - eCommerce
            - ecomMoto
            - pos
            - posMoto
            type: string
          type: array
        language:
          description: Sets the language of the PCI questionnaire. Its value is a
            two-character [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) language
            code, for example, **en**.
          type: string
      type: object
    GeneratePciDescriptionResponse:
      additionalProperties: false
      properties:
        content:
          description: The generated questionnaires in a base64 encoded format.
          format: byte
          type: string
        language:
          description: The two-letter [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)
            language code for the questionnaire. For example, **en**.
          type: string
        pciTemplateReferences:
          description: The array of Adyen-generated unique identifiers for the questionnaires.
          items:
            type: string
          type: array
      type: object
    GetAcceptedTermsOfServiceDocumentResponse:
      additionalProperties: false
      properties:
        document:
          description: The accepted Terms of Service document in the requested format
            represented as a Base64-encoded bytes array.
          format: byte
          type: string
        id:
          description: The unique identifier of the legal entity.
          type: string
        termsOfServiceAcceptanceReference:
          description: An Adyen-generated reference for the accepted Terms of Service.
          type: string
        termsOfServiceDocumentFormat:
          description: The format of the Terms of Service document.
          enum:
          - JSON
          - PDF
          - TXT
          type: string
      type: object
    GetPciQuestionnaireInfosResponse:
      additionalProperties: false
      properties:
        data:
          description: Information about the signed PCI questionnaires.
          items:
            $ref: '#/components/schemas/PciDocumentInfo'
          type: array
      type: object
    GetPciQuestionnaireResponse:
      additionalProperties: false
      properties:
        content:
          description: The generated questionnaire in a base64 encoded format.
          format: byte
          type: string
        createdAt:
          description: The date the questionnaire was created, in ISO 8601 extended
            format. For example, 2022-12-18T10:15:30+01:00
          format: date-time
          type: string
        id:
          description: The unique identifier of the signed questionnaire.
          type: string
        validUntil:
          description: The expiration date of the questionnaire, in ISO 8601 extended
            format. For example, 2022-12-18T10:15:30+01:00
          format: date-time
          type: string
      type: object
    GetTermsOfServiceAcceptanceInfosResponse:
      additionalProperties: false
      properties:
        data:
          description: The Terms of Service acceptance information.
          items:
            $ref: '#/components/schemas/TermsOfServiceAcceptanceInfo'
          type: array
      type: object
    GetTermsOfServiceDocumentRequest:
      additionalProperties: false
      properties:
        language:
          description: 'The language to be used for the Terms of Service document,
            specified by the two-letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)
            language code. Possible value: **en** for English.'
          type: string
        termsOfServiceDocumentFormat:
          description: 'The requested format for the Terms of Service document. Default
            value: JSON. Possible values: **JSON**, **PDF**, or **TXT**.'
          type: string
        type:
          description: 'The type of Terms of Service.


            Possible values:

            *  **adyenForPlatformsManage**

            *  **adyenIssuing**

            *  **adyenForPlatformsAdvanced**

            *  **adyenCapital**

            *  **adyenAccount**

            *  **adyenCard**

            *  **adyenFranchisee**

            *  **adyenPccr**

            *  **adyenChargeCard**


            '
          enum:
          - adyenAccount
          - adyenCapital
          - adyenCard
          - adyenChargeCard
          - adyenForPlatformsAdvanced
          - adyenForPlatformsManage
          - adyenFranchisee
          - adyenIssuing
          - adyenPccr
          type: string
      required:
      - type
      - language
      type: object
    GetTermsOfServiceDocumentResponse:
      additionalProperties: false
      properties:
        document:
          description: The Terms of Service document in Base64-encoded format.
          format: byte
          type: string
        id:
          description: The unique identifier of the legal entity.
          type: string
        language:
          description: 'The language used for the Terms of Service document, specified
            by the two-letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)
            language code. Possible value: **en** for English.'
          type: string
        termsOfServiceDocumentFormat:
          description: The format of the Terms of Service document.
          type: string
        termsOfServiceDocumentId:
          description: The unique identifier of the Terms of Service document.
          type: string
        type:
          description: 'The type of Terms of Service.


            Possible values:

            *  **adyenForPlatformsManage**

            *  **adyenIssuing**

            *  **adyenForPlatformsAdvanced**

            *  **adyenCapital**

            *  **adyenAccount**

            *  **adyenCard**

            *  **adyenFranchisee**

            *  **adyenPccr**

            *  **adyenChargeCard**


            '
          enum:
          - adyenAccount
          - adyenCapital
          - adyenCard
          - adyenChargeCard
          - adyenForPlatformsAdvanced
          - adyenForPlatformsManage
          - adyenFranchisee
          - adyenIssuing
          - adyenPccr
          type: string
      type: object
    HKLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 9- to 15-character bank account number (alphanumeric),
            without separators or whitespace. Starts with the 3-digit branch code.
          maxLength: 15
          minLength: 9
          type: string
        clearingCode:
          description: The 3-digit clearing code, without separators or whitespace.
          maxLength: 3
          minLength: 3
          type: string
        type:
          default: hkLocal
          description: '**hkLocal**'
          enum:
          - hkLocal
          type: string
      required:
      - type
      - accountNumber
      - clearingCode
      type: object
    HULocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 24-digit bank account number, without separators or whitespace.
          maxLength: 24
          minLength: 24
          type: string
        type:
          default: huLocal
          description: '**huLocal**'
          enum:
          - huLocal
          type: string
      required:
      - type
      - accountNumber
      type: object
    IbanAccountIdentification:
      additionalProperties: false
      properties:
        iban:
          description: The international bank account number as defined in the [ISO-13616](https://www.iso.org/standard/81090.html)
            standard.
          type: string
        type:
          default: iban
          description: '**iban**'
          enum:
          - iban
          type: string
      required:
      - type
      - iban
      type: object
    IdentificationData:
      additionalProperties: false
      properties:
        cardNumber:
          description: The card number of the document that was issued (AU only).
          type: string
        expiryDate:
          description: The expiry date of the document, in YYYY-MM-DD format.
          type: string
        issuerCountry:
          deprecated: true
          x-deprecatedInVersion: '1'
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country code where the document was issued. For example, **US**.
          type: string
        issuerState:
          description: The state or province where the document was issued (AU only).
          type: string
        nationalIdExempt:
          description: Applies only to individuals in the US. Set to **true** if the
            individual does not have an SSN. To verify their identity, Adyen will
            require them to upload an ID document.
          type: boolean
        number:
          description: The number in the document.
          type: string
        type:
          description: "Type of identity data. For individuals, the following types\
            \ are supported:\n\n- Australia: **driversLicense**, **passport**\n\n\
            - Hong Kong: **driversLicense**, **nationalIdNumber**, **passport**\n\n\
            - New Zealand: **driversLicense**, **passport**\n\n- Singapore: **driversLicense**,\
            \ **nationalIdNumber**, **passport** \n\n- All other supported countries:\
            \ **nationalIdNumber**"
          enum:
          - nationalIdNumber
          - passport
          - driversLicense
          - identityCard
          type: string
      required:
      - type
      type: object
    Individual:
      additionalProperties: false
      properties:
        birthData:
          description: The individual's birth information.
          $ref: '#/components/schemas/BirthData'
        email:
          description: The email address of the legal entity.
          type: string
        identificationData:
          description: Information about the individual's identification document.
          $ref: '#/components/schemas/IdentificationData'
        name:
          description: The individual's name.
          $ref: '#/components/schemas/Name'
        nationality:
          description: The individual's nationality.
          type: string
        phone:
          description: The phone number of the legal entity.
          $ref: '#/components/schemas/PhoneNumber'
        residentialAddress:
          description: The residential address of the individual.
          $ref: '#/components/schemas/Address'
        taxInformation:
          x-addedInVersion: '2'
          description: The tax information of the individual.
          items:
            $ref: '#/components/schemas/TaxInformation'
          type: array
        webData:
          deprecated: true
          x-deprecatedInVersion: '1'
          description: The website and app URL of the legal entity.
          $ref: '#/components/schemas/WebData'
      required:
      - name
      - residentialAddress
      type: object
    LegalEntity:
      additionalProperties: false
      properties:
        capabilities:
          additionalProperties:
            $ref: '#/components/schemas/LegalEntityCapability'
          description: Contains key-value pairs that specify the actions that the
            legal entity can do in your platform.The key is a capability required
            for your integration. For example, **issueCard** for Issuing.The value
            is an object containing the settings for the capability.
          readOnly: true
          type: object
        documentDetails:
          x-addedInVersion: '2'
          description: List of documents uploaded for the legal entity.
          items:
            $ref: '#/components/schemas/DocumentReference'
          type: array
        documents:
          deprecated: true
          x-deprecatedInVersion: '1'
          x-deprecatedMessage: Use the `documentDetails` array instead.
          description: List of documents uploaded for the legal entity.
          items:
            $ref: '#/components/schemas/EntityReference'
          type: array
        entityAssociations:
          description: 'List of legal entities associated with the current legal entity.

            For example, ultimate beneficial owners associated with an organization
            through ownership or control, or as signatories.'
          items:
            $ref: '#/components/schemas/LegalEntityAssociation'
          type: array
        id:
          description: The unique identifier of the legal entity.
          readOnly: true
          type: string
        individual:
          description: Information about the individual. Required if `type` is **individual**.
          $ref: '#/components/schemas/Individual'
        organization:
          description: Information about the organization. Required if `type` is **organization**.
          $ref: '#/components/schemas/Organization'
        problems:
          x-addedInVersion: '3'
          description: List of verification errors related to capabilities for the
            legal entity.
          items:
            $ref: '#/components/schemas/CapabilityProblem'
          type: array
        reference:
          description: Your reference for the legal entity, maximum 150 characters.
          maxLength: 150
          type: string
        soleProprietorship:
          x-addedInVersion: '2'
          description: Information about the sole proprietorship. Required if `type`
            is **soleProprietorship**.
          $ref: '#/components/schemas/SoleProprietorship'
        transferInstruments:
          description: List of transfer instruments that the legal entity owns.
          items:
            $ref: '#/components/schemas/TransferInstrumentReference'
          readOnly: true
          type: array
        trust:
          description: Information about the trust. Required if `type` is **trust**.
          $ref: '#/components/schemas/Trust'
        type:
          description: 'The type of legal entity.


            Possible values: **individual**, **organization**, **soleProprietorship**,
            or **trust**.'
          enum:
          - individual
          - organization
          - soleProprietorship
          - trust
          - unincorporatedPartnership
          type: string
        verificationDeadlines:
          x-addedInVersion: '3'
          description: List of verification deadlines and the capabilities that will
            be disallowed if verification errors are not resolved.
          items:
            $ref: '#/components/schemas/VerificationDeadline'
          readOnly: true
          type: array
        verificationPlan:
          description: A key-value pair that specifies the verification process for
            a legal entity. Set to **upfront** for upfront verification for [marketplaces](https://docs.adyen.com/marketplaces/verification-overview/verification-types/#upfront-verification).
          type: string
      required:
      - id
      type: object
    LegalEntityAssociation:
      additionalProperties: false
      properties:
        associatorId:
          description: The unique identifier of another legal entity with which the
            `legalEntityId` is associated. When the `legalEntityId` is associated
            to legal entities other than the current one, the response returns all
            the associations.
          readOnly: true
          type: string
        entityType:
          description: 'The legal entity type of associated legal entity.


            For example, **organization**, **soleProprietorship** or **individual**.'
          readOnly: true
          type: string
        jobTitle:
          description: The individual's job title if the `type` is **uboThroughControl**
            or **signatory**.
          type: string
        legalEntityId:
          description: The unique identifier of the associated [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id).
          type: string
        name:
          description: 'The name of the associated [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id).


            - For **individual**, `name.firstName` and `name.lastName`.

            - For **organization**, `legalName`.

            - For **soleProprietorship**, `name`.'
          readOnly: true
          type: string
        relationship:
          description: 'The individual''s relationship to a legal representative if
            the `type` is **legalRepresentative**. Possible values: **parent**, **guardian**.'
          type: string
        settlorExemptionReason:
          description: 'Defines the Kyc Exemption Reason for a Settlor associated
            with a trust.


            For example, **professionalServiceProvider**, **deceased**, or **contributionBelowThreshold**.'
          items:
            type: string
          readOnly: true
          type: array
        type:
          description: 'Defines the relationship of the legal entity to the current
            legal entity.


            Possible value for individuals: **legalRepresentative**.


            Possible values for organizations: **uboThroughOwnership**, **uboThroughControl**,
            **director**, **signatory**, or **ultimateParentCompany**.


            Possible values for sole proprietorships: **soleProprietorship**.


            Possible value for trusts: **trust**.


            Possible values for trust members: **definedBeneficiary**, **protector**,
            **secondaryTrustee**, **settlor**, **uboThroughControl**, or **uboThroughOwnership**.'
          enum:
          - definedBeneficiary
          - director
          - immediateParentCompany
          - legalRepresentative
          - pciSignatory
          - protector
          - secondaryTrustee
          - settlor
          - signatory
          - soleProprietorship
          - trust
          - trustOwnership
          - uboThroughControl
          - uboThroughOwnership
          - ultimateParentCompany
          - undefinedBeneficiary
          type: string
      required:
      - legalEntityId
      - type
      type: object
    LegalEntityCapability:
      additionalProperties: false
      properties:
        allowed:
          description: Indicates whether the capability is allowed. Adyen sets this
            to **true** if the verification is successful.
          readOnly: true
          type: boolean
        allowedLevel:
          description: 'The capability level that is allowed for the legal entity.


            Possible values: **notApplicable**, **low**, **medium**, **high**.'
          enum:
          - high
          - low
          - medium
          - notApplicable
          readOnly: true
          type: string
        allowedSettings:
          description: The settings that are allowed for the legal entity.
          readOnly: true
          $ref: '#/components/schemas/CapabilitySettings'
        requested:
          description: Indicates whether the capability is requested. To check whether
            the legal entity is permitted to use the capability, refer to the `allowed`
            field.
          readOnly: true
          type: boolean
        requestedLevel:
          description: 'The requested level of the capability. Some capabilities,
            such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels),
            have different levels. Levels increase the capability, but also require
            additional checks and increased monitoring.


            Possible values: **notApplicable**, **low**, **medium**, **high**.'
          enum:
          - high
          - low
          - medium
          - notApplicable
          readOnly: true
          type: string
        requestedSettings:
          description: The settings that are requested for the legal entity.
          readOnly: true
          $ref: '#/components/schemas/CapabilitySettings'
        transferInstruments:
          x-addedInVersion: '2'
          description: The capability status of transfer instruments associated with
            the legal entity.
          items:
            $ref: '#/components/schemas/SupportingEntityCapability'
          readOnly: true
          type: array
        verificationStatus:
          description: 'The status of the verification checks for the capability.


            Possible values:


            * **pending**: Adyen is running the verification.


            * **invalid**: The verification failed. Check if the `errors` array contains
            more information.


            * **valid**: The verification has been successfully completed.


            * **rejected**: Adyen has verified the information, but found reasons
            to not allow the capability.

            '
          readOnly: true
          type: string
      type: object
    LegalEntityInfo:
      additionalProperties: false
      properties:
        capabilities:
          additionalProperties:
            $ref: '#/components/schemas/LegalEntityCapability'
          description: Contains key-value pairs that specify the actions that the
            legal entity can do in your platform.The key is a capability required
            for your integration. For example, **issueCard** for Issuing.The value
            is an object containing the settings for the capability.
          readOnly: true
          type: object
        entityAssociations:
          description: 'List of legal entities associated with the current legal entity.

            For example, ultimate beneficial owners associated with an organization
            through ownership or control, or as signatories.'
          items:
            $ref: '#/components/schemas/LegalEntityAssociation'
          type: array
        individual:
          description: Information about the individual. Required if `type` is **individual**.
          $ref: '#/components/schemas/Individual'
        organization:
          description: Information about the organization. Required if `type` is **organization**.
          $ref: '#/components/schemas/Organization'
        reference:
          description: Your reference for the legal entity, maximum 150 characters.
          maxLength: 150
          type: string
        soleProprietorship:
          x-addedInVersion: '2'
          description: Information about the sole proprietorship. Required if `type`
            is **soleProprietorship**.
          $ref: '#/components/schemas/SoleProprietorship'
        trust:
          description: Information about the trust. Required if `type` is **trust**.
          $ref: '#/components/schemas/Trust'
        type:
          description: 'The type of legal entity.


            Possible values: **individual**, **organization**, **soleProprietorship**,
            or **trust**.'
          enum:
          - individual
          - organization
          - soleProprietorship
          - trust
          - unincorporatedPartnership
          type: string
        verificationPlan:
          description: A key-value pair that specifies the verification process for
            a legal entity. Set to **upfront** for upfront verification for [marketplaces](https://docs.adyen.com/marketplaces/verification-overview/verification-types/#upfront-verification).
          type: string
      type: object
    LegalEntityInfoRequiredType:
      additionalProperties: false
      properties:
        capabilities:
          additionalProperties:
            $ref: '#/components/schemas/LegalEntityCapability'
          description: Contains key-value pairs that specify the actions that the
            legal entity can do in your platform.The key is a capability required
            for your integration. For example, **issueCard** for Issuing.The value
            is an object containing the settings for the capability.
          readOnly: true
          type: object
        entityAssociations:
          description: 'List of legal entities associated with the current legal entity.

            For example, ultimate beneficial owners associated with an organization
            through ownership or control, or as signatories.'
          items:
            $ref: '#/components/schemas/LegalEntityAssociation'
          type: array
        individual:
          description: Information about the individual. Required if `type` is **individual**.
          $ref: '#/components/schemas/Individual'
        organization:
          description: Information about the organization. Required if `type` is **organization**.
          $ref: '#/components/schemas/Organization'
        reference:
          description: Your reference for the legal entity, maximum 150 characters.
          maxLength: 150
          type: string
        soleProprietorship:
          x-addedInVersion: '2'
          description: Information about the sole proprietorship. Required if `type`
            is **soleProprietorship**.
          $ref: '#/components/schemas/SoleProprietorship'
        trust:
          description: Information about the trust. Required if `type` is **trust**.
          $ref: '#/components/schemas/Trust'
        type:
          description: "The type of legal entity.\n\n Possible values: **individual**,\
            \ **organization**, **soleProprietorship**, or **trust**."
          enum:
          - individual
          - organization
          - soleProprietorship
          - trust
          - unincorporatedPartnership
          type: string
        verificationPlan:
          description: A key-value pair that specifies the verification process for
            a legal entity. Set to **upfront** for upfront verification for [marketplaces](https://docs.adyen.com/marketplaces/verification-overview/verification-types/#upfront-verification).
          type: string
      required:
      - type
      type: object
    NOLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 11-digit bank account number, without separators or whitespace.
          maxLength: 11
          minLength: 11
          type: string
        type:
          default: noLocal
          description: '**noLocal**'
          enum:
          - noLocal
          type: string
      required:
      - type
      - accountNumber
      type: object
    NZLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 15-16 digit bank account number. The first 2 digits are
            the bank number, the next 4 digits are the branch number, the next 7 digits
            are the account number, and the final 2-3 digits are the suffix.
          maxLength: 16
          minLength: 15
          type: string
        type:
          default: nzLocal
          description: '**nzLocal**'
          enum:
          - nzLocal
          type: string
      required:
      - type
      - accountNumber
      type: object
    Name:
      additionalProperties: false
      properties:
        firstName:
          description: The individual's first name. Must not be blank.
          type: string
        infix:
          description: The infix in the individual's name, if any.
          type: string
        lastName:
          description: The individual's last name. Must not be blank.
          type: string
      required:
      - firstName
      - lastName
      type: object
    NumberAndBicAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The bank account number, without separators or whitespace.
            The length and format depends on the bank or country.
          maxLength: 34
          type: string
        additionalBankIdentification:
          description: Additional identification codes of the bank. Some banks may
            require these identifiers for cross-border transfers.
          $ref: '#/components/schemas/AdditionalBankIdentification'
        bic:
          description: The bank's 8- or 11-character BIC or SWIFT code.
          maxLength: 11
          minLength: 8
          type: string
        type:
          default: numberAndBic
          description: '**numberAndBic**'
          enum:
          - numberAndBic
          type: string
      required:
      - type
      - accountNumber
      - bic
      type: object
    OnboardingLink:
      additionalProperties: false
      properties:
        url:
          description: 'The URL of the hosted onboarding page where you need to redirect
            your user. This URL expires after 4 minutes and can only be used once.


            If the link expires, you need to create a new link.'
          type: string
      type: object
    OnboardingLinkInfo:
      additionalProperties: false
      properties:
        locale:
          description: "The language that will be used for the page, specified by\
            \ a combination of two letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)\
            \ language and [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
            \ country codes. See possible valuesfor [marketplaces](https://docs.adyen.com/marketplaces/onboard-users/hosted#supported-languages)\
            \ or [platforms](https://docs.adyen.com/platforms/onboard-users/hosted#supported-languages).\
            \ \n\nIf not specified in the request or if the language is not supported,\
            \ the page uses the browser language. If the browser language is not supported,\
            \ the page uses **en-US** by default."
          type: string
        redirectUrl:
          description: The URL where the user is redirected after they complete hosted
            onboarding.
          type: string
        settings:
          description: Key-value pairs indicating the settings for the hosted onboarding
            page. The key represents a specific setting.
          $ref: '#/components/schemas/OnboardingLinkSettings'
        themeId:
          description: The unique identifier of the hosted onboarding theme.
          type: string
      type: object
    OnboardingLinkSettings:
      additionalProperties: false
      properties:
        acceptedCountries:
          description: 'The list of countries the user can choose from in hosted onboarding
            when `editPrefilledCountry` is allowed.


            The value must be in the two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country code format.


            The array is empty by default, allowing all [countries and regions supported
            by hosted onboarding](https://docs.adyen.com/platforms/onboard-users/#hosted-onboarding).'
          items:
            type: string
          type: array
        allowBankAccountFormatSelection:
          description: 'Default value: **false**


            Indicates if the user can select the format for their payout account (if
            applicable).'
          type: boolean
        allowIntraRegionCrossBorderPayout:
          description: 'Default value: **false**


            Indicates if the user can select a payout account in a different EU/EEA
            location (including Switzerland and the UK) than the location of their
            legal entity.'
          type: boolean
        changeLegalEntityType:
          description: 'Default value: **true**


            Indicates if the user can change their legal entity type.'
          type: boolean
        editPrefilledCountry:
          description: 'Default value: **true**


            Indicates if the user can change the country of their legal entity''s
            address, for example the registered address of an organization.'
          type: boolean
        hideOnboardingIntroductionIndividual:
          description: 'Default value: **true**


            Indicates whether the introduction screen is hidden for the user of the
            individual legal entity type.

            The introduction screen provides brief instructions for the subsequent
            steps in the hosted onboarding process.'
          type: boolean
        hideOnboardingIntroductionOrganization:
          description: 'Default value: **true**


            Indicates whether the introduction screen is hidden for the user of the
            organization legal entity type.

            The introduction screen provides brief instructions for the subsequent
            steps in the hosted onboarding process.'
          type: boolean
        hideOnboardingIntroductionSoleProprietor:
          description: 'Default value: **true**


            Indicates whether the introduction screen is hidden for the user of the
            sole proprietorship legal entity type.

            The introduction screen provides brief instructions for the subsequent
            steps in the hosted onboarding process.'
          type: boolean
        hideOnboardingIntroductionTrust:
          description: 'Default value: **true**


            Indicates whether the introduction screen is hidden for the user of the
            trust legal entity type.

            The introduction screen provides brief instructions for the subsequent
            steps in the hosted onboarding process.'
          type: boolean
        instantBankVerification:
          description: 'Default value: **true**


            Indicates if the user can initiate the verification process through open
            banking providers, like Plaid or Tink.'
          type: boolean
        requirePciSignEcomMoto:
          description: 'Default value: **false**


            Indicates if the user is required to sign a PCI questionnaires for the
            **ecomMoto** sales channel type.'
          type: boolean
        requirePciSignEcommerce:
          description: 'Default value: **false**


            Indicates if the user is required to sign a PCI questionnaires for the
            **eCommerce** sales channel type.'
          type: boolean
        requirePciSignPos:
          description: 'Default value: **false**


            Indicates if the user is required to sign a PCI questionnaires for the
            **pos** sales channel type.'
          type: boolean
        requirePciSignPosMoto:
          description: 'Default value: **false**


            Indicates if the user is required to sign a PCI questionnaires for the
            **posMoto** sales channel type.'
          type: boolean
        transferInstrumentLimit:
          description: The maximum number of transfer instruments the user can create.
          format: int32
          type: integer
      type: object
    OnboardingTheme:
      additionalProperties: false
      properties:
        createdAt:
          description: The creation date of the theme.
          format: date-time
          type: string
        description:
          description: The description of the theme.
          type: string
        id:
          description: The unique identifier of the theme.
          type: string
        properties:
          additionalProperties:
            type: string
          description: The properties of the theme.
          type: object
        updatedAt:
          description: The date when the theme was last updated.
          format: date-time
          type: string
      required:
      - properties
      - id
      - createdAt
      type: object
    OnboardingThemes:
      additionalProperties: false
      properties:
        next:
          description: The next page. Only present if there is a next page.
          type: string
        previous:
          description: The previous page. Only present if there is a previous page.
          type: string
        themes:
          description: List of onboarding themes.
          items:
            $ref: '#/components/schemas/OnboardingTheme'
          type: array
      required:
      - themes
      type: object
    Organization:
      additionalProperties: false
      properties:
        countryOfGoverningLaw:
          x-addedInVersion: '2'
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country code of the governing country.
          type: string
        dateOfIncorporation:
          x-addedInVersion: '2'
          description: The date when the organization was incorporated in YYYY-MM-DD
            format.
          type: string
        description:
          description: Your description for the organization.
          type: string
        doingBusinessAs:
          description: The organization's trading name, if different from the registered
            legal name.
          type: string
        email:
          description: The email address of the legal entity.
          type: string
        legalName:
          description: The organization's legal name.
          type: string
        phone:
          description: The phone number of the legal entity.
          $ref: '#/components/schemas/PhoneNumber'
        principalPlaceOfBusiness:
          description: The address where the organization operates from. Provide this
            if the principal place of business is different from the `registeredAddress`.
          $ref: '#/components/schemas/Address'
        registeredAddress:
          description: The address of the organization registered at their registrar
            (such as the Chamber of Commerce).
          $ref: '#/components/schemas/Address'
        registrationNumber:
          description: The organization's registration number.
          type: string
        stockData:
          description: Information about the organization's publicly traded stock.
            Provide this object only if `type` is **listedPublicCompany**.
          $ref: '#/components/schemas/StockData'
        taxInformation:
          x-addedInVersion: '2'
          description: The tax information of the organization.
          items:
            $ref: '#/components/schemas/TaxInformation'
          type: array
        taxReportingClassification:
          x-addedInVersion: '2'
          description: The tax reporting classification (FATCA/CRS self-certification)
            of the organization.
          $ref: '#/components/schemas/TaxReportingClassification'
        type:
          description: 'Type of organization.


            Possible values: **associationIncorporated**, **governmentalOrganization**,
            **listedPublicCompany**, **nonProfit**, **partnershipIncorporated**, **privateCompany**.'
          enum:
          - associationIncorporated
          - governmentalOrganization
          - listedPublicCompany
          - nonProfit
          - partnershipIncorporated
          - privateCompany
          type: string
        vatAbsenceReason:
          x-addedInVersion: '2'
          description: 'The reason the organization has not provided a VAT number.


            Possible values: **industryExemption**, **belowTaxThreshold**.'
          enum:
          - industryExemption
          - belowTaxThreshold
          type: string
        vatNumber:
          x-addedInVersion: '2'
          description: The organization's VAT number.
          type: string
        webData:
          deprecated: true
          x-deprecatedInVersion: '1'
          description: The website and app URL of the legal entity.
          $ref: '#/components/schemas/WebData'
      required:
      - legalName
      - registeredAddress
      type: object
    OwnerEntity:
      additionalProperties: false
      properties:
        id:
          description: Unique identifier of the resource that owns the document. For
            `type` **legalEntity**, this value is the unique identifier of the [legal
            entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id).
            For `type` **bankAccount**, this value is the unique identifier of the
            [transfer instrument](https://docs.adyen.com/api-explorer/legalentity/latest/post/transferInstruments#responses-200-id).
          type: string
        type:
          description: 'Type of resource that owns the document.


            Possible values: **legalEntity**, **bankAccount**.'
          type: string
      required:
      - id
      - type
      type: object
    PLLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 26-digit bank account number ([Numer rachunku](https://pl.wikipedia.org/wiki/Numer_Rachunku_Bankowego)),
            without separators or whitespace.
          maxLength: 26
          minLength: 26
          type: string
        type:
          default: plLocal
          description: '**plLocal**'
          enum:
          - plLocal
          type: string
      required:
      - type
      - accountNumber
      type: object
    PciDocumentInfo:
      additionalProperties: false
      properties:
        createdAt:
          description: The date the questionnaire was created, in ISO 8601 extended
            format. For example, 2022-12-18T10:15:30+01:00
          format: date-time
          type: string
        id:
          description: The unique identifier of the signed questionnaire.
          type: string
        validUntil:
          description: The expiration date of the questionnaire, in ISO 8601 extended
            format. For example, 2022-12-18T10:15:30+01:00
          format: date-time
          type: string
      type: object
    PciSigningRequest:
      additionalProperties: false
      properties:
        pciTemplateReferences:
          description: The array of Adyen-generated unique identifiers for the questionnaires.
          items:
            type: string
          type: array
        signedBy:
          description: The [legal entity ID](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id)
            of the individual who signs the PCI questionnaire.
          type: string
      required:
      - signedBy
      - pciTemplateReferences
      type: object
    PciSigningResponse:
      additionalProperties: false
      properties:
        pciQuestionnaireIds:
          description: The unique identifiers of the signed PCI documents.
          items:
            type: string
          type: array
        signedBy:
          description: The [legal entity ID](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id)
            of the individual who signed the PCI questionnaire.
          type: string
      type: object
    PhoneNumber:
      additionalProperties: false
      properties:
        number:
          description: The full phone number, including the country code. For example,
            **+3112345678**.
          type: string
        type:
          description: "The type of phone number.\n Possible values: **mobile**, **landline**,\
            \ **sip**, **fax.** "
          type: string
      required:
      - number
      type: object
    RemediatingAction:
      additionalProperties: false
      properties:
        code:
          type: string
        message:
          type: string
      type: object
    SELocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 7- to 10-digit bank account number ([Bankkontonummer](https://sv.wikipedia.org/wiki/Bankkonto)),
            without the clearing number, separators, or whitespace.
          maxLength: 10
          minLength: 7
          type: string
        clearingNumber:
          description: The 4- to 5-digit clearing number ([Clearingnummer](https://sv.wikipedia.org/wiki/Clearingnummer)),
            without separators or whitespace.
          maxLength: 5
          minLength: 4
          type: string
        type:
          default: seLocal
          description: '**seLocal**'
          enum:
          - seLocal
          type: string
      required:
      - type
      - accountNumber
      - clearingNumber
      type: object
    SGLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 4- to 19-digit bank account number, without separators
            or whitespace.
          maxLength: 19
          minLength: 4
          type: string
        bic:
          description: The bank's 8- or 11-character BIC or SWIFT code.
          maxLength: 11
          minLength: 8
          type: string
        type:
          default: sgLocal
          description: '**sgLocal**'
          enum:
          - sgLocal
          type: string
      required:
      - accountNumber
      - bic
      type: object
    ServiceError:
      additionalProperties: false
      properties:
        errorCode:
          description: The error code mapped to the error message.
          type: string
        errorType:
          description: The category of the error.
          type: string
        message:
          description: A short explanation of the issue.
          type: string
        pspReference:
          description: The PSP reference of the payment.
          type: string
        status:
          description: The HTTP response status.
          format: int32
          type: integer
      type: object
    SetTaxElectronicDeliveryConsentRequest:
      additionalProperties: false
      properties:
        US1099k:
          description: Consent to electronically deliver tax form US1099-K.
          type: boolean
      type: object
    SoleProprietorship:
      additionalProperties: false
      properties:
        countryOfGoverningLaw:
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country code of the governing country.
          type: string
        dateOfIncorporation:
          x-addedInVersion: '2'
          description: The date when the legal arrangement was incorporated in YYYY-MM-DD
            format.
          type: string
        doingBusinessAs:
          description: The registered name, if different from the `name`.
          type: string
        name:
          description: The legal name.
          type: string
        principalPlaceOfBusiness:
          description: The business address. Required if the principal place of business
            is different from the `registeredAddress`.
          $ref: '#/components/schemas/Address'
        registeredAddress:
          description: The address registered at the registrar, such as the Chamber
            of Commerce.
          $ref: '#/components/schemas/Address'
        registrationNumber:
          description: The registration number.
          type: string
        taxAbsent:
          x-addedInVersion: '2'
          description: The tax information is absent.
          nullable: true
          type: boolean
        taxInformation:
          x-addedInVersion: '2'
          description: The tax information of the entity.
          items:
            $ref: '#/components/schemas/TaxInformation'
          type: array
        vatAbsenceReason:
          description: 'The reason for not providing a VAT number.


            Possible values: **industryExemption**, **belowTaxThreshold**.'
          enum:
          - industryExemption
          - belowTaxThreshold
          type: string
        vatNumber:
          description: The VAT number.
          type: string
      required:
      - name
      - countryOfGoverningLaw
      - registeredAddress
      type: object
    SourceOfFunds:
      additionalProperties: false
      properties:
        acquiringBusinessLineId:
          deprecated: true
          x-deprecatedInVersion: '3'
          x-deprecatedMessage: This field will be removed in v4.
          description: The unique identifier of the business line that will be the
            source of funds.This must be a business line for a **receivePayments**
            or **receiveFromPlatformPayments** capability.
          type: string
        adyenProcessedFunds:
          description: Indicates whether the funds are coming from transactions processed
            by Adyen. If **false**, a `description` is required.
          type: boolean
        description:
          description: Text describing the source of funds. For example, for `type`
            **business**, provide a description of where the business transactions
            come from, such as payments through bank transfer. Required when `adyenProcessedFunds`
            is **false**.
          type: string
        type:
          description: 'The type of the source of funds. Possible value: **business**.'
          enum:
          - business
          type: string
      type: object
    StockData:
      additionalProperties: false
      properties:
        marketIdentifier:
          description: The four-digit [Market Identifier Code](https://en.wikipedia.org/wiki/Market_Identifier_Code)
            of the stock market where the organization's stocks are traded.
          type: string
        stockNumber:
          description: The 12-digit International Securities Identification Number
            (ISIN) of the company, without dashes (-).
          type: string
        tickerSymbol:
          description: The stock ticker symbol.
          type: string
      type: object
    SupportingEntityCapability:
      additionalProperties: false
      properties:
        allowed:
          description: 'Indicates whether the capability is allowed for the supporting
            entity.


            If a capability is allowed for a supporting entity but not for the parent
            legal entity, this means the legal entity has other supporting entities
            that failed verification.


            **You can use the allowed supporting entity** regardless of the verification
            status of other supporting entities.'
          readOnly: true
          type: boolean
        id:
          description: 'Supporting entity reference '
          readOnly: true
          type: string
        requested:
          description: 'Indicates whether the supporting entity capability is requested. '
          readOnly: true
          type: boolean
        verificationStatus:
          description: 'The status of the verification checks for the capability of
            the supporting entity.


            Possible values:


            * **pending**: Adyen is running the verification.


            * **invalid**: The verification failed. Check if the `errors` array contains
            more information.


            * **valid**: The verification has been successfully completed.


            * **rejected**: Adyen has verified the information, but found reasons
            to not allow the capability.

            '
          readOnly: true
          type: string
      type: object
    TaxInformation:
      additionalProperties: false
      properties:
        country:
          description: The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country code.
          maxLength: 2
          minLength: 2
          type: string
        number:
          description: The tax ID number (TIN) of the organization or individual.
          type: string
        type:
          description: 'The TIN type depending on the country where it was issued.
            Only provide if the country has multiple tax IDs: Singapore, Sweden, the
            UK, or the US. For example, provide **SSN**, **EIN**, or **ITIN** for
            the US.'
          type: string
      type: object
    TaxReportingClassification:
      additionalProperties: false
      properties:
        businessType:
          description: 'The organization''s business type.


            Possible values: **other**, **listedPublicCompany**, **subsidiaryOfListedPublicCompany**,
            **governmentalOrganization**, **internationalOrganization**, **financialInstitution**.'
          enum:
          - other
          - listedPublicCompany
          - subsidiaryOfListedPublicCompany
          - governmentalOrganization
          - internationalOrganization
          - financialInstitution
          type: string
        financialInstitutionNumber:
          description: The Global Intermediary Identification Number (GIIN) required
            for FATCA. Only required if the organization is a US financial institution
            and the `businessType` is **financialInstitution**.
          type: string
        mainSourceOfIncome:
          description: 'The organization''s main source of income. Only required if
            `businessType` is **other**.


            Possible values: **businessOperation**, **realEstateSales**, **investmentInterestOrRoyalty**,
            **propertyRental**, **other**.'
          enum:
          - businessOperation
          - realEstateSales
          - investmentInterestOrRoyalty
          - propertyRental
          - other
          type: string
        type:
          description: 'The tax reporting classification type.


            Possible values: **nonFinancialNonReportable**, **financialNonReportable**,
            **nonFinancialActive**, **nonFinancialPassive**.'
          enum:
          - nonFinancialNonReportable
          - financialNonReportable
          - nonFinancialActive
          - nonFinancialPassive
          type: string
      type: object
    TermsOfServiceAcceptanceInfo:
      additionalProperties: false
      properties:
        acceptedBy:
          description: The unique identifier of the user that accepted the Terms of
            Service.
          type: string
        acceptedFor:
          description: The unique identifier of the legal entity for which the Terms
            of Service are accepted.
          type: string
        createdAt:
          description: The date when the Terms of Service were accepted.
          format: date-time
          type: string
        id:
          description: An Adyen-generated reference for the accepted Terms of Service.
          type: string
        type:
          description: 'The type of Terms of Service.


            Possible values:

            *  **adyenForPlatformsManage**

            *  **adyenIssuing**

            *  **adyenForPlatformsAdvanced**

            *  **adyenCapital**

            *  **adyenAccount**

            *  **adyenCard**

            *  **adyenFranchisee**

            *  **adyenPccr**

            *  **adyenChargeCard**


            '
          enum:
          - adyenAccount
          - adyenCapital
          - adyenCard
          - adyenChargeCard
          - adyenForPlatformsAdvanced
          - adyenForPlatformsManage
          - adyenFranchisee
          - adyenIssuing
          - adyenPccr
          type: string
      type: object
    TransferInstrument:
      additionalProperties: false
      properties:
        bankAccount:
          description: Contains information about the legal entity's bank account.
          $ref: '#/components/schemas/BankAccountInfo'
        capabilities:
          x-addedInVersion: '3'
          additionalProperties:
            $ref: '#/components/schemas/SupportingEntityCapability'
          description: List of capabilities for this transfer instrument.
          type: object
        documentDetails:
          x-addedInVersion: '2'
          description: List of documents uploaded for the transfer instrument.
          items:
            $ref: '#/components/schemas/DocumentReference'
          type: array
        id:
          description: The unique identifier of the transfer instrument.
          readOnly: true
          type: string
        legalEntityId:
          description: The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id)
            that owns the transfer instrument.
          type: string
        problems:
          x-addedInVersion: '3'
          description: The verification errors related to capabilities for this transfer
            instrument.
          items:
            $ref: '#/components/schemas/CapabilityProblem'
          type: array
        type:
          description: 'The type of transfer instrument.


            Possible value: **bankAccount**.'
          enum:
          - bankAccount
          - recurringDetail
          type: string
      required:
      - legalEntityId
      - type
      - bankAccount
      - id
      type: object
    TransferInstrumentInfo:
      additionalProperties: false
      properties:
        bankAccount:
          description: Contains information about the legal entity's bank account.
          $ref: '#/components/schemas/BankAccountInfo'
        legalEntityId:
          description: The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id)
            that owns the transfer instrument.
          type: string
        type:
          description: 'The type of transfer instrument.


            Possible value: **bankAccount**.'
          enum:
          - bankAccount
          - recurringDetail
          type: string
      required:
      - legalEntityId
      - type
      - bankAccount
      type: object
    TransferInstrumentReference:
      additionalProperties: false
      properties:
        accountIdentifier:
          description: The masked IBAN or bank account number.
          type: string
        id:
          description: The unique identifier of the resource.
          type: string
        realLastFour:
          description: Four last digits of the bank account number. If the transfer
            instrument is created using [instant bank account verification](https://docs.adyen.com/release-notes/platforms-and-financial-products#releaseNote=2023-05-08-hosted-onboarding),
            and it is a virtual bank account, these digits may be different from the
            last four digits of the masked account number.
          type: string
        trustedSource:
          description: Identifies if the bank account was created through [instant
            bank verification](https://docs.adyen.com/release-notes/platforms-and-financial-products#releaseNote=2023-05-08-hosted-onboarding).
          readOnly: true
          type: boolean
      required:
      - id
      - accountIdentifier
      type: object
    Trust:
      additionalProperties: false
      properties:
        countryOfGoverningLaw:
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country code of the governing country.
          type: string
        dateOfIncorporation:
          x-addedInVersion: '2'
          description: The date when the legal arrangement was incorporated in YYYY-MM-DD
            format.
          type: string
        doingBusinessAs:
          description: The registered name, if different from the `name`.
          type: string
        name:
          description: The legal name.
          type: string
        principalPlaceOfBusiness:
          description: The business address. Required if the principal place of business
            is different from the `registeredAddress`.
          $ref: '#/components/schemas/Address'
        registeredAddress:
          description: The address registered at the registrar, such as the Chamber
            of Commerce.
          $ref: '#/components/schemas/Address'
        registrationNumber:
          description: The registration number.
          type: string
        taxAbsent:
          x-addedInVersion: '2'
          description: The tax information is absent.
          nullable: true
          type: boolean
        taxInformation:
          x-addedInVersion: '2'
          description: The tax information of the entity.
          items:
            $ref: '#/components/schemas/TaxInformation'
          type: array
        type:
          description: 'Type of trust.


            Possible values for Australian trusts: **cashManagementTrust**, **corporateUnitTrust**,
            **deceasedEstate**, **discretionaryInvestmentTrust**, **discretionaryServicesManagementTrust**,
            **discretionaryTradingTrust**, **firstHomeSaverAccountsTrust**, **fixedTrust**,
            **fixedUnitTrust**, **hybridTrust**, **listedPublicUnitTrust**, **otherTrust**,
            **pooledSuperannuationTrust**, **publicTradingTrust**, **unlistedPublicUnitTrust**.'
          enum:
          - cashManagementTrust
          - corporateUnitTrust
          - deceasedEstate
          - discretionaryInvestmentTrust
          - discretionaryServicesManagementTrust
          - discretionaryTradingTrust
          - firstHomeSaverAccountsTrust
          - fixedTrust
          - fixedUnitTrust
          - hybridTrust
          - listedPublicUnitTrust
          - otherTrust
          - pooledSuperannuationTrust
          - publicTradingTrust
          - unlistedPublicUnitTrust
          type: string
        undefinedBeneficiaryInfo:
          x-addedInVersion: '2'
          description: The undefined beneficiary information of the entity.
          items:
            $ref: '#/components/schemas/UndefinedBeneficiary'
          type: array
        vatAbsenceReason:
          description: 'The reason for not providing a VAT number.


            Possible values: **industryExemption**, **belowTaxThreshold**.'
          enum:
          - industryExemption
          - belowTaxThreshold
          type: string
        vatNumber:
          description: The VAT number.
          type: string
      required:
      - name
      - countryOfGoverningLaw
      - registeredAddress
      - type
      type: object
    UKLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 8-digit bank account number, without separators or whitespace.
          maxLength: 8
          minLength: 8
          type: string
        sortCode:
          description: The 6-digit [sort code](https://en.wikipedia.org/wiki/Sort_code),
            without separators or whitespace.
          maxLength: 6
          minLength: 6
          type: string
        type:
          default: ukLocal
          description: '**ukLocal**'
          enum:
          - ukLocal
          type: string
      required:
      - type
      - accountNumber
      - sortCode
      type: object
    USLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The bank account number, without separators or whitespace.
          maxLength: 18
          minLength: 2
          type: string
        accountType:
          default: checking
          description: 'The bank account type.


            Possible values: **checking** or **savings**. Defaults to **checking**.'
          enum:
          - checking
          - savings
          type: string
        routingNumber:
          description: The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number),
            without separators or whitespace.
          maxLength: 9
          minLength: 9
          type: string
        type:
          default: usLocal
          description: '**usLocal**'
          enum:
          - usLocal
          type: string
      required:
      - type
      - accountNumber
      - routingNumber
      type: object
    UndefinedBeneficiary:
      additionalProperties: false
      properties:
        description:
          description: The details of the undefined beneficiary.
          type: string
        reference:
          description: The reference of the undefined beneficiary.
          readOnly: true
          type: string
      type: object
    VerificationDeadline:
      additionalProperties: false
      properties:
        capabilities:
          description: The list of capabilities that will be disallowed if information
            is not reviewed by the time of the deadline
          items:
            enum:
            - acceptExternalFunding
            - acceptPspFunding
            - acceptTransactionInRestrictedCountries
            - acceptTransactionInRestrictedCountriesCommercial
            - acceptTransactionInRestrictedCountriesConsumer
            - acceptTransactionInRestrictedIndustries
            - acceptTransactionInRestrictedIndustriesCommercial
            - acceptTransactionInRestrictedIndustriesConsumer
            - acquiring
            - atmWithdrawal
            - atmWithdrawalCommercial
            - atmWithdrawalConsumer
            - atmWithdrawalInRestrictedCountries
            - atmWithdrawalInRestrictedCountriesCommercial
            - atmWithdrawalInRestrictedCountriesConsumer
            - authorisedPaymentInstrumentUser
            - getGrantOffers
            - issueBankAccount
            - issueCard
            - issueCardCommercial
            - issueCardConsumer
            - issueCreditLimit
            - localAcceptance
            - payout
            - payoutToTransferInstrument
            - processing
            - receiveFromBalanceAccount
            - receiveFromPlatformPayments
            - receiveFromThirdParty
            - receiveFromTransferInstrument
            - receiveGrants
            - receivePayments
            - sendToBalanceAccount
            - sendToThirdParty
            - sendToTransferInstrument
            - thirdPartyFunding
            - useCard
            - useCardCommercial
            - useCardConsumer
            - useCardInRestrictedCountries
            - useCardInRestrictedCountriesCommercial
            - useCardInRestrictedCountriesConsumer
            - useCardInRestrictedIndustries
            - useCardInRestrictedIndustriesCommercial
            - useCardInRestrictedIndustriesConsumer
            - withdrawFromAtm
            - withdrawFromAtmCommercial
            - withdrawFromAtmConsumer
            - withdrawFromAtmInRestrictedCountries
            - withdrawFromAtmInRestrictedCountriesCommercial
            - withdrawFromAtmInRestrictedCountriesConsumer
            type: string
          readOnly: true
          type: array
        entityIds:
          description: The unique identifiers of the legal entity or supporting entities
            that the deadline applies to
          items:
            type: string
          readOnly: true
          type: array
        expiresAt:
          description: The date that verification is due by before capabilities are
            disallowed.
          format: date-time
          readOnly: true
          type: string
      required:
      - expiresAt
      - capabilities
      type: object
    VerificationError:
      additionalProperties: false
      properties:
        capabilities:
          description: Contains key-value pairs that specify the actions that the
            legal entity can do in your platform. The key is a capability required
            for your integration. For example, **issueCard** for Issuing.The value
            is an object containing the settings for the capability.
          items:
            enum:
            - acceptExternalFunding
            - acceptPspFunding
            - acceptTransactionInRestrictedCountries
            - acceptTransactionInRestrictedCountriesCommercial
            - acceptTransactionInRestrictedCountriesConsumer
            - acceptTransactionInRestrictedIndustries
            - acceptTransactionInRestrictedIndustriesCommercial
            - acceptTransactionInRestrictedIndustriesConsumer
            - acquiring
            - atmWithdrawal
            - atmWithdrawalCommercial
            - atmWithdrawalConsumer
            - atmWithdrawalInRestrictedCountries
            - atmWithdrawalInRestrictedCountriesCommercial
            - atmWithdrawalInRestrictedCountriesConsumer
            - authorisedPaymentInstrumentUser
            - getGrantOffers
            - issueBankAccount
            - issueCard
            - issueCardCommercial
            - issueCardConsumer
            - issueCreditLimit
            - localAcceptance
            - payout
            - payoutToTransferInstrument
            - processing
            - receiveFromBalanceAccount
            - receiveFromPlatformPayments
            - receiveFromThirdParty
            - receiveFromTransferInstrument
            - receiveGrants
            - receivePayments
            - sendToBalanceAccount
            - sendToThirdParty
            - sendToTransferInstrument
            - thirdPartyFunding
            - useCard
            - useCardCommercial
            - useCardConsumer
            - useCardInRestrictedCountries
            - useCardInRestrictedCountriesCommercial
            - useCardInRestrictedCountriesConsumer
            - useCardInRestrictedIndustries
            - useCardInRestrictedIndustriesCommercial
            - useCardInRestrictedIndustriesConsumer
            - withdrawFromAtm
            - withdrawFromAtmCommercial
            - withdrawFromAtmConsumer
            - withdrawFromAtmInRestrictedCountries
            - withdrawFromAtmInRestrictedCountriesCommercial
            - withdrawFromAtmInRestrictedCountriesConsumer
            type: string
          type: array
        code:
          description: The general error code.
          type: string
        message:
          description: The general error message.
          type: string
        remediatingActions:
          description: An object containing possible solutions to fix a verification
            error.
          items:
            $ref: '#/components/schemas/RemediatingAction'
          type: array
        subErrors:
          description: An array containing more granular information about the cause
            of the verification error.
          items:
            $ref: '#/components/schemas/VerificationError-recursive'
          type: array
        type:
          description: 'The type of error.


            Possible values:

            *  **invalidInput**

            *  **dataMissing**

            *  **pendingStatus**

            *  **rejected**

            *  **dataReview**


            '
          enum:
          - dataMissing
          - dataReview
          - invalidInput
          - pendingStatus
          - rejected
          type: string
      type: object
    VerificationError-recursive:
      additionalProperties: false
      properties:
        capabilities:
          description: Contains key-value pairs that specify the actions that the
            legal entity can do in your platform. The key is a capability required
            for your integration. For example, **issueCard** for Issuing.The value
            is an object containing the settings for the capability.
          items:
            enum:
            - acceptExternalFunding
            - acceptPspFunding
            - acceptTransactionInRestrictedCountries
            - acceptTransactionInRestrictedCountriesCommercial
            - acceptTransactionInRestrictedCountriesConsumer
            - acceptTransactionInRestrictedIndustries
            - acceptTransactionInRestrictedIndustriesCommercial
            - acceptTransactionInRestrictedIndustriesConsumer
            - acquiring
            - atmWithdrawal
            - atmWithdrawalCommercial
            - atmWithdrawalConsumer
            - atmWithdrawalInRestrictedCountries
            - atmWithdrawalInRestrictedCountriesCommercial
            - atmWithdrawalInRestrictedCountriesConsumer
            - authorisedPaymentInstrumentUser
            - getGrantOffers
            - issueBankAccount
            - issueCard
            - issueCardCommercial
            - issueCardConsumer
            - issueCreditLimit
            - localAcceptance
            - payout
            - payoutToTransferInstrument
            - processing
            - receiveFromBalanceAccount
            - receiveFromPlatformPayments
            - receiveFromThirdParty
            - receiveFromTransferInstrument
            - receiveGrants
            - receivePayments
            - sendToBalanceAccount
            - sendToThirdParty
            - sendToTransferInstrument
            - thirdPartyFunding
            - useCard
            - useCardCommercial
            - useCardConsumer
            - useCardInRestrictedCountries
            - useCardInRestrictedCountriesCommercial
            - useCardInRestrictedCountriesConsumer
            - useCardInRestrictedIndustries
            - useCardInRestrictedIndustriesCommercial
            - useCardInRestrictedIndustriesConsumer
            - withdrawFromAtm
            - withdrawFromAtmCommercial
            - withdrawFromAtmConsumer
            - withdrawFromAtmInRestrictedCountries
            - withdrawFromAtmInRestrictedCountriesCommercial
            - withdrawFromAtmInRestrictedCountriesConsumer
            type: string
          type: array
        code:
          description: The general error code.
          type: string
        message:
          description: The general error message.
          type: string
        type:
          description: 'The type of error.


            Possible values:

            *  **invalidInput**

            *  **dataMissing**

            *  **pendingStatus**

            *  **rejected**

            *  **dataReview**


            '
          enum:
          - dataMissing
          - dataReview
          - invalidInput
          - pendingStatus
          - rejected
          type: string
        remediatingActions:
          description: An object containing possible solutions to fix a verification
            error.
          items:
            $ref: '#/components/schemas/RemediatingAction'
          type: array
      required: []
      type: object
    VerificationErrors:
      additionalProperties: false
      properties:
        problems:
          x-addedInVersion: '2'
          description: List of the verification errors.
          items:
            $ref: '#/components/schemas/CapabilityProblem'
          type: array
      type: object
    WebData:
      additionalProperties: false
      properties:
        webAddress:
          description: The URL of the website or the app store URL.
          type: string
        webAddressId:
          description: The unique identifier of the web address.
          readOnly: true
          type: string
      type: object
    WebDataExemption:
      additionalProperties: false
      properties:
        reason:
          description: 'The reason why the web data was not provided. Possible value:
            **noOnlinePresence**.'
          enum:
          - noOnlinePresence
          - notCollectedDuringOnboarding
          type: string
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
    BasicAuth:
      scheme: basic
      type: http
  examples:
    get-businessLines-id-success-200:
      summary: Details of a business line
      description: Example response when getting the business line details
      value:
        service: banking
        industryCode: '4531'
        legalEntityId: LE00000000000000000000001
        sourceOfFunds:
          adyenProcessedFunds: false
          description: Funds from my flower shop business
          type: business
        webData:
        - webAddress: https://www.adyen.com
          webAddressId: SE322JV223222J5H8V87B3DHN
        id: SE322KH223222F5GV2SQ924F6
    get-documents-id-success-200:
      summary: Details of a document
      description: Example response when getting document details
      value:
        type: registrationDocument
        attachments:
        - content: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        description: Registration doc for Example Company
        fileName: Registration doc for Example Company
        owner:
          id: LE00000000000000000000001
          type: legalEntity
        id: SE322JV223222F5GV2N9L8GDK
    get-legalEntities-id-businessLines-success-200:
      summary: List of business lines for a legal entity
      description: Example response when getting the list of business lines for a
        legal entity
      value:
        businessLines:
        - service: banking
          industryCode: '55'
          legalEntityId: LE00000000000000000000001
          sourceOfFunds:
            adyenProcessedFunds: false
            description: Funds from my flower shop business
            type: business
          webData:
          - webAddress: https://www.adyen.com
            webAddressId: SE577HA334222K5H8V87B3BPU
          id: SE322JV223222F5GVGMLNB83F
        - service: paymentProcessing
          industryCode: 339E
          legalEntityId: LE00000000000000000000001
          salesChannels:
          - eCommerce
          - ecomMoto
          webData:
          - webAddress: https://yoururl.com
            webAddressId: SE908HJ723222F5GVGPNR55YH
          id: SE322JV223222F5GVGPNRB9GJ
    get-legalEntities-id-pciQuestionnaires-pciid-success-200:
      summary: Details of a PCI questionnaire
      description: Example response when getting the details of a PCI questionnaire
      value:
        content: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        createdAt: '2023-03-02T17:54:19.538365Z'
        id: PCID422GZ22322565HHMH48CW63CPH
        validUntil: '2024-03-01T17:54:19.538365Z'
    get-legalEntities-id-pciQuestionnaires-success-200:
      summary: Details of PCI questionnaires signed by a user
      description: Example response when getting the list of PCI questionnaires
      value:
        data:
        - createdAt: '2023-03-02T17:54:19.538365Z'
          id: PCID422GZ22322565HHMH48CW63CPH
          validUntil: '2024-03-01T17:54:19.538365Z'
        - createdAt: '2023-03-02T17:54:19.538365Z'
          id: PCID422GZ22322565HHMH49CW75Z9H
          validUntil: '2024-03-01T17:54:19.538365Z'
    get-legalEntities-id-success-200:
      summary: Details of a legal entity
      description: Example response when getting the details of a legal entity
      value:
        capabilities:
          sendToTransferInstrument:
            allowed: false
            requested: true
            transferInstruments:
            - allowed: false
              id: SE322KH223222F5GXZFNM3BGP
              requested: true
              verificationStatus: pending
            verificationStatus: pending
          receivePayments:
            allowed: false
            requested: true
            verificationStatus: pending
          sendToBalanceAccount:
            allowed: false
            requested: true
            verificationStatus: pending
          receiveFromPlatformPayments:
            allowed: false
            requested: true
            verificationStatus: pending
          receiveFromBalanceAccount:
            allowed: false
            requested: true
            verificationStatus: pending
        individual:
          email: s.hopper@example.com
          birthData:
            dateOfBirth: '1990-06-21'
          name:
            firstName: Simone
            lastName: Hopper
          residentialAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
            street2: '274'
        type: individual
        id: YOUR_LEGAL_ENTITY
        transferInstruments:
        - id: SE322KH223222F5GXZFNM3BGP
          accountIdentifier: NL**ABNA******0123
          trustedSource: false
    get-legalEntities-id-termsOfServiceAcceptanceInfos-success-200:
      summary: Terms of Service information for a legal entity
      description: Example response when getting Terms of Service information for
        a legal entity
      value:
        data:
        - acceptedBy: LE00000000000000000000002
          acceptedFor: LE00000000000000000000001
          createdAt: '2022-12-05T13:36:58.212253Z'
          id: TOSA000AB00000000B2AAAB2BA0AA0
          type: adyenIssuing
    get-legalEntities-id-termsOfServiceStatus-success-200:
      summary: Terms of Service status for a legal entity
      description: Example response when getting the type of Terms of Service
      value:
        termsOfServiceTypes:
        - adyenIssuing
    get-themes-id-success-200:
      summary: Details of a page theme
      description: Example response when getting the details of a page theme
      value:
        description: Light colors theme
        properties:
          privacyStatementPage: https://www.adyen.com/legal/terms-and-conditions
          supportPage: https://www.adyen.com/contact
          logo: ONBA422JV223222D5FWC4TK25S3DQW
          pageTitle: Example onboarding light colors
          backgroundColor: '#FFFFFF'
          faqPage: https://docs.adyen.com/hosted-onboarding-faqs
          backgroundImage: ONBA422JV223222D5G82M96F6P2VTV
          pageLayout: withBackground
        createdAt: '2022-06-22T00:00:00+02:00'
        id: ONBT422KH223222D5G82M968PB46HR
        updatedAt: '2022-08-25T00:00:00+02:00'
    get-themes-success-200:
      summary: List of hosted onboarding themes for your balance platform
      description: Example response when getting the list of hosted onboarding themes
      value:
        themes:
        - description: Dark colors theme
          properties:
            supportPage: https://www.adyen.com/contact
            logo: ONBA422JV223222D5G8VG2T8JV39GV
            pageTitle: Example onboarding dark colors
            backgroundColor: '#000000'
            faqPage: https://docs.adyen.com/hosted-onboarding-faqs
            backgroundImage: ONBA422KH223222D5G8VG2TG9S5ZBH
            pageLayout: withBackground
          createdAt: '2022-01-20T00:00:00+01:00'
          id: ONBT422JV223222D5FGJ77B9C52WNN
          updatedAt: '2022-08-25T00:00:00+02:00'
        - description: Light colors theme
          properties:
            privacyStatementPage: https://www.adyen.com/legal/terms-and-conditions
            supportPage: https://www.adyen.com/contact
            logo: ONBA422JV223222D5FWC4TK25S3DQW
            pageTitle: Example onboarding light colors
            backgroundColor: '#FFFFFF'
            faqPage: https://docs.adyen.com/hosted-onboarding-faqs
            backgroundImage: ONBA422JV223222D5G82M96F6P2VTV
            pageLayout: withBackground
          createdAt: '2022-06-22T00:00:00+02:00'
          id: ONBT422KH223222D5G82M968PB46HR
          updatedAt: '2022-08-25T00:00:00+02:00'
    get-transferInstruments-id-success-200:
      summary: Details of a transfer instrument
      description: Example response when getting the details of a new transfer instrument
      value:
        bankAccount:
          accountIdentification:
            type: iban
            iban: NL62ABNA0000000123
          countryCode: NL
        legalEntityId: LE00000000000000000000001
        type: bankAccount
        id: SE322KH223222F5GXZFNM3BGP
    patch-businessLines-id-updateBusinessLine:
      summary: Update a business line
      description: Example request for updating the industry code of a business line
      value:
        industryCode: '55'
        webData:
        - webAddress: https://www.example.com
    patch-businessLines-id-updateBusinessLine-200:
      summary: Business line updated
      description: Example response for updating the industry code of a business line
      value:
        service: banking
        industryCode: '55'
        legalEntityId: LE00000000000000000000001
        sourceOfFunds:
          adyenProcessedFunds: false
          description: Funds from my flower shop business
          type: business
        webData:
        - webAddress: https://www.example.com
          webAddressId: SE966LI345672J5H8V87B3FGH
        id: SE322JV223222F5GVGMLNB83F
    patch-documents-id-updateDocument:
      summary: Update a document
      description: Example request for updating a document
      value:
        type: proofOfIndustry
        description: Proof of industry doc for Example Company
    patch-documents-id-updateDocument-200:
      summary: Document updated
      description: Example response when a document is updated
      value:
        type: proofOfIndustry
        attachments:
        - content: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        description: Proof of industry for Example Company
        fileName: Proof of industry for Example Company
        owner:
          id: LE00000000000000000000001
          type: legalEntity
        id: SE322JV223222F5GV2N9L8GDK
    patch-legalEntities-id-changeLegalEntityType:
      summary: Change a legal entity from an organization to an individual
      description: Example request when changing the legal entity type
      value:
        type: individual
    patch-legalEntities-id-changeLegalEntityType-200:
      summary: Legal entity type changed
      description: Example response when changing the legal entity type
      value:
        individual:
          name:
            firstName: Explorer
            lastName: Company based in US
          residentialAddress:
            country: US
        type: individual
        id: LE00000000000000000000001
    patch-legalEntities-id-termsOfService-termsofservicedocumentid-updateTermsofService:
      summary: Accept the Terms of Service document
      description: Example request for accepting the Terms of Service document
      value:
        acceptedBy: LE00000000000000000000002
    patch-legalEntities-id-termsOfService-termsofservicedocumentid-updateTermsofService-200:
      summary: Terms of Service document accepted
      description: Example response when accepting a Terms of Service document
      value:
        acceptedBy: LE00000000000000000000002
        id: TOSA000AB00000000B2AAAB2BA0AA0
        language: en
        termsOfServiceDocumentId: abc123
        type: adyenIssuing
    patch-legalEntities-id-updateLegalEntityOrganization:
      summary: Add entity associations to an organization
      description: Example request adding entity associations to a legal entity
      value:
        entityAssociations:
        - jobTitle: CEO
          legalEntityId: LE00000000000000000000002
          type: uboThroughControl
    patch-legalEntities-id-updateLegalEntityOrganization-200:
      summary: Entity associations added
      description: Example response for adding an entity association to an organization
      value:
        entityAssociations:
        - associatorId: LE00000000000000000000001
          entityType: individual
          jobTitle: CEO
          legalEntityId: LE00000000000000000000002
          name: Simone Hopper
          type: uboThroughControl
        organization:
          email: john.doe@adyen.com
          phone:
            number: '646467363'
            type: mobile
          description: FinTech
          doingBusinessAs: Adyen BV
          legalName: Adyen BV
          registeredAddress:
            city: AMS
            country: NL
            postalCode: 1234EE
            stateOrProvince: NH
            street: Simon Carmiggeltstraat 6 - 50
          registrationNumber: ''
          stockData:
            marketIdentifier: ADYN
            stockNumber: NL012345ABC4
            tickerSymbol: ADYN.M
          type: listedPublicCompany
        type: organization
        id: LE00000000000000000000001
    patch-legalEntities-id-updateLegalEntitySoleProp:
      summary: Add entity associations to a sole proprietorship
      description: Example request adding an entity association to a sole proprietorship
      value:
        entityAssociations:
        - legalEntityId: LE00000000000000000000002
          type: soleProprietorship
    patch-legalEntities-id-updateLegalEntitySoleProp-200:
      summary: Entity association added to a sole proprietorship
      description: Example response for adding an entity association to a sole proprietorship
      value:
        entityAssociations:
        - associatorId: LE00000000000000000000001
          entityType: soleProprietorship
          legalEntityId: LE00000000000000000000002
          type: soleProprietorship
        individual:
          email: s.eller@example.com
          birthData:
            dateOfBirth: '1990-06-21'
          name:
            firstName: Shelly
            lastName: Eller
          residentialAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
        type: individual
        id: LE00000000000000000000001
    patch-legalEntities-id-updateLegalRepresentative:
      summary: Associate a legal representative with a minor user
      description: Example request associating a legal representative with a minor
        user
      value:
        entityAssociations:
        - legalEntityId: LE00000000000000000000002
          relationship: parent
          type: legalRepresentative
    patch-legalEntities-id-updateLegalRepresentative-200:
      summary: Legal representative associated
      description: Example response for associating a legal representative with a
        minor user
      value:
        entityAssociations:
        - associatorId: LE00000000000000000000001
          legalEntityId: LE00000000000000000000002
          name: Simone Hopper
          type: legalRepresentative
        individual:
          email: s.eller@example.com
          birthData:
            dateOfBirth: '1990-06-21'
          name:
            firstName: Shelly
            lastName: Eller
          residentialAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
        type: individual
        id: LE00000000000000000000001
    patch-legalEntities-id-updateTrustMember:
      summary: Associate a trust member with a trust
      description: Example request associating a trust member with a trust
      value:
        entityAssociations:
        - legalEntityId: LE00000000000000000000002
          type: protector
    patch-legalEntities-id-updateTrustMember-200:
      summary: Trust member associated
      description: Example response for associating a trust member with a trust
      value:
        entityAssociations:
        - associatorId: LE00000000000000000000001
          legalEntityId: LE00000000000000000000002
          name: Simone Hopper
          type: protector
        trust:
          name: Example Trust
          type: fixedUnitTrust
          doingBusinessAs: West's Store
          countryOfGoverningLaw: AU
          taxInformation:
          - country: AU
            type: ABN
            number: '12345678901'
          registeredAddress:
            street: Winfield Avenue
            city: Sydney
            postalCode: '1197'
            stateOrProvince: NSW
            country: AU
          undefinedBeneficiaryInfo:
          - description: My future children
        type: trust
        id: LE00000000000000000000001
    patch-legalEntities-id-updateTrustMemberExempt:
      summary: Associate an exempt settlor with a trust
      description: Example request associating an exempt settlor with a trust
      value:
        entityAssociations:
        - legalEntityId: LE00000000000000000000002
          type: settlor
          entityType: individual
          settlorExemptionReason:
          - deceased
          - professionalServiceProvider
    patch-legalEntities-id-updateTrustMemberExempt-200:
      summary: Exempt settlor associated
      description: Example response for associating an exempt settlor with a trust
      value:
        entityAssociations:
        - associatorId: LE00000000000000000000001
          legalEntityId: LE00000000000000000000002
          type: settlor
          entityType: individual
          settlorExemptionReason:
          - deceased
          - professionalServiceProvider
        trust:
          name: Example Trust
          type: fixedUnitTrust
          doingBusinessAs: West's Store
          countryOfGoverningLaw: AU
          taxInformation:
          - country: AU
            type: ABN
            number: '12345678901'
          registeredAddress:
            street: Winfield Avenue
            city: Sydney
            postalCode: '1197'
            stateOrProvince: NSW
            country: AU
          undefinedBeneficiaryInfo:
          - description: My future children
        type: trust
        id: LE00000000000000000000001
    patch-transferInstruments-id-updateTransferInstrument:
      summary: Update a transfer instrument
      description: Example request for updating a transfer instrument
      value:
        bankAccount:
          accountIdentification:
            type: iban
            iban: NL02ABNA0123456789
        legalEntityId: LE00000000000000000000001
        type: bankAccount
    patch-transferInstruments-id-updateTransferInstrument-200:
      summary: Transfer instrument updated
      description: Example response for updating a transfer instrument
      value:
        bankAccount:
          accountIdentification:
            type: iban
            iban: NL02ABNA0123456789
          countryCode: NL
        legalEntityId: LE00000000000000000000001
        type: bankAccount
        id: SE322KH223222F5GXZFNM3BGP
    post-businessLines-createBusinessLines-businessAccounts:
      summary: Create a business line for a business account
      description: Example request for creating a business line for a business account
      value:
        service: banking
        industryCode: '4531'
        webData:
        - webAddress: https://www.adyen.com
        legalEntityId: LE00000000000000000000001
        sourceOfFunds:
          type: business
          adyenProcessedFunds: false
          description: Funds from my flower shop business
    post-businessLines-createBusinessLines-businessAccounts-200:
      summary: Business line created
      description: Example response for creating a business line for a business account
      value:
        industryCode: '4531'
        legalEntityId: LE00000000000000000000001
        service: banking
        sourceOfFunds:
          adyenProcessedFunds: false
          description: Funds from my flower shop business
          type: business
        webData:
        - webAddress: https://www.adyen.com
          webAddressId: SE322JV223222F5H4CQGS77V4
        id: SE322KT223222D5FJ7TJN2986
    post-businessLines-createBusinessLines-receive:
      summary: Create a business line for receiving payments
      description: Example request for receiving payments
      value:
        service: paymentProcessing
        industryCode: 339E
        salesChannels:
        - eCommerce
        - ecomMoto
        legalEntityId: LE00000000000000000000001
        webData:
        - webAddress: https://yoururl.com
    post-businessLines-createBusinessLines-receive-200:
      summary: Business line created
      description: Example response for creating a business line for receiving payments
      value:
        service: paymentProcessing
        industryCode: 339E
        legalEntityId: LE00000000000000000000001
        salesChannels:
        - eCommerce
        - ecomMoto
        webData:
        - webAddress: https://yoururl.com
          webAddressId: SE654AC923222F5H4CQGS77V4
        id: SE322KT223222D5FJ7TJN2986
    post-documents-uploadDocument:
      summary: Upload a document
      description: Example request for uploading a document
      value:
        type: registrationDocument
        attachments:
        - content: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        description: Registration doc for Example Company
        owner:
          id: LE00000000000000000000001
          type: legalEntity
    post-documents-uploadDocument-200:
      summary: Document uploaded
      description: Example response when a document is uploaded
      value:
        type: registrationDocument
        attachments:
        - content: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        description: Registration doc for Example Company
        fileName: Registration doc for Example Company
        owner:
          id: LE00000000000000000000001
          type: legalEntity
        id: SE322JV223222F5GV2N9L8GDK
    post-legalEntities-createLegalEntityIndividualAU:
      summary: Create a legal entity for an individual residing in Australia
      description: Example request for creating a legal entity for an individual residing
        in Australia
      value:
        type: individual
        individual:
          residentialAddress:
            city: Sydney
            country: AU
            postalCode: '1122'
            stateOrProvince: NSW
            street: Winfield Avenue
            street2: '12'
          name:
            firstName: Shelly
            lastName: Eller
          identificationData:
            issuerState: NSW
            number: '1234567891'
            type: driversLicense
            cardNumber: '112327'
          birthData:
            dateOfBirth: '1991-01-01'
          email: s.hopper@example.com
    post-legalEntities-createLegalEntityIndividualAU-200:
      summary: Individual legal entity created
      description: Example response for creating a legal entity for an individual
        residing in Australia
      value:
        individual:
          email: s.hopper@example.com
          birthData:
            dateOfBirth: '1991-01-01'
          identificationData:
            cardNumber: '112327'
            issuerState: NSW
            number: '1234567891'
            type: driversLicense
          name:
            firstName: Shelly
            lastName: Eller
          residentialAddress:
            city: Sydney
            country: AU
            postalCode: '1122'
            stateOrProvince: NSW
            street: Winfield Avenue
            street2: '12'
        type: individual
        id: LE00000000000000000000001
    post-legalEntities-createLegalEntityIndividualNL:
      summary: Create a legal entity for an individual residing in the Netherlands
      description: Example request for creating a legal entity for an individual residing
        in the Netherlands
      value:
        type: individual
        individual:
          residentialAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
          name:
            firstName: Shelly
            lastName: Eller
          birthData:
            dateOfBirth: '1990-06-21'
          email: s.eller@example.com
    post-legalEntities-createLegalEntityIndividualNL-200:
      summary: Individual legal entity created
      description: Example response for creating a legal entity for an individual
        residing in the Netherlands
      value:
        individual:
          email: s.eller@example.com
          birthData:
            dateOfBirth: '1990-06-21'
          name:
            firstName: Shelly
            lastName: Eller
          residentialAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
        type: individual
        id: LE00000000000000000000001
    post-legalEntities-createLegalEntityIndividualUS:
      summary: Create a legal entity for an individual residing in the US
      description: Example request for creating a legal entity for an individual residing
        in the US
      value:
        type: individual
        individual:
          residentialAddress:
            city: New York
            country: US
            postalCode: '10003'
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
          phone:
            number: '+14153671502'
            type: mobile
          name:
            firstName: Shelly
            lastName: Eller
          birthData:
            dateOfBirth: '1990-06-21'
          email: s.eller@example.com
    post-legalEntities-createLegalEntityIndividualUS-200:
      summary: Individual legal entity created
      description: Example response for creating a legal entity for an individual
        residing in the US
      value:
        individual:
          email: s.eller@example.com
          phone:
            number: '+14153671502'
            type: mobile
          birthData:
            dateOfBirth: '1990-06-21'
          name:
            firstName: Shelly
            lastName: Eller
          residentialAddress:
            city: New York
            country: US
            postalCode: '10003'
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
        type: individual
        id: LE00000000000000000000001
    post-legalEntities-createLegalEntityOrganizationNL:
      summary: Create a legal entity for a Dutch organization
      description: Example request for creating a legal entity for an organization
        operating in the Netherlands
      value:
        type: organization
        organization:
          legalName: Explorer Company based in NL
          doingBusinessAs: API Company Trading
          type: privateCompany
          registeredAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
          registrationNumber: '34179503'
          email: organization@example.com
        entityAssociations:
        - jobTitle: CEO
          legalEntityId: LE00000000000000000000001
          type: signatory
    post-legalEntities-createLegalEntityOrganizationNL-200:
      summary: Organization legal entity created
      description: Example response for creating a legal entity for an organization
        operating in the Netherlands
      value:
        entityAssociations:
        - associatorId: LE00000000000000000000002
          entityType: individual
          jobTitle: CEO
          legalEntityId: LE00000000000000000000001
          name: Simone Hopper
          type: signatory
        organization:
          email: organization@example.com
          doingBusinessAs: API Company Trading
          legalName: Explorer Company based in NL
          registeredAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
          registrationNumber: '34179503'
          type: privateCompany
        type: organization
        id: LE00000000000000000000002
    post-legalEntities-createLegalEntityOrganizationUS:
      summary: Create a legal entity for an organization in the US
      description: Example request for creating a legal entity for an organization
        operating in the US
      value:
        type: organization
        organization:
          legalName: Explorer Company based in US
          registrationNumber: '101002749'
          type: privateCompany
          registeredAddress:
            city: New York
            country: US
            postalCode: '10003'
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
    post-legalEntities-createLegalEntityOrganizationUS-200:
      summary: Organization legal entity created
      description: Example response for creating a legal entity for an organization
        operating in the US
      value:
        organization:
          legalName: Explorer Company based in US
          registrationNumber: '101002749'
          registeredAddress:
            city: New York
            country: US
            postalCode: '10003'
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
          type: privateCompany
        type: organization
        id: LE00000000000000000000001
    post-legalEntities-createLegalEntitySolePropNL:
      summary: Create a legal entity for a Dutch sole proprietor
      description: Example request for creating a legal entity for a sole proprietor
        operating in the Netherlands
      value:
        type: soleProprietorship
        soleProprietorship:
          name: Shelly Seller Sole Trader
          countryOfGoverningLaw: NL
          registeredAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
    post-legalEntities-createLegalEntitySolePropNL-200:
      summary: Sole proprietor legal entity created
      description: Example response for creating a legal entity for a sole proprietor
        operating in the Netherlands
      value:
        type: soleProprietorship
        soleProprietorship:
          name: Shelly Seller Sole Trader
          countryOfGoverningLaw: NL
          registeredAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
        id: LE00000000000000000000001
    post-legalEntities-createLegalEntitySolePropUS:
      summary: Create a legal entity for a sole proprietor in the US
      description: Example request for creating a legal entity for a sole proprietor
        operating in the US
      value:
        type: soleProprietorship
        soleProprietorship:
          name: Shelly Eller Sole Trader
          countryOfGoverningLaw: US
          registeredAddress:
            city: New York
            country: US
            postalCode: '10003'
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
    post-legalEntities-createLegalEntitySolePropUS-200:
      summary: Sole proprietor legal entity created
      description: Example response for creating a legal entity for a sole proprietor
        operating in the US
      value:
        type: soleProprietorship
        soleProprietorship:
          name: Shelly Eller Sole Trader
          countryOfGoverningLaw: US
          registeredAddress:
            city: New York
            country: US
            postalCode: '10003'
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
        id: LE00000000000000000000001
    post-legalEntities-createTrustAU:
      summary: Create a legal entity for a trust in Australia
      description: Example request for creating a legal entity for a trust in Australia
      value:
        type: trust
        trust:
          name: Example Trust
          type: fixedUnitTrust
          doingBusinessAs: West's Store
          countryOfGoverningLaw: AU
          taxInformation:
          - country: AU
            type: ABN
            number: '12345678123'
          registeredAddress:
            street: Winfield Avenue
            city: Sydney
            postalCode: '1197'
            stateOrProvince: NSW
            country: AU
          undefinedBeneficiaryInfo:
          - description: My future children
    post-legalEntities-createTrustAU-200:
      summary: Trust legal entity created
      description: Example response for creating a legal entity for a trust in Australia
      value:
        trust:
          countryOfGoverningLaw: AU
          doingBusinessAs: West's Store
          name: Example Trust
          registeredAddress:
            city: Sydney
            country: AU
            postalCode: '1197'
            stateOrProvince: NSW
            street: Winfield Avenue
          taxInformation:
          - country: AU
            number: '12345678901'
            type: ABN
          type: fixedUnitTrust
          undefinedBeneficiaryInfo:
          - description: My future children
            reference: SE322KH223222J5HJ6JRB75HQ
        type: trust
        id: LE322KH223222J5HJ6JRB75C5
    post-legalEntities-id-checkVerificationErrors-checkVerificationErrors-200:
      summary: Verification errors for a legal entity
      description: Example response when checking the verification errors of a legal
        entity
      value:
        problems:
        - entity:
            id: LE00000000000000000000001
            type: LegalEntity
          verificationErrors:
          - capabilities:
            - receivePayments
            - sendToTransferInstrument
            code: '2_8179'
            message: '''vatNumber'' was missing.'
            remediatingActions:
            - code: '2_158'
              message: Add 'organization.vatNumber' to legal entity.
            type: dataMissing
          - capabilities:
            - receivePayments
            - sendToTransferInstrument
            code: '2_8067'
            message: '''Signatory'' was missing.'
            remediatingActions:
            - code: '2_124'
              message: Add 'organization.entityAssociations' of type 'signatory' to
                legal entity
            type: dataMissing
          - capabilities:
            - receivePayments
            - sendToTransferInstrument
            code: '2_8189'
            message: '''UBO through control'' was missing.'
            remediatingActions:
            - code: '2_151'
              message: Add 'organization.entityAssociations' of type 'uboThroughControl'
                to legal entity
            type: dataMissing
          - capabilities:
            - receivePayments
            code: '2_8190'
            message: '''businessLine'' was missing.'
            remediatingActions:
            - code: '2_136'
              message: Add business line
            type: dataMissing
          - capabilities:
            - receivePayments
            - sendToTransferInstrument
            code: '2_8021'
            message: '''individual.residentialAddress.postalCode'' was missing.'
            remediatingActions:
            - code: '2_108'
              message: Add 'individual.residentialAddress.postalCode' to legal entity
            type: dataMissing
          - capabilities:
            - receivePayments
            - sendToTransferInstrument
            code: '2_8064'
            message: '''UBO through ownership'' was missing.'
            remediatingActions:
            - code: '2_123'
              message: Add 'organization.entityAssociations' of type 'uboThroughOwnership'
                to legal entity
            type: dataMissing
          - capabilities:
            - receivePayments
            - sendToTransferInstrument
            code: '2_8141'
            message: '''Registration document'' was missing.'
            remediatingActions:
            - code: '1_501'
              message: Upload a registration document
            type: dataMissing
          - capabilities:
            - receivePayments
            - sendToTransferInstrument
            code: '2_8019'
            message: '''individual.residentialAddress.street'' was missing.'
            remediatingActions:
            - code: '2_106'
              message: Add 'individual.residentialAddress.street' to legal entity
            type: dataMissing
          - capabilities:
            - receivePayments
            - sendToTransferInstrument
            code: '2_8020'
            message: '''individual.residentialAddress.city'' was missing.'
            remediatingActions:
            - code: '2_107'
              message: Add 'individual.residentialAddress.city' to legal entity
            type: dataMissing
          - capabilities:
            - receivePayments
            - sendToTransferInstrument
            code: '2_8045'
            message: '''organization.taxId'' was missing.'
            remediatingActions:
            - code: '2_118'
              message: Add 'organization.taxId' to legal entity
            type: dataMissing
          - capabilities:
            - receivePayments
            - sendToTransferInstrument
            code: '2_8043'
            message: '''organization.registrationNumber'' was missing.'
            remediatingActions:
            - code: '2_117'
              message: Add 'organization.registrationNumber' to legal entity
            type: dataMissing
    post-legalEntities-id-confirmDataReview-confirmDataReview-200:
      summary: Data review for a legal entity
      description: Example response when reviewing the data for a legal entity
      value:
        dataReviewedAt: '2023-11-13T15:19:02Z'
    post-legalEntities-id-onboardingLinks-createOnboardingLink:
      summary: Create a hosted onboarding link
      description: Example request for creating a hosted onboarding link
      value:
        themeId: YOUR_THEME_ID
        redirectUrl: https://your.redirect-url.com/
        locale: nl-NL
    post-legalEntities-id-onboardingLinks-createOnboardingLink-200:
      summary: Hosted onboarding link created
      description: Example response for a hosted onboarding link
      value:
        url: https://balanceplatform-test.adyen.com/balanceplatform/uo/form/xtl-...?signature=..&cd=..&redirectUrl=https%3A%2F%2Fyour.redirect-url.com%2F&expiry=1667226404807&locale=nl-NL
    post-legalEntities-id-pciQuestionnaires-generatePciTemplates-createPciQuestionnaire:
      summary: Generate PCI questionnaires
      description: Example request for generating PCI questionnaires in French
      value:
        language: fr
    post-legalEntities-id-pciQuestionnaires-generatePciTemplates-createPciQuestionnaire-200:
      summary: PCI questionnaires returned
      description: Example response for getting PCI questionnaires
      value:
        content: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        language: fr
        pciTemplateReferences:
        - PCIT-T7KC6VGL
        - PCIT-PKB6DKS4
    post-legalEntities-id-pciQuestionnaires-signPciTemplates-signPciQuestionnaire:
      summary: Sign PCI questionnaires
      description: Example request for signing PCI questionnaires
      value:
        signedBy: LE00000000000000000000002
        pciTemplateReferences:
        - PCIT-T7KC6VGL
        - PCIT-PKB6DKS4
    post-legalEntities-id-pciQuestionnaires-signPciTemplates-signPciQuestionnaire-200:
      summary: PCI questionnaires signed
      description: Example response for signing PCI questionnaires
      value:
        pciQuestionnaireIds:
        - PCID422GZ22322565HHMH48CW63CPH
        - PCID422GZ22322565HHMH49CW75Z9H
    post-legalEntities-id-termsOfService-createTermsofService:
      summary: Get the Terms of Service document
      description: Example request for getting the Terms of Service document
      value:
        type: adyenIssuing
        language: en
    post-legalEntities-id-termsOfService-createTermsofService-200:
      summary: Terms of Service document returned
      description: Example response for getting a Terms of Service document
      value:
        id: LE00000000000000000000001
        type: adyenIssuing
        language: en
        document: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        termsOfServiceDocumentId: abc123
        termsOfServiceDocumentFormat: JSON
    post-transferInstruments-createTransferInstrumentEUR:
      summary: Add a EUR bank account
      description: Example request for creating a transfer instrument for EUR
      value:
        legalEntityId: LE00000000000000000000001
        type: bankAccount
        bankAccount:
          accountIdentification:
            type: iban
            iban: NL62ABNA0000000123
    post-transferInstruments-createTransferInstrumentEUR-200:
      summary: Bank account added
      description: Example response for adding a bank account as a transfer instrument
        of a legal entity
      value:
        bankAccount:
          accountIdentification:
            type: iban
            iban: NL62ABNA0000000123
          countryCode: NL
          trustedSource: false
        legalEntityId: LE00000000000000000000001
        type: bankAccount
        capabilities:
          sendToTransferInstrument:
            allowed: false
            requested: true
            verificationStatus: pending
        id: SE322KH223222F5GXZFNM3BGP
    post-transferInstruments-createTransferInstrumentUSD:
      summary: Add a USD bank account
      description: Example request for creating a transfer instrument for USD
      value:
        legalEntityId: LE00000000000000000000001
        type: bankAccount
        bankAccount:
          accountIdentification:
            type: usLocal
            accountNumber: '0000000123'
            routingNumber: '121202211'
    post-transferInstruments-createTransferInstrumentUSD-200:
      summary: Bank account added
      description: Example response for adding a bank account as a transfer instrument
        of a legal entity
      value:
        bankAccount:
          accountIdentification:
            type: usLocal
            accountNumber: '0000000123'
            accountType: checking
            routingNumber: '121202211'
          countryCode: US
          trustedSource: false
        legalEntityId: LE00000000000000000000001
        type: bankAccount
        capabilities:
          sendToTransferInstrument:
            allowed: false
            requested: true
            verificationStatus: pending
        id: SE322JV223222F5GJVKHH8DTC
