openapi: 3.0.0
servers:
  - url: 'https://checkout-test.adyen.com/v41'
info:
  version: '41'
  title: Adyen Checkout API
  description: |-
    Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including One-Click and 3D Secure), mobile wallets, and local payment methods (e.g. iDEAL and Sofort).

    This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [Checkout documentation](https://docs.adyen.com/checkout).

    ## Authentication
    Each request to the Checkout API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/user-management/how-to-get-the-api-key). Then set this key to the `X-API-Key` header value, for example:

    ```
    curl
    -H "Content-Type: application/json" \
    -H "X-API-Key: Your_Checkout_API_key" \
    ...
    ```
    Note that when going live, you need to generate a new API Key to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).

    ## Versioning
    Checkout API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: "vXX", where XX is the version number.

    For example:
    ```
    https://checkout-test.adyen.com/v41/payments
    ```
  termsOfService: 'https://www.adyen.com/legal/terms-and-conditions'
  contact:
    name: Adyen Support
    url: 'https://support.adyen.com/'
    email: support@adyen.com
x-groups:
  - API Integration
  - SDK Integration
paths:
  /paymentLinks:
    post:
      summary: Creates a payment link.
      description: |-
        Creates a payment link to our hosted payment form where shoppers can pay. The list of payment methods presented to the shopper depends on the `currency` and `country` parameters sent in the request.

        For more information, refer to [Pay by Link documentation](https://docs.adyen.com/checkout/pay-by-link#create-payment-links-through-api).
      x-groupName: API Integration
      x-sortIndex: 8
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentLinkRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePaymentLinkResponse'
          description: OK - the request has succeeded.
        '400':
          description: Bad Request - a problem reading or understanding the request.
        '401':
          description: Unauthorized - authentication required.
        '403':
          description: Forbidden - insufficient permissions to process the request.
        '422':
          description: Unprocessable Entity - a request validation error.
        '500':
          description: Internal Server Error - the server could not process the request.
  /paymentMethods:
    post:
      summary: Returns available payment methods.
      description: |-
        Queries the available payment methods for a transaction based on the transaction context (like amount, country, and currency). Besides giving back a list of the available payment methods, the response also returns which input details you need to collect from the shopper (to be submitted to `/payments`).

        Although we highly recommend using this endpoint to ensure you are always offering the most up-to-date list of payment methods, its usage is optional. You can, for example, also cache the `/paymentMethods` response and update it once a week.
      x-groupName: API Integration
      x-sortIndex: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodsRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsResponse'
          description: OK - the request has succeeded.
        '400':
          description: Bad Request - a problem reading or understanding the request.
        '401':
          description: Unauthorized - authentication required.
        '403':
          description: Forbidden - insufficient permissions to process the request.
        '422':
          description: Unprocessable Entity - a request validation error.
        '500':
          description: Internal Server Error - the server could not process the request.
  /paymentSession:
    post:
      summary: Creates a payment session.
      description: |-
        Provides the data object that can be used to start the Checkout SDK. To set up the payment, pass its amount, currency, and other required parameters. We use this to optimise the payment flow and perform better risk assessment of the transaction.

        For more information, refer to [How it works](https://docs.adyen.com/checkout#howitworks).
      x-groupName: SDK Integration
      x-sortIndex: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSetupRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSetupResponse'
          description: OK - the request has succeeded.
        '400':
          description: Bad Request - a problem reading or understanding the request.
        '401':
          description: Unauthorized - authentication required.
        '403':
          description: Forbidden - insufficient permissions to process the request.
        '422':
          description: Unprocessable Entity - a request validation error.
        '500':
          description: Internal Server Error - the server could not process the request.
  /payments:
    post:
      summary: Starts a transaction.
      description: |-
        Sends payment parameters (like amount, country, and currency) together with the input details collected from the shopper. The response returns the result of the payment request:
        * For some payment methods (e.g. Visa, Mastercard, and SEPA Direct Debits) you'll get a final state in the `resultCode` (e.g. `authorised` or `refused`).
        * For other payment methods, you'll receive `redirectShopper` as `resultCode` together with a `redirectUrl`. In this case, the shopper must finalize the payment on the page behind the `redirectUrl`.
      x-groupName: API Integration
      x-sortIndex: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
          description: OK - the request has succeeded.
        '400':
          description: Bad Request - a problem reading or understanding the request.
        '401':
          description: Unauthorized - authentication required.
        '403':
          description: Forbidden - insufficient permissions to process the request.
        '422':
          description: Unprocessable Entity - a request validation error.
        '500':
          description: Internal Server Error - the server could not process the request.
  /payments/details:
    post:
      summary: Submits details for a payment.
      description: |-
        Submits details for a payment created using `/payments`. This step is only needed when no final state has been reached on the `/payments` request (for example for 3D Secure, or when getting redirected back directly from a payment method using an app switch).

        The exact details, which need to be sent to this endpoint, are always specified in the response of the associated `/payments` request.

        In addition, the endpoint can be used to verify a `payload`, which is returned after coming back from the Checkout SDK or any of the redirect based methods on the Checkout API.
      x-groupName: API Integration
      x-sortIndex: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetailsRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
          description: OK - the request has succeeded.
        '400':
          description: Bad Request - a problem reading or understanding the request.
        '401':
          description: Unauthorized - authentication required.
        '403':
          description: Forbidden - insufficient permissions to process the request.
        '422':
          description: Unprocessable Entity - a request validation error.
        '500':
          description: Internal Server Error - the server could not process the request.
  /payments/result:
    post:
      summary: Verifies payment result.
      description: |-
        Verifies the payment result using the payload returned from the Checkout SDK.

        For more information, refer to [How it works](https://docs.adyen.com/checkout#howitworks).
      x-groupName: SDK Integration
      x-sortIndex: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentVerificationRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentVerificationResponse'
          description: OK - the request has succeeded.
        '400':
          description: Bad Request - a problem reading or understanding the request.
        '401':
          description: Unauthorized - authentication required.
        '403':
          description: Forbidden - insufficient permissions to process the request.
        '422':
          description: Unprocessable Entity - a request validation error.
        '500':
          description: Internal Server Error - the server could not process the request.
components:
  schemas:
    AccountInfo:
      properties:
        accountAgeIndicator:
          description: |-
            Indicator for the length of time since this shopper account was created in the merchant's environment.
            Allowed values:
            * notApplicable
            * thisTransaction
            * lessThan30Days
            * from30To60Days
            * moreThan60Days
          enum:
            - notApplicable
            - thisTransaction
            - lessThan30Days
            - from30To60Days
            - moreThan60Days
          type: string
        accountChangeDate:
          description: Date when the shopper's account was last changed.
          format: date-time
          type: string
        accountChangeIndicator:
          description: |-
            Indicator for the length of time since the shopper's account was last updated.
            Allowed values:
            * thisTransaction
            * lessThan30Days
            * from30To60Days
            * moreThan60Days
          enum:
            - thisTransaction
            - lessThan30Days
            - from30To60Days
            - moreThan60Days
          type: string
        accountCreationDate:
          description: Date when the shopper's account was created.
          format: date-time
          type: string
        addCardAttemptsDay:
          description: Number of attempts the shopper tried to add a card to their account in the last day.
          format: int32
          type: integer
        deliveryAddressUsageDate:
          description: Date the selected delivery address was first used.
          format: date-time
          type: string
        deliveryAddressUsageIndicator:
          description: |-
            Indicator for the length of time since this delivery address was first used.
            Allowed values:
            * thisTransaction
            * lessThan30Days
            * from30To60Days
            * moreThan60Days
          enum:
            - thisTransaction
            - lessThan30Days
            - from30To60Days
            - moreThan60Days
          type: string
        homePhone:
          description: Shopper's home phone number (including the country code).
          type: string
        mobilePhone:
          description: Shopper's mobile phone number (including the country code).
          type: string
        passwordChangeDate:
          description: Date when the shopper last changed their password.
          format: date-time
          type: string
        passwordChangeIndicator:
          description: |-
            Indicator when the shopper has changed their password.
            Allowed values:
            * notApplicable
            * thisTransaction
            * lessThan30Days
            * from30To60Days
            * moreThan60Days
          enum:
            - notApplicable
            - thisTransaction
            - lessThan30Days
            - from30To60Days
            - moreThan60Days
          type: string
        pastTransactionsDay:
          description: Number of all transactions (successful and abandoned) from this shopper in the past 24 hours.
          format: int32
          type: integer
        pastTransactionsYear:
          description: Number of all transactions (successful and abandoned) from this shopper in the past year.
          format: int32
          type: integer
        paymentAccountAge:
          description: Date this payment method was added to the shopper's account.
          format: date-time
          type: string
        paymentAccountIndicator:
          description: |-
            Indicator for the length of time since this payment method was added to this shopper's account.
            Allowed values:
            * notApplicable
            * thisTransaction
            * lessThan30Days
            * from30To60Days
            * moreThan60Days
          enum:
            - notApplicable
            - thisTransaction
            - lessThan30Days
            - from30To60Days
            - moreThan60Days
          type: string
        purchasesLast6Months:
          description: Number of successful purchases in the last six months.
          format: int32
          type: integer
        suspiciousActivity:
          description: Whether suspicious activity was recorded on this account.
          type: boolean
        workPhone:
          description: Shopper's work phone number (including the country code).
          type: string
    AdditionalDataCommon:
      properties:
        authorisationType:
          description: |-
            Flags a card payment request for either pre-authorisation or final authorisation. For more information, refer to [Authorisation types](https://docs.adyen.com/checkout/adjust-authorisation#authorisation-types).

            Allowed values:
            * **PreAuth** – flags the payment request to be handled as a pre-authorisation.
            * **FinalAuth** – flags the payment request to be handled as a final authorisation.
          type: string
        customRoutingFlag:
          description: |-
            Allows you to determine or override the acquirer account that should be used for the transaction.

            If you need to process a payment with an acquirer different from a default one, you can set up a corresponding configuration on the Adyen payments platform. Then you can pass a custom routing flag in a payment request's additional data to target a specific acquirer.

            To enable this functionality, contact [Support](https://support.adyen.com/hc/en-us/requests/new).
          type: string
        networkTxReference:
          description: |-
            Allows you to link the transaction to the original or previous one in a subscription/card-on-file chain. This field is required for token-based transactions where Adyen does not tokenize the card.

            Transaction identifier from card schemes, for example, Mastercard Trace ID or the Visa Transaction ID.

            Submit the original transaction ID of the contract in your payment request if you are not tokenizing card details with Adyen and are making a merchant-initiated transaction (MIT) for subsequent charges.

            Make sure you are sending `shopperInteraction` **ContAuth** and `recurringProcessingModel` **Subscription** or **UnscheduledCardonFile** to ensure that the transaction is classified as MIT.
          type: string
        overwriteBrand:
          description: 'Boolean indicator that can be optionally used for performing debit transactions on combo cards (for example, combo cards in Brazil). This is not mandatory but we recommend that you set this to true if you want to use the `selectedBrand` value to specify how to process the transaction.'
          type: string
        RequestedTestErrorResponseCode:
          description: |-
            Triggers test scenarios that allow to replicate certain communication errors.

            Allowed values:
            * **NO_CONNECTION_AVAILABLE** – There wasn't a connection available to service the outgoing communication.
            This is a transient, retriable error since no messaging could be initiated to an issuing system (or third-party acquiring system). Therefore, the header Transient-Error: true is returned in the response. A subsequent request using the same idempotency key will be processed as if it was the first request.
            * **IOEXCEPTION_RECEIVED** – Something went wrong during transmission of the message or receiving the response.
            This is a classified as non-transient because the message could have been received by the issuing party and been acted upon. No transient error header is returned. If using idempotency, the (error) response is stored as the final result for the idempotency key. Subsequent messages with the same idempotency key not be processed beyond returning the stored response.
          type: string
        subMerchantID:
          description: |-
            This field contains an identifier of the actual merchant when a transaction is submitted via a payment facilitator. The payment facilitator must send in this unique ID, which is used by schemes to identify the merchant.

            A unique identifier per submerchant that is required if the transaction is performed by a registered payment facilitator.
            * Format: alpha-numeric.
            * Fixed length: 15 characters.
          type: string
    AdditionalData3DSecure:
      properties:
        allow3DS2:
          description: |-
            This parameter indicates that you are able to process 3D Secure 2 transactions natively on your payment page. Send this field when you are using `/payments` endpoint with any of our [native 3D Secure 2 solutions](https://docs.adyen.com/checkout/3d-secure/native-3ds2), such as Components or Drop-in. Possible values:
            * **true** - Ready to support native 3D Secure 2 authentication. Setting this to true does not mean always applying 3D Secure 2. Adyen still selects the version of 3D Secure based on configuration to optimize authorisation rates and improve the shopper's experience.
            * **false** – Not ready to support native 3D Secure 2 authentication. Adyen will not offer 3D Secure 2 to your shopper regardless of your configuration.
            > This parameter only indicates your readiness to support 3D Secure 2 natively on Drop-in or Components. To specify that you want to perform 3D Secure on a transaction, use Dynamic 3D Secure or send the executeThreeD parameter.
          type: string
        executeThreeD:
          description: |-
            This parameter indicates if you want to perform 3D Secure authentication on a transaction or not. Allowed values:
            * **true** – Perform 3D Secure authentication.
            * **false** – Don't perform 3D Secure authentication.
            > Alternatively, you can also use Dynamic 3D Secure to configure rules for applying 3D Secure.
          type: string
        mpiImplementationType:
          description: 'In case of Secure+, this field must be set to **CUPSecurePlus**.'
          type: string
        scaExemption:
          description: |-
            Indicates the [exemption type](https://docs-admin.is.adyen.com/payments-fundamentals/psd2-sca-compliance-and-implementation-guide#specifypreferenceinyourapirequest) that you want to request for the transaction. Possible values:
            * **lowValue**
            * **secureCorporate**
            * **trustedBeneficiary**
            * **transactionRiskAnalysis**
          type: string
    AdditionalDataAirline:
      properties:
        airline.passenger_name:
          description: |-
            Passenger name, initials, and a title.
            * Format: last name + first name or initials + title.
            * Example: *FLYER / MARY MS*.
            * minLength: 1
            * maxLength: 49
          type: string
        airline.computerized_reservation_system:
          description: |-
            The [CRS](https://en.wikipedia.org/wiki/Computer_reservation_system) used to make the reservation and purchase the ticket.
            * Format: alphanumeric.
            * minLength: 4
            * maxLength: 4
          type: string
        airline.airline_code:
          description: |-
            [IATA](https://www.iata.org/services/pages/codes.aspx) 3-digit accounting code (PAX); numeric. It identifies the carrier.
            * Format: IATA 3-digit accounting code (PAX)
            * Example: KLM = 074
            * minLength: 3
            * maxLength: 3
          type: string
        airline.ticket_number:
          description: |-
            The ticket's unique identifier.
            * minLength: 1
            * maxLength: 150
          type: string
        airline.flight_date:
          description: |-
            Flight departure date. Local time `(HH:mm)` is optional.
            * Date format: `yyyy-MM-dd`
            * Date and time format: `yyyy-MM-dd HH:mm`
            * minLength: 10
            * maxLength: 16
          type: string
        airline.customer_reference_number:
          description: |-
            Reference number; alphanumeric.
            * minLength: 0
            * maxLength: 20
          type: string
        airline.ticket_issue_address:
          description: |-
            Address of the place/agency that issued the ticket.
            * minLength: 0
            * maxLength: 16
          type: string
        airline.airline_designator_code:
          description: |-
            [IATA](https://www.iata.org/services/pages/codes.aspx) 2-letter accounting code (PAX); alphabetical. It identifies the carrier.
            * Format: [IATA](https://www.iata.org/services/pages/codes.aspx) 2-letter airline code
            * Example: KLM = KL
            * minLength: 2
            * maxLength: 2
          type: string
        airline.travel_agency_code:
          description: |-
            IATA number, also ARC number or ARC/IATA number. Unique identifier number for travel agencies.
            * minLength: 1
            * maxLength: 8
          type: string
        airline.travel_agency_name:
          description: |-
            The name of the travel agency.
            * minLength: 1
            * maxLength: 25
          type: string
        airline.agency_plan_name:
          description: |-
            2-letter agency plan identifier; alphabetical.
            * minLength: 2
            * maxLength: 2
          type: string
        airline.agency_invoice_number:
          description: |-
            Reference number for the invoice, issued by the agency.
            * minLength: 1
            * maxLength: 6
          type: string
        airline.boarding_fee:
          description: |-
            Chargeable amount for boarding the plane.
            The transaction amount needs to be represented in minor units according to the [following table](https://docs.adyen.com/development-resources/currency-codes).
            * minLength: 1
            * maxLength: 18
          type: string
        airline.document_type:
          description: |-
            Optional 2-digit code; alphanumeric. It identifies the type of product of the transaction. The description of the code may appear on credit card statements.
            * Format: 2-digit code
            * Example: Passenger ticket = 01
            * minLength: 2
            * maxLength: 2
          type: string
        airline.leg.depart_airport:
          description: |-
            Alphabetical identifier of the departure airport.
            This field is required if the airline data includes leg details.
            * Format: [IATA](https://www.iata.org/services/pages/codes.aspx) 3-letter airport code.
            * Example: Amsterdam = AMS
            * minLength: 3
            * maxLength: 3
          type: string
        airline.leg.flight_number:
          description: |-
            The flight identifier.
            * minLength: 1
            * maxLength: 5
          type: string
        airline.leg.carrier_code:
          description: |-
            [IATA](https://www.iata.org/services/pages/codes.aspx) 2-letter accounting code (PAX); alphabetical. It identifies the carrier.
            This field is required/mandatory if the airline data includes leg details.
            * Format: IATA 2-letter airline code
            * Example: KLM = KL
            * minLength: 2
            * maxLength: 2
          type: string
        airline.leg.fare_base_code:
          description: |-
            [Fare basis code](https://en.wikipedia.org/wiki/Fare_basis_code); alphanumeric.
            * minLength: 1
            * maxLength: 7
          type: string
        airline.leg.class_of_travel:
          description: |-
            1-letter travel class identifier; alphabetical. There is no standard; however, the following codes are used rather consistently:
            * F: first class
            * J: business class
            * Y: economy class
            * W: premium economy

            Limitations:
            * minLength: 1
            * maxLength: 1
          type: string
        airline.leg.stop_over_code:
          description: |-
            1-letter code that indicates whether the passenger is entitled to make a stopover. Only two types of characters are allowed:
            * O: Stopover allowed
            * X: Stopover not allowed

            Limitations:
            * minLength: 1
            * maxLength: 1
          type: string
        airline.leg.destination_code:
          description: |-
            Alphabetical identifier of the destination/arrival airport.
            This field is required/mandatory if the airline data includes leg details.
            * Format: [IATA](https://www.iata.org/services/pages/codes.aspx) 3-letter airport code.
            * Example: Amsterdam = AMS
            * minLength: 3
            * maxLength: 3
          type: string
        airline.leg.date_of_travel:
          description: "\t\nDate and time of travel. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)-compliant.\n* Format: `yyyy-MM-dd HH:mm`\n* minLength: 16\n* maxLength: 16"
          type: string
        airline.leg.depart_tax:
          description: |-
            [Departure tax](https://en.wikipedia.org/wiki/Departure_tax). Amount charged by a country to an individual upon their leaving. The transaction amount needs to be represented in minor units according to the [following table](https://docs.adyen.com/development-resources/currency-codes).
            * minLength: 1
            * maxLength: 12
          type: string
        airline.passenger.first_name:
          description: |-
            Passenger first name/given name.
            > This field is required/mandatory if the airline data includes passenger details or leg details.
          type: string
        airline.passenger.last_name:
          description: |-
            Passenger last name/family name.
            > This field is required/mandatory if the airline data includes passenger details or leg details.
          type: string
        airline.passenger.traveller_type:
          description: |-
            Passenger type code (PTC). IATA PTC values are 3-letter alphabetical. Example: ADT, SRC, CNN, INS.

            However, several carriers use non-standard codes that can be up to 5 alphanumeric characters.
            * minLength: 3
            * maxLength: 6
          type: string
        airline.passenger.telephone_number:
          description: |-
            Telephone number of the passenger, including country code. This is an alphanumeric field that can include the '+' and '-' signs.
            * minLength: 3
            * maxLength: 30
          type: string
        airline.passenger.date_of_birth:
          description: |-
            Date of birth of the passenger.

            Date format: `yyyy-MM-dd`
            * minLength: 10
            * maxLength: 10
          type: string
      required:
        - airline.passenger_name
    AdditionalDataCarRental:
      properties:
        carRental.rentalAgreementNumber:
          description: |-
            The rental agreement number associated with this car rental.
            * Format: Alphanumeric
            * maxLength: 14
          type: string
        carRental.renterName:
          description: |-
            The name of the person renting the car.
            * Format: Alphanumeric
            * maxLength: 26
          type: string
        carRental.returnCity:
          description: |-
            The city where the car must be returned.
            * Format: Alphanumeric
            * maxLength: 18
          type: string
        carRental.returnStateProvince:
          description: |-
            The state or province where the car must be returned.
            * Format: Alphanumeric
            * maxLength: 3
          type: string
        carRental.returnCountry:
          description: |-
            The country where the car must be returned.
            * Format: Alphanumeric
            * maxLength: 2
          type: string
        carRental.returnLocationId:
          description: |-
            Agency code, phone number, or address abbreviation
            * Format: Alphanumeric
            * maxLength: 10
          type: string
        carRental.returnDate:
          description: |-
            The last date to return the car by.
            * Date format: `yyyyMMdd`
          type: string
        carRental.checkOutDate:
          description: |-
            Pick-up date.
            * Date format: `yyyyMMdd`
          type: string
        carRental.customerServiceTollFreeNumber:
          description: |-
            The customer service phone number of the car rental company.
            * Format: Alphanumeric
            * maxLength: 17
          type: string
        carRental.rate:
          description: |-
            Daily rental rate.
            * Format: Alphanumeric
            * maxLength: 12
          type: string
        carRental.rateIndicator:
          description: |-
            Specifies whether the given rate is applied daily or weekly.
            * D - Daily rate.
            * W - Weekly rate.
          type: string
        carRental.locationCity:
          description: |-
            The location from which the car is rented.
            * Format: Alphanumeric
            * maxLength: 18
          type: string
        carRental.locationStateProvince:
          description: |-
            Pick-up date.
            * Date format: `yyyyMMdd`
          type: string
        carRental.locationCountry:
          description: |-
            The customer service phone number of the car rental company.
            * Format: Alphanumeric
            * maxLength: 17
          type: string
        carRental.rentalClassId:
          description: |-
            Daily rental rate.
            * Format: Alphanumeric
            * maxLength: 12
          type: string
        carRental.daysRented:
          description: |-
            Specifies whether the given rate is applied daily or weekly.
            * D - Daily rate.
            * W - Weekly rate.
          type: string
        carRental.taxExemptIndicator:
          description: |-
            Indicates whether the goods or services were tax-exempt, or tax was not collected.

            Values:
            * 0 - Tax was not collected
            * 1 - Goods or services were tax exempt
          type: string
        travelEntertainmentAuthData.market:
          description: |-
            Indicates what market-specific dataset will be submitted or is being submitted. Value should be "A" for Car rental. This should be included in the auth message.
            * Format: Alphanumeric
            * maxLength: 1
          type: string
        travelEntertainmentAuthData.duration:
          description: |-
            Number of nights.  This should be included in the auth message.
            * Format: Numeric
            * maxLength: 2
          type: string
        carRental.fuelCharges:
          description: |-
            Any fuel charges associated with the rental.
            * Format: Numeric
            * maxLength: 12
          type: string
        carRental.insuranceCharges:
          description: |-
            Any insurance charges associated with the rental.
            * Format: Numeric
            * maxLength: 12
          type: string
        carRental.noShowIndicator:
          description: |-
            Indicates if the customer was a "no-show" (neither keeps nor cancels their booking).
            * 0 - Not applicable.
            * 1 - Customer was a no show.
          type: string
        carRental.oneWayDropOffCharges:
          description: Charge associated with not returning a vehicle to the original rental location.
          type: string
    AdditionalDataLevel23:
      properties:
        enhancedSchemeData.customerReference:
          description: |-
            Customer code, if supplied by a customer.
            Encoding: ASCII.
            Max length: 25 characters.
            > Required for Level 2 and Level 3 data.
          type: string
        enhancedSchemeData.totalTaxAmount:
          description: |-
            Total tax amount, in minor units.

            For example, 2000 means USD 20.00.
            Max length: 12 characters.
            > Required for Level 2 and Level 3 data.
          type: number
        enhancedSchemeData.freightAmount:
          description: |-
            Shipping amount, in minor units.

            For example, 2000 means USD 20.00.
            Max length: 12 characters.
          type: number
        enhancedSchemeData.dutyAmount:
          description: |-
            Duty amount, in minor units.

            For example, 2000 means USD 20.00.
            Max length: 12 characters.
          type: number
        enhancedSchemeData.destinationPostalCode:
          description: |-
            The postal code of a destination address.

            Encoding: ASCII.
            Max length: 10 characters.
            > Required for American Express.
          type: string
        enhancedSchemeData.destinationStateProvinceCode:
          description: |-
            Destination state or province code.

            Encoding: ASCII.Max length: 3 characters.
          type: string
        enhancedSchemeData.shipFromPostalCode:
          description: |-
            The postal code of a "ship-from" address.

            Encoding: ASCII.
            Max length: 10 characters.
          type: string
        enhancedSchemeData.destinationCountryCode:
          description: |-
            Destination country code.

            Encoding: ASCII.
            Max length: 3 characters.
          type: string
        enhancedSchemeData.orderDate:
          description: |-
            Order date.
            * Format: `ddMMyy`

            Encoding: ASCII.
            Max length: 6 characters.
          type: string
        'enhancedSchemeData.itemDetailLine[itemNr].commodityCode':
          description: |-
            Item commodity code.
            Encoding: ASCII.
            Max length: 12 characters.
          type: string
        'enhancedSchemeData.itemDetailLine[itemNr].description':
          description: |-
            Item description.
            Encoding: ASCII.
            Max length: 26 characters.
          type: string
        'enhancedSchemeData.itemDetailLine[itemNr].productCode':
          description: |-
            Product code.
            Encoding: ASCII.
            Max length: 12 characters.
          type: string
        'enhancedSchemeData.itemDetailLine[itemNr].quantity':
          description: |-
            Quantity, specified as an integer value.
            Value must be greater than 0.
            Max length: 12 characters.
          type: number
        'enhancedSchemeData.itemDetailLine[itemNr].unitOfMeasure':
          description: |-
            Item unit of measurement.
            Encoding: ASCII.
            Max length: 3 characters.
          type: string
        'enhancedSchemeData.itemDetailLine[itemNr].unitPrice':
          description: |-
            Unit price, specified in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            Max length: 12 characters.
          type: number
        'enhancedSchemeData.itemDetailLine[itemNr].discountAmount':
          description: |-
            Discount amount, in minor units.

            For example, 2000 means USD 20.00.
            Max length: 12 characters.
          type: number
        'enhancedSchemeData.itemDetailLine[itemNr].totalAmount':
          description: |-
            Total amount, in minor units.
            For example, 2000 means USD 20.00.
            Max length: 12 characters.
          type: number
    AdditionalDataLodging:
      properties:
        lodging.customerServiceTollFreeNumber:
          description: |-
            The toll free phone number for the hotel/lodgings.
            * Format: Alphanumeric
            * maxLength: 17
          type: string
        lodging.checkInDate:
          description: |-
            The arrival date.
            * Date format: `yyyyMMdd`
          type: string
        lodging.checkOutDate:
          description: |-
            The departure date.
            * Date format: `yyyyMMdd`
          type: string
        lodging.folioNumber:
          description: |-
            Card acceptor’s internal invoice or billing ID reference number.
            * Format: Alphanumeric
            * maxLength: 25
          type: string
        lodging.propertyPhoneNumber:
          description: |-
            Identifies specific lodging property location by its local phone number.
            * Format: Alphanumeric
            * maxLength: 17
          type: string
        lodging.room1.rate:
          description: |-
            The rate of the room.
            * Format: Numeric
            * maxLength: 12
          type: string
        lodging.room1.tax:
          description: |-
            The total amount of tax to be paid.
            * Format: Numeric
            * maxLength: 12
          type: string
        lodging.room1.numberOfNights:
          description: |-
            Total number of nights the room will be rented.
            * Format: Numeric
            * maxLength: 4
          type: string
        lodging.fireSafetyActIndicator:
          description: |-
            Identifies that the facility complies with the Hotel and Motel Fire Safety Act of 1990. Values can be: 'Y' or 'N'.
            * Format: Alphabetic
            * maxLength: 1
          type: string
        travelEntertainmentAuthData.market:
          description: |-
            Indicates what market-specific dataset will be submitted or is being submitted. Value should be "H" for Hotel. This should be included in the auth message.
            * Format: Alphanumeric
            * maxLength: 1
          type: string
        travelEntertainmentAuthData.duration:
          description: |-
            Number of nights.  This should be included in the auth message.
            * Format: Numeric
            * maxLength: 2
          type: string
        lodging.folioCashAdvances:
          description: |-
            The folio cash advances.
            * Format: Numeric
            * maxLength: 12
          type: string
        lodging.foodBeverageCharges:
          description: |-
            Any charges for food and beverages associated with the booking.
            * Format: Numeric
            * maxLength: 12
          type: string
        lodging.noShowIndicator:
          description: |-
            Indicates if the customer was a "no-show" (neither keeps nor cancels their booking).

            Value should be Y or N.
            * Format: Numeric
            * maxLength: 1
          type: string
        lodging.prepaidExpenses:
          description: |-
            Prepaid expenses for the booking.
            * Format: Numeric
            * maxLength: 12
          type: string
        lodging.totalTax:
          description: |-
            Total tax amount.
            * Format: Numeric
            * maxLength: 12
          type: string
        lodging.totalRoomTax:
          description: |-
            Total room tax amount.
            * Format: Numeric
            * maxLength: 12
          type: string
    AdditionalDataOpenInvoice:
      properties:
        openinvoicedata.numberOfLines:
          description: |-
            The number of invoice lines included in `openinvoicedata`.

            There needs to be at least one line, so `numberOfLines` needs to be at least 1.
          type: integer
        openinvoicedata.merchantData:
          description: |-
            Holds different merchant data points like product, purchase, customer, and so on. It takes data in a Base64 encoded string.

            The `merchantData` parameter needs to be added to the `openinvoicedata` signature at the end.

            Since the field is optional, if it's not included it does not impact computing the merchant signature.

            Applies only to Klarna.

            You can contact Klarna for the format and structure of the string.
          type: string
        'openinvoicedata.line[itemNr].currencyCode':
          description: The three-character ISO currency code.
          type: string
        'openinvoicedata.line[itemNr].description':
          description: A text description of the product the invoice line refers to.
          type: string
        'openinvoicedata.line[itemNr].itemAmount':
          description: |-
            The price for one item in the invoice line, represented in minor units.

            The due amount for the item, VAT excluded.
          type: integer
        'openinvoicedata.line[itemNr].itemVatAmount':
          description: 'The VAT due for one item in the invoice line, represented in minor units.'
          type: integer
        'openinvoicedata.line[itemNr].itemVatPercentage':
          description: |-
            The VAT percentage for one item in the invoice line, represented in minor units.

            For example, 19% VAT is specified as 1900.
          type: integer
        'openinvoicedata.line[itemNr].itemId':
          description: A unique id for this item. Required for RatePay if the description of each item is not unique.
          type: string
        'openinvoicedata.line[itemNr].numberOfItems':
          description: The number of units purchased of a specific product.
          type: integer
        'openinvoicedata.line[itemNr].vatCategory':
          description: |-
            Required for AfterPay. The country-specific VAT category a product falls under.

            Allowed values:
            * High
            * Low
            * None.
          type: string
    AdditionalDataRatepay:
      properties:
        ratepay.installmentAmount:
          description: Amount the customer has to pay each month.
          type: integer
        ratepay.lastInstallmentAmount:
          description: Amount of the last installment.
          type: integer
        ratepay.interestRate:
          description: Interest rate of this installment. Double
          type: integer
        ratepay.paymentFirstday:
          description: Calendar day of the first payment.
          type: integer
        ratepaydata.invoiceId:
          description: 'Identification name or number for the invoice, defined by the merchant.'
          type: string
        ratepaydata.invoiceDate:
          description: 'Invoice date, defined by the merchant. If not included, the invoice date is set to the delivery date.'
          type: string
        ratepaydata.deliveryDate:
          description: Date the merchant delivered the goods to the customer.
          type: string
        ratepaydata.dueDate:
          description: Date by which the customer must settle the payment.
          type: string
    AdditionalDataRetry:
      properties:
        retry.chainAttemptNumber:
          description: |-
            The number of times the transaction (not order) has been retried between different payment service providers. For instance, the `chainAttemptNumber` set to 2 means that this transaction has been recently tried on another provider before being sent to Adyen.
            > If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.
          type: integer
        retry.orderAttemptNumber:
          description: |-
            The index of the attempt to bill a particular order, which is identified by the `merchantOrderReference` field. For example, if a recurring transaction fails and is retried one day later, then the order number for these attempts would be 1 and 2, respectively.
            > If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.
          type: integer
        retry.skipRetry:
          description: |-
            The Boolean value indicating whether Adyen should skip or retry this transaction, if possible.
            > If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.
          type: boolean
    AdditionalDataRisk:
      properties:
        'riskdata.[customFieldName]':
          description: 'The data for your custom risk field. For more information, refer to [Create custom risk fields](https://docs.adyen.com/risk-management/configure-custom-risk-rules#step-1-create-custom-risk-fields).'
          type: string
        'riskdata.basket.item[itemNr].itemID':
          description: ID of the item.
          type: string
        'riskdata.basket.item[itemNr].productTitle':
          description: A text description of the product the invoice line refers to.
          type: string
        'riskdata.basket.item[itemNr].amountPerItem':
          description: 'The price of item in the basket, represented in [minor units](https://docs.adyen.com/development-resources/currency-codes).'
          type: string
        'riskdata.basket.item[itemNr].currency':
          description: 'The three-character [ISO currency code](https://en.wikipedia.org/wiki/ISO_4217).'
          type: string
        'riskdata.basket.item[itemNr].upc':
          description: '[Universal Product Code](https://en.wikipedia.org/wiki/Universal_Product_Code).'
          type: string
        'riskdata.basket.item[itemNr].sku':
          description: '[Stock keeping unit](https://en.wikipedia.org/wiki/Stock_keeping_unit).'
          type: string
        'riskdata.basket.item[itemNr].brand':
          description: Brand of the item.
          type: string
        'riskdata.basket.item[itemNr].manufacturer':
          description: Manufacturer of the item.
          type: string
        'riskdata.basket.item[itemNr].category':
          description: Category of the item.
          type: string
        'riskdata.basket.item[itemNr].color':
          description: Color of the item.
          type: string
        'riskdata.basket.item[itemNr].size':
          description: Size of the item.
          type: string
        'riskdata.basket.item[itemNr].quantity':
          description: Quantity of the item purchased.
          type: string
        'riskdata.basket.item[itemNr].receiverEmail':
          description: Email associated with the given product in the basket (usually in electronic gift cards).
          type: string
        'riskdata.promotions.promotion[itemNr].promotionCode':
          description: Code of the promotion.
          type: string
        'riskdata.promotions.promotion[itemNr].promotionName':
          description: Name of the promotion.
          type: string
        'riskdata.promotions.promotion[itemNr].promotionDiscountAmount':
          description: 'The discount amount of the promotion, represented in [minor units](https://docs.adyen.com/development-resources/currency-codes).'
          type: string
        'riskdata.promotions.promotion[itemNr].promotionDiscountCurrency':
          description: 'The three-character [ISO currency code](https://en.wikipedia.org/wiki/ISO_4217).'
          type: string
        'riskdata.promotions.promotion[itemNr].promotionDiscountPercentage':
          description: |-
            Promotion's percentage discount. It is represented in percentage value and there is no need to include the '%' sign.

            e.g. for a promotion discount of 30%, the value of the field should be 30.
          type: string
    AdditionalDataRiskStandalone:
      properties:
        avsResultRaw:
          description: 'Raw AVS result received from the acquirer, where available. Example: D'
          type: string
        bin:
          description: 'The Bank Identification Number of a credit card, which is the first six digits of a card number. Required for [tokenized card request](https://docs.adyen.com/risk-management/standalone-risk#tokenised-pan-request).'
          type: string
        cvcResultRaw:
          description: 'Raw CVC result received from the acquirer, where available. Example: 1'
          type: string
        risk.token:
          description: Unique identifier or token for the shopper's card details.
          type: string
        threeDAuthenticated:
          description: 'A Boolean value indicating whether 3DS authentication was completed on this payment. Example: true'
          type: string
        threeDOffered:
          description: 'A Boolean value indicating whether 3DS was offered for this payment. Example: true'
          type: string
        tokenDataType:
          description: 'Required for PayPal payments only. The only supported value is: **paypal**.'
          type: string
        PayPal.ProtectionEligibility:
          description: |-
            Allowed values:
            * **Eligible** — Merchant is protected by PayPal's Seller Protection Policy for Unauthorized Payments and Item Not Received.
            * **PartiallyEligible** — Merchant is protected by PayPal's Seller Protection Policy for Item Not Received.
            * **Ineligible** — Merchant is not protected under the Seller Protection Policy.
          type: string
        PayPal.PayerId:
          description: 'Unique PayPal Customer Account identification number. Character length and limitations: 13 single-byte alphanumeric characters.'
          type: string
        PayPal.TransactionId:
          description: Unique transaction ID of the payment.
          type: string
        PayPal.CountryCode:
          description: Shopper's country of residence in the form of ISO standard 3166 2-character country codes.
          type: string
        PayPal.FirstName:
          description: Shopper's first name.
          type: string
        PayPal.LastName:
          description: Shopper's last name.
          type: string
        PayPal.Phone:
          description: Shopper's phone number.
          type: string
        PayPal.EmailId:
          description: Shopper's email.
          type: string
    AdditionalDataTemporaryServices:
      properties:
        enhancedSchemeData.customerReference:
          description: |-
            Customer code, if supplied by a customer.
            * Encoding: ASCII
            * maxLength: 25
          type: string
        enhancedSchemeData.totalTaxAmount:
          description: |-
            Total tax amount, in minor units. For example, 2000 means USD 20.00
            * maxLength: 12
          type: string
        enhancedSchemeData.employeeName:
          description: |-
            Name or ID associated with the individual working in a temporary capacity.
            * maxLength: 40
          type: string
        enhancedSchemeData.jobDescription:
          description: |-
            Description of the job or task of the individual working in a temporary capacity.
            * maxLength: 40
          type: string
        enhancedSchemeData.tempStartDate:
          description: |-
            Date for the beginning of the pay period.
            * Format: ddMMyy
            * maxLength: 6
          type: string
        enhancedSchemeData.tempWeekEnding:
          description: |-
            Date of the end of the billing cycle.
            * Format: ddMMyy
            * maxLength: 6
          type: string
        enhancedSchemeData.requestName:
          description: |-
            Name of the individual requesting temporary services.
            * maxLength: 40
          type: string
        enhancedSchemeData.regularHoursWorked:
          description: |-
            Amount of time worked during a normal operation for the task or job.
            * maxLength: 7
          type: string
        enhancedSchemeData.regularHoursRate:
          description: |-
            Amount paid per regular hours worked, minor units.
            * maxLength: 7
          type: string
    AdditionalDataWallets:
      properties:
        androidpay.token:
          description: The Android Pay token retrieved from the SDK.
          type: string
        masterpass.transactionId:
          description: The Mastercard Masterpass Transaction ID retrieved from the SDK.
          type: string
        payment.token:
          description: The Apple Pay token retrieved from the SDK.
          type: string
        paywithgoogle.token:
          description: The Google Pay token retrieved from the SDK.
          type: string
        samsungpay.token:
          description: The Samsung Pay token retrieved from the SDK.
          type: string
        visacheckout.callId:
          description: The Visa Checkout Call ID retrieved from the SDK.
          type: string
    ResponseAdditionalDataCommon:
      properties:
        acquirerAccountCode:
          description: |-
            The name of the Adyen acquirer account.

            Example: PayPalSandbox_TestAcquirer
            > Only relevant for PayPal transactions.
          type: string
        acquirerCode:
          description: |-
            The name of the acquirer processing the payment request.

            Example: TestPmmAcquirer
          type: string
        acquirerReference:
          description: |-
            The reference number that can be used for reconciliation in case a non-Adyen acquirer is used for settlement.

            Example: 7C9N3FNBKT9
          type: string
        alias:
          description: |-
            The Adyen alias of the card.

            Example: H167852639363479
          type: string
        aliasType:
          description: |-
            The type of the card alias.

            Example: Default
          type: string
        authCode:
          description: |-
            Authorisation code:
            * When the payment is authorised successfully, this field holds the authorisation code for the payment.
            * When the payment is not authorised, this field is empty.

            Example: 58747
          type: string
        authorisedAmountCurrency:
          description: 'The currency of the authorised amount, as a three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).'
          type: string
        authorisedAmountValue:
          description: |-
            Value of the amount authorised.

            This amount is represented in minor units according to the [following table](https://docs.adyen.com/development-resources/currency-codes).
          type: string
        avsResult:
          description: |-
            The AVS result code of the payment, which provides information about the outcome of the AVS check.

            For possible values, see [AVS](https://docs.adyen.com/risk-management/configure-standard-risk-rules/consistency-rules#billing-address-does-not-match-cardholder-address-avs).
          type: string
        avsResultRaw:
          description: |-
            Raw AVS result received from the acquirer, where available.

            Example: D
          type: string
        bic:
          description: |-
            BIC of a bank account.

            Example: TESTNL01
            > Only relevant for SEPA Direct Debit transactions.
          type: string
        dsTransID:
          description: Supported for 3D Secure 2. The unique transaction identifier assigned by the DS to identify a single transaction.
          type: string
        eci:
          description: |-
            The Electronic Commerce Indicator returned from the schemes for the 3DS payment session.

            Example: 02
          type: string
        expiryDate:
          description: |-
            The expiry date on the card.

            Example: 6/2016
            > Returned only in case of a card payment.
          type: string
        extraCostsCurrency:
          description: |-
            The currency of the extra amount charged due to additional amounts set in the skin used in the HPP payment request.

            Example: EUR
          type: string
        extraCostsValue:
          description: The value of the extra amount charged due to additional amounts set in the skin used in the HPP payment request. The amount is in minor units.
          type: string
        'fraudCheck-[itemNr]-[FraudCheckname]':
          description: The fraud score due to a particular fraud check. The fraud check name is found in the key of the key-value pair.
          type: string
        fundingSource:
          description: |-
            Information regarding the funding type of the card. The possible return values are:
            * CHARGE
            * CREDIT
            * DEBIT
            * PREPAID
            * PREPAID_RELOADABLE
            * PREPAID_NONRELOADABLE
            * DEFFERED_DEBIT
            > This functionality requires additional configuration on Adyen's end. To enable it, contact the Support Team.

            For receiving this field in the notification, enable **Include Funding Source** in **Notifications** > **Additional settings**.
          type: string
        fundsAvailability:
          description: |-
            Indicates availability of funds.

            Visa:
            * "I" (fast funds are supported)
            * "N" (otherwise)

            Mastercard:
            * "I" (product type is Prepaid or Debit, or issuing country is in CEE/HGEM list)
            * "N" (otherwise)

            > Returned when you verify a card BIN or estimate costs, and only if payoutEligible is "Y" or "D".
          type: string
        inferredRefusalReason:
          description: |-
            Provides the more granular indication of why a transaction was refused. When a transaction fails with either "Refused", "Restricted Card", "Transaction Not Permitted", "Not supported" or "DeclinedNon Generic" refusalReason from the issuer, Adyen cross references its PSP-wide data for extra insight into the refusal reason. If an inferred refusal reason is available, the `inferredRefusalReason`, field is populated and the `refusalReason`, is set to "Not Supported".

            Possible values:
            * 3D Secure Mandated
            * Closed Account
            * ContAuth Not Supported
            * CVC Mandated
            * Ecommerce Not Allowed
            * Crossborder Not Supported
            * Card Updated
            * Low Authrate Bin
            * Non-reloadable prepaid card
          type: string
        issuerCountry:
          description: |-
            The issuing country of the card based on the BIN list that Adyen maintains.

            Example: JP
          type: string
        mcBankNetReferenceNumber:
          description: |-
            The `mcBankNetReferenceNumber`, is a minimum of six characters and a maximum of nine characters long.
            > Contact Support Team to enable this field.
          type: string
        networkTxReference:
          description: |-
            Returned in the response if you are not tokenizing with Adyen and are using the Merchant-initiated transactions (MIT) framework from Mastercard or Visa.

            This contains either the Mastercard Trace ID or the Visa Transaction ID.
          type: string
        ownerName:
          description: |-
            The owner name of a bank account.

            Only relevant for SEPA Direct Debit transactions.
          type: string
        paymentAccountReference:
          description: The Payment Account Reference (PAR) value links a network token with the underlying primary account number (PAN). The PAR value consists of 29 uppercase alphanumeric characters.
          type: string
        paymentMethodVariant:
          description: |-
            The Adyen sub-variant of the payment method used for the payment request.

            For more information, refer to [PaymentMethodVariant](https://docs.adyen.com/development-resources/paymentmethodvariant).

            Example: mcpro
          type: string
        payoutEligible:
          description: |-
            Indicates whether a payout is eligible or not for this card.

            Visa:
            * "Y"
            * "N"

            Mastercard:
            * "Y" (domestic and cross-border)
            * "D" (only domestic)
            * "N" (no MoneySend)
            * "U" (unknown)
          type: string
        realtimeAccountUpdaterStatus:
          description: |-
            The response code from the Real Time Account Updater service.

            Possible return values are:
            * CardChanged
            * CardExpiryChanged
            * CloseAccount
            * ContactCardAccountHolder
          type: string
        receiptFreeText:
          description: Message to be displayed on the terminal.
          type: string
        recurring.firstPspReference:
          description: |-
            The `pspReference`, of the first recurring payment that created the recurring detail.

            This functionality requires additional configuration on Adyen's end. To enable it, contact the Support Team.
          type: string
        recurring.recurringDetailReference:
          description: The reference that uniquely identifies the recurring transaction.
          type: string
        referred:
          description: |-
            If the payment is referred, this field is set to true.

            This field is unavailable if the payment is referred and is usually not returned with ecommerce transactions.

            Example: true
          type: string
        refusalReasonRaw:
          description: |-
            Raw refusal reason received from the acquirer, where available.

            Example: AUTHORISED
          type: string
        shopperInteraction:
          description: |-
            The shopper interaction type of the payment request.

            Example: Ecommerce
          type: string
        shopperReference:
          description: |-
            The shopperReference passed in the payment request.

            Example: AdyenTestShopperXX
          type: string
        terminalId:
          description: |-
            The terminal ID used in a point-of-sale payment.

            Example: 06022622
          type: string
        threeDAuthenticated:
          description: |-
            A Boolean value indicating whether 3DS authentication was completed on this payment.

            Example: true
          type: string
        threeDAuthenticatedResponse:
          description: |-
            The raw 3DS authentication result from the card issuer.

            Example: N
          type: string
        threeDOffered:
          description: |-
            A Boolean value indicating whether 3DS was offered for this payment.

            Example: true
          type: string
        threeDOfferedResponse:
          description: |-
            The raw enrollment result from the 3DS directory services of the card schemes.

            Example: Y
          type: string
        threeDSVersion:
          description: The 3D Secure 2 version.
          type: string
        visaTransactionId:
          description: |-
            The `visaTransactionId`, has a fixed length of 15 numeric characters.
            > Contact Support Team to enable this field.
          type: string
        xid:
          description: |-
            The 3DS transaction ID of the 3DS session sent in notifications. The value is Base64-encoded and is returned for transactions with directoryResponse 'N' or 'Y'. If you want to submit the xid in your 3D Secure 1 request, use the `mpiData.xid`, field.

            Example: ODgxNDc2MDg2MDExODk5MAAAAAA=
          type: string
    ResponseAdditionalDataBillingAddress:
      properties:
        billingAddress.city:
          description: The billing address city passed in the payment request.
          type: string
        billingAddress.country:
          description: |-
            The billing address country passed in the payment request.

            Example: NL
          type: string
        billingAddress.houseNumberOrName:
          description: The billing address house number or name passed in the payment request.
          type: string
        billingAddress.postalCode:
          description: |-
            The billing address postal code passed in the payment request.

            Example: 1011 DJ
          type: string
        billingAddress.stateOrProvince:
          description: |-
            The billing address state or province passed in the payment request.

            Example: NH
          type: string
        billingAddress.street:
          description: The billing address street passed in the payment request.
          type: string
    ResponseAdditionalDataCard:
      properties:
        cardBin:
          description: |-
            The Bank Identification Number of a credit card, which is the first six digits of a card number.

            Example: 521234
          type: string
        cardHolderName:
          description: The cardholder name passed in the payment request.
          type: string
        cardIssuingBank:
          description: The bank or the financial institution granting lines of credit through card association branded payment cards. This information can be included when available.
          type: string
        cardIssuingCountry:
          description: |-
            The country where the card was issued.

            Example: US
          type: string
        cardIssuingCurrency:
          description: |-
            The currency in which the card is issued, if this information is available.

            Example: USD
          type: string
        cardPaymentMethod:
          description: |-
            The card payment method used for the transaction.

            Example: amex
          type: string
        cardSummary:
          description: |-
            The last four digits of a card number.
            > Returned only in case of a card payment.
          type: string
    ResponseAdditionalDataDeliveryAddress:
      properties:
        deliveryAddress.city:
          description: The delivery address city passed in the payment request.
          type: string
        deliveryAddress.country:
          description: |-
            The delivery address country passed in the payment request.

            Example: NL
          type: string
        deliveryAddress.houseNumberOrName:
          description: The delivery address house number or name passed in the payment request.
          type: string
        deliveryAddress.postalCode:
          description: |-
            The delivery address postal code passed in the payment request.

            Example: 1011 DJ
          type: string
        deliveryAddress.stateOrProvince:
          description: |-
            The delivery address state or province passed in the payment request.

            Example: NH
          type: string
        deliveryAddress.street:
          description: The delivery address street passed in the payment request.
          type: string
    ResponseAdditionalDataInstallments:
      properties:
        installments.value:
          description: |-
            The number of installments that the payment amount should be charged with.

            Example: 5
            > Only relevant for card payments in countries that support installments.
          type: string
        installmentPaymentData.installmentType:
          description: Type of installment. The value of `installmentType` should be **IssuerFinanced**.
          type: string
        installmentPaymentData.paymentOptions:
          description: |-
            Possible values:
            * PayInInstallmentsOnly
            * PayInFullOnly
            * PayInFullOrInstallments
          type: string
        'installmentPaymentData.option[itemNr].numberOfInstallments':
          description: Total number of installments possible for this payment.
          type: string
        'installmentPaymentData.option[itemNr].interestRate':
          description: Interest rate for the installment period.
          type: string
        'installmentPaymentData.option[itemNr].installmentFee':
          description: Installment fee amount in minor units.
          type: string
        'installmentPaymentData.option[itemNr].annualPercentageRate':
          description: Annual interest rate.
          type: string
        'installmentPaymentData.option[itemNr].firstInstallmentAmount':
          description: First Installment Amount in minor units.
          type: string
        'installmentPaymentData.option[itemNr].subsequentInstallmentAmount':
          description: Subsequent Installment Amount in minor units.
          type: string
        'installmentPaymentData.option[itemNr].minimumNumberOfInstallments':
          description: Minimum number of installments possible for this payment.
          type: string
        'installmentPaymentData.option[itemNr].maximumNumberOfInstallments':
          description: Maximum number of installments possible for this payment.
          type: string
        'installmentPaymentData.option[itemNr].totalAmountDue':
          description: Total amount in minor units.
          type: string
    ResponseAdditionalDataPayPal:
      properties:
        paypalPayerStatus:
          description: |-
            The status of the buyer's PayPal account.

            Example: unverified
          type: string
        paypalPayerResidenceCountry:
          description: |-
            The buyer's country of residence.

            Example: NL
          type: string
        paypalPayerId:
          description: |-
            The buyer's PayPal ID.

            Example: LF5HCWWBRV2KL
          type: string
        paypalEmail:
          description: |-
            The buyer's PayPal account email address.

            Example: paypaltest@adyen.com
          type: string
        paypalProtectionEligibility:
          description: |-
            The eligibility for PayPal Seller Protection for this payment.

            Example: Ineligible
          type: string
    ResponseAdditionalDataSepa:
      properties:
        sepadirectdebit.dateOfSignature:
          description: |-
            The transaction signature date.

            Format: yyyy-MM-dd
          type: string
        sepadirectdebit.mandateId:
          description: Its value corresponds to the  pspReference value of the transaction.
          type: string
        sepadirectdebit.sequenceType:
          description: |-
            This field can take one of the following values:
            * OneOff: (OOFF) Direct debit instruction to initiate exactly one direct debit transaction.
            * First: (FRST) Initial/first collection in a series of direct debit instructions.
            * Recurring: (RCUR) Direct debit instruction to carry out regular direct debit transactions initiated by the creditor.
            * Final: (FNAL) Last/final collection in a series of direct debit instructions.

            Example: OOFF
          type: string
    Address:
      properties:
        city:
          description: The name of the city.
          type: string
        country:
          description: |-
            The two-character country code as defined in ISO-3166-1 alpha-2. For example, **US**.
            > If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.
          type: string
        houseNumberOrName:
          description: The number or name of the house.
          type: string
        postalCode:
          description: 'A maximum of five digits for an address in the US, or a maximum of ten characters for an address in all other countries.'
          type: string
        stateOrProvince:
          description: |-
            State or province codes as defined in ISO 3166-2. For example, **CA** in the US or **ON** in Canada.
            > Required for the US and Canada.
          type: string
        street:
          description: |-
            The name of the street.
            > The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.
          type: string
      required:
        - street
        - houseNumberOrName
        - city
        - postalCode
        - country
    Amount:
      properties:
        currency:
          description: 'The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).'
          maxLength: 3
          minLength: 3
          type: string
        value:
          description: |-
            The payable amount that can be charged for the transaction.

            The transaction amount needs to be represented in minor units according to the [following table](https://docs.adyen.com/development-resources/currency-codes).
          format: int64
          type: integer
      required:
        - value
        - currency
    ApplicationInfo:
      properties:
        adyenLibrary:
          description: 'Adyen-developed software, such as libraries and plugins, used to interact with the Adyen API. For example, Magento plugin, Java API library, etc.'
          $ref: '#/components/schemas/CommonField'
        adyenPaymentSource:
          description: 'Adyen-developed software to get payment details. For example, Checkout SDK, Secured Fields SDK, etc.'
          $ref: '#/components/schemas/CommonField'
        externalPlatform:
          description: 'Third-party developed platform used to initiate payment requests. For example, Magento, Zuora, etc.'
          $ref: '#/components/schemas/ExternalPlatform'
        merchantApplication:
          description: 'Merchant developed software, such as cashier application, used to interact with the Adyen API.'
          $ref: '#/components/schemas/CommonField'
        merchantDevice:
          description: Merchant device information.
          $ref: '#/components/schemas/MerchantDevice'
        shopperInteractionDevice:
          description: 'Shopper interaction device, such as terminal, mobile device or web browser, to initiate payment requests.'
          $ref: '#/components/schemas/ShopperInteractionDevice'
    Avs:
      properties:
        addressEditable:
          description: Indicates whether the shopper is allowed to modify the billing address for the current payment request.
          type: boolean
        enabled:
          description: |-
            Specifies whether the shopper should enter their billing address during checkout.

            Allowed values:
            * yes — Perform AVS checks for every card payment.
            * automatic — Perform AVS checks only when required to optimize the conversion rate.
            * no — Do not perform AVS checks.
          enum:
            - 'yes'
            - 'no'
            - automatic
          type: string
    BankAccount:
      properties:
        bankAccountNumber:
          description: The bank account number (without separators).
          type: string
        bankCity:
          description: The bank city.
          type: string
        bankLocationId:
          description: The location id of the bank. The field value is `nil` in most cases.
          type: string
        bankName:
          description: The name of the bank.
          type: string
        bic:
          description: 'The [Business Identifier Code](https://en.wikipedia.org/wiki/ISO_9362) (BIC) is the SWIFT address assigned to a bank. The field value is `nil` in most cases.'
          type: string
        countryCode:
          description: |-
            Country code where the bank is located.

            A valid value is an ISO two-character country code (e.g. 'NL').
          type: string
        iban:
          description: 'The [International Bank Account Number](https://en.wikipedia.org/wiki/International_Bank_Account_Number) (IBAN).'
          type: string
        ownerName:
          description: |-
            The name of the bank account holder.
            If you submit a name with non-Latin characters, we automatically replace some of them with corresponding Latin characters to meet the FATF recommendations. For example:
            * χ12 is converted to ch12.
            * üA is converted to euA.
            * Peter Møller is converted to Peter Mller, because banks don't accept 'ø'.
            After replacement, the ownerName must have at least three alphanumeric characters (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character (A-Z, a-z). For example:
            * John17 - allowed.
            * J17 - allowed.
            * 171 - not allowed.
            * John-7 - allowed.
            > If provided details don't match the required format, the response returns the error message: 203 'Invalid bank account holder name'.
          type: string
        taxId:
          description: The bank account holder's tax ID.
          type: string
    BrowserInfo:
      properties:
        acceptHeader:
          description: The accept header value of the shopper's browser.
          maxLength: 50
          minLength: 10
          type: string
        colorDepth:
          description: 'The color depth of the shopper''s browser in bits per pixel. This should be obtained by using the browser''s `screen.colorDepth` property. Accepted values: 1, 4, 8, 15, 16, 24, 32 or 48 bit color depth.'
          format: int32
          type: integer
        javaEnabled:
          description: Boolean value indicating if the shopper's browser is able to execute Java.
          type: boolean
        javaScriptEnabled:
          description: Boolean value indicating if the shopper's browser is able to execute JavaScript. A default 'true' value is assumed if the field is not present.
          type: boolean
        language:
          description: The `navigator.language` value of the shopper's browser (as defined in IETF BCP 47).
          type: string
        screenHeight:
          description: The total height of the shopper's device screen in pixels.
          format: int32
          type: integer
        screenWidth:
          description: The total width of the shopper's device screen in pixels.
          format: int32
          type: integer
        timeZoneOffset:
          description: 'Time difference between UTC time and the shopper''s browser local time, in minutes.'
          format: int32
          type: integer
        userAgent:
          description: The user agent value of the shopper's browser.
          maxLength: 50
          minLength: 10
          type: string
      required:
        - userAgent
        - acceptHeader
        - javaEnabled
        - colorDepth
        - screenHeight
        - screenWidth
        - timeZoneOffset
        - language
    Card:
      properties:
        cvc:
          description: |-
            The [card verification code](https://docs.adyen.com/payments-fundamentals/payment-glossary#card-security-code-cvc-cvv-cid) (1-20 characters). Depending on the card brand, it is known also as:
            * CVV2/CVC2 – length: 3 digits
            * CID – length: 4 digits
            > If you are using [Client-Side Encryption](https://docs.adyen.com/classic-integration/cse-integration-ecommerce), the CVC code is present in the encrypted data. You must never post the card details to the server.
            > This field must be always present in a [one-click payment request](https://docs.adyen.com/classic-integration/recurring-payments).
            > When this value is returned in a response, it is always empty because it is not stored.
          maxLength: 20
          minLength: 1
          type: string
        expiryMonth:
          description: |-
            The card expiry month.
            Format: 2 digits, zero-padded for single digits. For example:
            * 03 = March
            * 11 = November
          maxLength: 2
          minLength: 1
          type: string
        expiryYear:
          description: |-
            The card expiry year.
            Format: 4 digits. For example: 2020
          maxLength: 4
          minLength: 4
          type: string
        holderName:
          description: 'The name of the cardholder, as printed on the card.'
          maxLength: 50
          minLength: 1
          type: string
        issueNumber:
          description: The issue number of the card (for some UK debit cards only).
          maxLength: 2
          minLength: 1
          type: string
        number:
          description: |-
            The card number (4-19 characters). Do not use any separators.
            When this value is returned in a response, only the last 4 digits of the card number are returned.
          maxLength: 19
          minLength: 4
          type: string
        startMonth:
          description: The month component of the start date (for some UK debit cards only).
          maxLength: 2
          minLength: 1
          type: string
        startYear:
          description: The year component of the start date (for some UK debit cards only).
          maxLength: 4
          minLength: 4
          type: string
      required:
        - number
        - expiryMonth
        - expiryYear
        - holderName
    CommonField:
      properties:
        name:
          description: 'Name of the field. For example, Name of External Platform.'
          type: string
        version:
          description: 'Version of the field. For example, Version of External Platform.'
          type: string
    Company:
      properties:
        homepage:
          description: The company website's home page.
          type: string
        name:
          description: The company name.
          type: string
        registrationNumber:
          description: Registration number of the company.
          type: string
        registryLocation:
          description: Registry location of the company.
          type: string
        taxId:
          description: Tax ID of the company.
          type: string
        type:
          description: The company type.
          type: string
    Configuration:
      properties:
        avs:
          description: 'Describes the configuration for AVS ([Address Verification System](https://en.wikipedia.org/wiki/Address_Verification_System)).'
          $ref: '#/components/schemas/Avs'
        cardHolderName:
          description: |-
            Determines whether the cardholder name should be provided or not.

            Permitted values:
            * NONE
            * OPTIONAL
            * REQUIRED
          enum:
            - NONE
            - OPTIONAL
            - REQUIRED
          type: string
        installments:
          description: 'Describes the configuration for [installment payments](https://docs.adyen.com/payment-methods/cards/credit-card-installments).'
          $ref: '#/components/schemas/Installments'
        shopperInput:
          description: Determines how to display the details fields.
          $ref: '#/components/schemas/ShopperInput'
    CreatePaymentLinkRequest:
      properties:
        allowedPaymentMethods:
          description: |-
            List of payments methods to be presented to the shopper. To refer to payment methods, use their `paymentMethod.type` from [Payment methods overview](https://docs.adyen.com/payment-methods).

            Example: `"allowedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          type: array
        amount:
          description: 'The amount information for the transaction (in [minor units](https://docs.adyen.com/development-resources/currency-codes)). For [BIN or card verification](https://docs.adyen.com/payment-methods/cards/bin-data-and-card-verification) requests, set amount to 0 (zero).'
          $ref: '#/components/schemas/Amount'
        billingAddress:
          description: |-
            The address where to send the invoice.
            > For 3D Secure 2 transactions, schemes require the `billingAddress` for both `deviceChannel` **browser** and **app**. Include all of the fields within this object.
          $ref: '#/components/schemas/Address'
        blockedPaymentMethods:
          description: |-
            List of payments methods to be hidden from the shopper. To refer to payment methods, use their `paymentMethod.type` from [Payment methods overview](https://docs.adyen.com/payment-methods).

            Example: `"blockedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          type: array
        countryCode:
          description: The shopper's country code.
          type: string
        deliveryAddress:
          description: The address where the purchased goods should be delivered.
          $ref: '#/components/schemas/Address'
        description:
          description: |-
            A short description visible on the Pay By Link page.
            Maximum length: 280 characters.
          type: string
        expiresAt:
          description: 'The date that the Pay By Link expires, in ISO 8601 format. For example, 2019-11-23T12:25:28Z. Maximum expiry date should be 30 days from when the payment link is created. If not provided, the default expiry duration is 24 hours.'
          type: string
        merchantAccount:
          description: 'The merchant account identifier, with which you want to process the transaction.'
          type: string
        reference:
          description: |-
            The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.
            If you need to provide multiple references for a transaction, separate them with hyphens ("-").
            Maximum length: 80 characters.
          type: string
        returnUrl:
          description: |-
            Website URL used for redirection after payment is completed.
            If provided, a **Continue** button will be shown on the page. If shoppers select the button, they are redirected to the specified URL.
          type: string
        shopperEmail:
          description: |-
            The shopper's email address. We recommend that you provide this data, as it is used in velocity fraud checks.
            > For 3D Secure 2 transactions, schemes require the `shopperEmail` for both `deviceChannel` **browser** and **app**.
          type: string
        shopperLocale:
          description: The combination of a language code and a country code to specify the language to be used in the payment.
          type: string
        shopperReference:
          description: |-
            The shopper's reference to uniquely identify this shopper (e.g. user ID or account ID).
            > This field is required for recurring payments.
          type: string
      required:
        - merchantAccount
        - reference
        - amount
        - countryCode
    CreatePaymentLinkResponse:
      properties:
        amount:
          description: The amount for which the Pay By Link URL was created.
          $ref: '#/components/schemas/Amount'
        expiresAt:
          description: 'The date that the Pay By Link expires; e.g. 2019-03-23T12:25:28Z.'
          type: string
        reference:
          description: The reference that was specified when the Pay By Link URL was created.
          type: string
        url:
          description: The URL at which the shopper can complete the payment.
          type: string
      required:
        - reference
        - expiresAt
        - url
    DetailsRequest:
      properties:
        details:
          description: Use this collection to submit the details that were returned as a result of the `/payments` call.
          type: object
        paymentData:
          description: The `paymentData` value that you received in the response to the `/payments` call.
          type: string
        threeDSAuthenticationOnly:
          description: Change the `authenticationOnly` indicator originally set in the `/payments` request. Only needs to be set if you want to modify the value set previously.
          type: boolean
      required:
        - details
    DeviceRenderOptions:
      properties:
        sdkInterface:
          description: |-
            Supported SDK interface types.
            Allowed values:
            * Native
            * Html
            * both
          enum:
            - Html
            - Native
            - both
          type: string
        sdkUiType:
          description: |-
            UI types supported for displaying specific challenges.
            Allowed values:
            * text
            * singleSelect
            * outOfBand
            * otherHtml
            * multiSelect
          items:
            enum:
              - multiSelect
              - otherHtml
              - outOfBand
              - singleSelect
              - text
            type: string
          type: array
    ExternalPlatform:
      properties:
        integrator:
          description: External platform integrator.
          type: string
        name:
          description: 'Name of the field. For example, Name of External Platform.'
          type: string
        version:
          description: 'Version of the field. For example, Version of External Platform.'
          type: string
    ForexQuote:
      properties:
        account:
          description: The account name.
          type: string
        accountType:
          description: The account type.
          type: string
        baseAmount:
          description: The base amount.
          $ref: '#/components/schemas/Amount'
        basePoints:
          description: The base points.
          format: int32
          type: integer
        buy:
          description: The buy rate.
          $ref: '#/components/schemas/Amount'
        interbank:
          description: The interbank amount.
          $ref: '#/components/schemas/Amount'
        reference:
          description: The reference assigned to the forex quote request.
          type: string
        sell:
          description: The sell rate.
          $ref: '#/components/schemas/Amount'
        signature:
          description: The signature to validate the integrity.
          type: string
        source:
          description: The source of the forex quote.
          type: string
        type:
          description: The type of forex.
          type: string
        validTill:
          description: The date until which the forex quote is valid.
          format: date-time
          type: string
      required:
        - validTill
        - basePoints
    FraudCheckResult:
      properties:
        accountScore:
          description: The fraud score generated by the risk check.
          format: int32
          type: integer
        checkId:
          description: The ID of the risk check.
          format: int32
          type: integer
        name:
          description: The name of the risk check.
          type: string
      required:
        - checkId
        - name
        - accountScore
    FraudResult:
      properties:
        accountScore:
          description: The total fraud score generated by the risk checks.
          format: int32
          type: integer
        results:
          description: The result of the individual risk checks.
          items:
            $ref: '#/components/schemas/FraudCheckResult'
          type: array
      required:
        - accountScore
    InputDetail:
      properties:
        configuration:
          description: Configuration parameters for the required input.
          type: object
        details:
          description: Input details can also be provided recursively.
          items:
            $ref: '#/components/schemas/SubInputDetail'
          type: array
        inputDetails:
          deprecated: true
          description: Input details can also be provided recursively (deprecated).
          items:
            $ref: '#/components/schemas/SubInputDetail'
          type: array
        itemSearchUrl:
          description: 'In case of a select, the URL from which to query the items.'
          type: string
        items:
          description: 'In case of a select, the items to choose from.'
          items:
            $ref: '#/components/schemas/Item'
          type: array
        key:
          description: The value to provide in the result.
          type: string
        optional:
          description: True if this input value is optional.
          type: boolean
        type:
          description: The type of the required input.
          type: string
        value:
          description: 'The value can be pre-filled, if available.'
          type: string
    Installments:
      properties:
        value:
          description: |-
            Defines the number of installments. Its value needs to be greater than zero.

            Usually, the maximum allowed number of installments is capped. For example, it may not be possible to split a payment in more than 24 installments. The acquirer sets this upper limit, so its value may vary.
          format: int32
          type: integer
      required:
        - value
    Item:
      properties:
        id:
          description: The value to provide in the result.
          type: string
        name:
          description: The display name.
          type: string
    LineItem:
      properties:
        amountExcludingTax:
          description: 'Item amount excluding the tax, in minor units.'
          format: int64
          type: integer
        amountIncludingTax:
          description: 'Item amount including the tax, in minor units.'
          format: int64
          type: integer
        description:
          description: Description of the line item.
          type: string
        id:
          description: ID of the line item.
          type: string
        quantity:
          description: Number of items.
          format: int64
          type: integer
        taxAmount:
          description: 'Tax amount, in minor units.'
          format: int64
          type: integer
        taxCategory:
          description: 'Required for AfterPay. Tax category: High, Low, None, Zero'
          enum:
            - High
            - Low
            - None
            - Zero
          type: string
        taxPercentage:
          description: 'Tax percentage, in minor units.'
          format: int64
          type: integer
    MerchantDevice:
      properties:
        os:
          description: Operating system running on the merchant device.
          type: string
        osVersion:
          description: Version of the operating system on the merchant device.
          type: string
        reference:
          description: Merchant device reference.
          type: string
    MerchantRiskIndicator:
      properties:
        addressMatch:
          description: Whether the chosen delivery address is identical to the billing address.
          type: boolean
        deliveryAddressIndicator:
          description: |-
            Indicator regarding the delivery address.
            Allowed values:
            * `shipToBillingAddress`
            * `shipToVerifiedAddress`
            * `shipToNewAddress`
            * `shipToStore`
            * `digitalGoods`
            * `goodsNotShipped`
            * `other`
          enum:
            - shipToBillingAddress
            - shipToVerifiedAddress
            - shipToNewAddress
            - shipToStore
            - digitalGoods
            - goodsNotShipped
            - other
          type: string
        deliveryEmail:
          description: The delivery email address (for digital goods).
          type: string
        deliveryTimeframe:
          description: |-
            The estimated delivery time for the shopper to receive the goods.
            Allowed values:
            * `electronicDelivery`
            * `sameDayShipping`
            * `overnightShipping`
            * `twoOrMoreDaysShipping`
          enum:
            - electronicDelivery
            - sameDayShipping
            - overnightShipping
            - twoOrMoreDaysShipping
          type: string
        giftCardAmount:
          description: The amount of prepaid or gift cards used for this purchase.
          $ref: '#/components/schemas/Amount'
        giftCardCount:
          description: Number of individual prepaid or gift cards used for this purchase.
          format: int32
          type: integer
        preOrderDate:
          description: 'For pre-order purchases, the expected date this product will be available to the shopper.'
          format: date-time
          type: string
        preOrderPurchase:
          description: Indicator for whether this transaction is for pre-ordering a product.
          type: boolean
        reorderItems:
          description: Indicator for whether the shopper has already purchased the same items in the past.
          type: boolean
    Name:
      properties:
        firstName:
          description: The first name.
          type: string
        gender:
          description: |-
            The gender.
            >The following values are permitted: `MALE`, `FEMALE`, `UNKNOWN`.
          enum:
            - MALE
            - FEMALE
            - UNKNOWN
          maxLength: 1
          minLength: 1
          type: string
        infix:
          description: |-
            The name's infix, if applicable.
            >A maximum length of twenty (20) characters is imposed.
          type: string
        lastName:
          description: The last name.
          type: string
      required:
        - firstName
        - lastName
        - gender
    PaymentMethod:
      properties:
        configuration:
          description: The configuration of the payment method.
          type: object
        details:
          description: All input details to be provided to complete the payment with this payment method.
          items:
            $ref: '#/components/schemas/InputDetail'
          type: array
        group:
          description: The group where this payment method belongs to.
          $ref: '#/components/schemas/PaymentMethodGroup'
        inputDetails:
          deprecated: true
          description: All input details to be provided to complete the payment with this payment method.
          items:
            $ref: '#/components/schemas/InputDetail'
          type: array
        name:
          description: The displayable name of this payment method.
          type: string
        paymentMethodData:
          description: Echo data required to send in next calls.
          type: string
        supportsRecurring:
          description: Indicates whether this payment method supports tokenization or not.
          type: boolean
        type:
          description: The unique payment method code.
          type: string
    PaymentMethodGroup:
      properties:
        name:
          description: The name of the group.
          type: string
        paymentMethodData:
          description: Echo data to be used if the payment method is displayed as part of this group.
          type: string
        type:
          description: The unique code of the group.
          type: string
    PaymentMethodsGroup:
      properties:
        groupType:
          description: The type to submit for any payment method in this group.
          type: string
        name:
          description: The human-readable name of this group.
          type: string
        types:
          description: The types of payment methods that belong in this group.
          items:
            type: string
          type: array
    PaymentMethodsRequest:
      properties:
        additionalData:
          description: |-
            This field contains additional data, which may be required for a particular payment request.

            The `additionalData` object consists of entries, each of which includes the key and value.
          anyOf:
            - $ref: '#/components/schemas/AdditionalDataCommon'
            - $ref: '#/components/schemas/AdditionalData3DSecure'
            - $ref: '#/components/schemas/AdditionalDataAirline'
            - $ref: '#/components/schemas/AdditionalDataCarRental'
            - $ref: '#/components/schemas/AdditionalDataLevel23'
            - $ref: '#/components/schemas/AdditionalDataLodging'
            - $ref: '#/components/schemas/AdditionalDataOpenInvoice'
            - $ref: '#/components/schemas/AdditionalDataRatepay'
            - $ref: '#/components/schemas/AdditionalDataRetry'
            - $ref: '#/components/schemas/AdditionalDataRisk'
            - $ref: '#/components/schemas/AdditionalDataRiskStandalone'
            - $ref: '#/components/schemas/AdditionalDataTemporaryServices'
        allowedPaymentMethods:
          description: |-
            List of payments methods to be presented to the shopper. To refer to payment methods, use their `paymentMethod.type` from [Payment methods overview](https://docs.adyen.com/payment-methods).

            Example: `"allowedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          type: array
        amount:
          description: 'The amount information for the transaction (in [minor units](https://docs.adyen.com/development-resources/currency-codes)). For [BIN or card verification](https://docs.adyen.com/payment-methods/cards/bin-data-and-card-verification) requests, set amount to 0 (zero).'
          $ref: '#/components/schemas/Amount'
        blockedPaymentMethods:
          description: |-
            List of payments methods to be hidden from the shopper. To refer to payment methods, use their `paymentMethod.type` from [Payment methods overview](https://docs.adyen.com/payment-methods).

            Example: `"blockedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          type: array
        channel:
          description: |-
            The platform where a payment transaction takes place. This field can be used for filtering out payment methods that are only available on specific platforms. Possible values:
            * iOS
            * Android
            * Web
          enum:
            - iOS
            - Android
            - Web
          type: string
        countryCode:
          description: The shopper's country code.
          type: string
        merchantAccount:
          description: 'The merchant account identifier, with which you want to process the transaction.'
          type: string
        shopperLocale:
          description: The combination of a language code and a country code to specify the language to be used in the payment.
          type: string
        shopperReference:
          description: |-
            The shopper's reference to uniquely identify this shopper (e.g. user ID or account ID).
            > This field is required for recurring payments.
          type: string
      required:
        - merchantAccount
        - reference
    PaymentMethodsResponse:
      properties:
        groups:
          description: Groups of payment methods.
          items:
            $ref: '#/components/schemas/PaymentMethodsGroup'
          type: array
        oneClickPaymentMethods:
          description: Detailed list of one-click payment methods.
          items:
            $ref: '#/components/schemas/RecurringDetail'
          type: array
        paymentMethods:
          description: Detailed list of payment methods required to generate payment forms.
          items:
            $ref: '#/components/schemas/PaymentMethod'
          type: array
    PaymentRequest:
      properties:
        accountInfo:
          description: |-
            Shopper account information for 3D Secure 2.
            > For 3D Secure 2 transactions, we recommend that you include this object to increase the chances of achieving a frictionless flow.
          $ref: '#/components/schemas/AccountInfo'
        additionalData:
          description: |-
            This field contains additional data, which may be required for a particular payment request.

            The `additionalData` object consists of entries, each of which includes the key and value.
          anyOf:
            - $ref: '#/components/schemas/AdditionalDataCommon'
            - $ref: '#/components/schemas/AdditionalData3DSecure'
            - $ref: '#/components/schemas/AdditionalDataAirline'
            - $ref: '#/components/schemas/AdditionalDataCarRental'
            - $ref: '#/components/schemas/AdditionalDataLevel23'
            - $ref: '#/components/schemas/AdditionalDataLodging'
            - $ref: '#/components/schemas/AdditionalDataOpenInvoice'
            - $ref: '#/components/schemas/AdditionalDataRatepay'
            - $ref: '#/components/schemas/AdditionalDataRetry'
            - $ref: '#/components/schemas/AdditionalDataRisk'
            - $ref: '#/components/schemas/AdditionalDataRiskStandalone'
            - $ref: '#/components/schemas/AdditionalDataTemporaryServices'
        amount:
          description: 'The amount information for the transaction (in [minor units](https://docs.adyen.com/development-resources/currency-codes)). For [BIN or card verification](https://docs.adyen.com/payment-methods/cards/bin-data-and-card-verification) requests, set amount to 0 (zero).'
          $ref: '#/components/schemas/Amount'
        applicationInfo:
          description: 'Information about your application. For more details, see [Building Adyen solutions](https://docs.adyen.com/development-resources/building-adyen-solutions).'
          $ref: '#/components/schemas/ApplicationInfo'
        billingAddress:
          description: |-
            The address where to send the invoice.
            > For 3D Secure 2 transactions, schemes require the `billingAddress` for both `deviceChannel` **browser** and **app**. Include all of the fields within this object.
          $ref: '#/components/schemas/Address'
        browserInfo:
          description: |-
            The shopper's browser information.
            > For 3D Secure 2 transactions, `browserInfo` is required for `channel` **web** (or `deviceChannel` **browser**).
          $ref: '#/components/schemas/BrowserInfo'
        captureDelayHours:
          description: 'The delay between the authorisation and scheduled auto-capture, specified in hours.'
          format: int32
          type: integer
        channel:
          description: |-
            The platform where a payment transaction takes place. This field is optional for filtering out payment methods that are only available on specific platforms. If this value is not set, then we will try to infer it from the `sdkVersion` or `token`.

            Possible values:
            * iOS
            * Android
            * Web
          enum:
            - iOS
            - Android
            - Web
          type: string
        company:
          description: Information regarding the company.
          $ref: '#/components/schemas/Company'
        countryCode:
          description: |-
            The shopper country.

            Format: [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            Example: NL or DE
          type: string
        dateOfBirth:
          description: |-
            The shopper's date of birth.

            Format [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD
          format: date-time
          type: string
        dccQuote:
          description: The forex quote as returned in the response of the forex service.
          $ref: '#/components/schemas/ForexQuote'
        deliveryAddress:
          description: The address where the purchased goods should be delivered.
          $ref: '#/components/schemas/Address'
        deliveryDate:
          description: |-
            The date and time the purchased goods should be delivered.

            Format [ISO 8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DDThh:mm:ss.sssTZD

            Example: 2017-07-17T13:42:40.428+01:00
          format: date-time
          type: string
        deviceFingerprint:
          description: 'A string containing the shopper''s device fingerprint. For more information, refer to [Device fingerprinting](https://docs.adyen.com/risk-management/device-fingerprinting).'
          type: string
        enableOneClick:
          description: 'When true and `shopperReference` is provided, the shopper will be asked if the payment details should be stored for future one-click payments.'
          type: boolean
        enablePayOut:
          description: 'When true and `shopperReference` is provided, the payment details will be tokenized for payouts.'
          type: boolean
        enableRecurring:
          description: 'When true and `shopperReference` is provided, the payment details will be tokenized for recurring payments.'
          type: boolean
        entityType:
          description: The type of the entity the payment is processed for.
          enum:
            - NaturalPerson
            - CompanyName
          type: string
        fraudOffset:
          description: An integer value that is added to the normal fraud score. The value can be either positive or negative.
          format: int32
          type: integer
        installments:
          description: 'Contains installment settings. For more information, refer to [Installments](https://docs.adyen.com/payment-methods/cards/credit-card-installments).'
          $ref: '#/components/schemas/Installments'
        lineItems:
          description: |-
            Price and product information about the purchased items, to be included on the invoice sent to the shopper.
            > This field is required for Klarna, AfterPay, and RatePay.
          items:
            $ref: '#/components/schemas/LineItem'
          type: array
        mcc:
          description: 'The [merchant category code](https://en.wikipedia.org/wiki/Merchant_category_code) (MCC) is a four-digit number, which relates to a particular market segment. This code reflects the predominant activity that is conducted by the merchant.'
          type: string
        merchantAccount:
          description: 'The merchant account identifier, with which you want to process the transaction.'
          type: string
        merchantOrderReference:
          description: |-
            This reference allows linking multiple transactions to each other for reporting purposes (i.e. order auth-rate). The reference should be unique per billing cycle.
            The same merchant order reference should never be reused after the first authorised attempt. If used, this field should be supplied for all incoming authorisations.
            > We strongly recommend you send the `merchantOrderReference` value to benefit from linking payment requests when authorisation retries take place. In addition, we recommend you provide `retry.orderAttemptNumber`, `retry.chainAttemptNumber`, and `retry.skipRetry` values in `PaymentRequest.additionalData`.
          type: string
        merchantRiskIndicator:
          description: |-
            Additional risk fields for 3D Secure 2.
            > For 3D Secure 2 transactions, we recommend that you include this object to increase the chances of achieving a frictionless flow.
          $ref: '#/components/schemas/MerchantRiskIndicator'
        metadata:
          description: |-
            Metadata consists of entries, each of which includes a key and a value.
            Limitations: Maximum 20 key-value pairs per request. When exceeding, the "177" error occurs: "Metadata size exceeds limit".
          type: object
        mpiData:
          description: Authentication data produced by an MPI (Mastercard SecureCode or Verified By Visa).
          $ref: '#/components/schemas/ThreeDSecureData'
        orderReference:
          description: 'When you are doing multiple partial (gift card) payments, this is the `pspReference` of the first payment. We use this to link the multiple payments to each other. As your own reference for linking multiple payments, use the `merchantOrderReference`instead.'
          type: string
        origin:
          description: |-
            Required for the 3D Secure 2 `channel` **Web** integration.

            Set this parameter to the origin URL of the page that you are loading the 3D Secure Component from.
          type: string
        paymentMethod:
          description: The collection that contains the type of the payment method and its specific information (e.g. `idealIssuer`).
          type: object
        recurringExpiry:
          description: Date after which no further authorisations shall be performed. Only for 3D Secure 2.
          type: string
        recurringFrequency:
          description: Minimum number of days between authorisations. Only for 3D Secure 2.
          type: string
        recurringProcessingModel:
          description: |
            Defines a recurring payment type.
            Allowed values:
            * `Subscription` – A transaction for a fixed or variable amount, which follows a fixed schedule.
            * `CardOnFile` – Card details are stored to enable one-click or omnichannel journeys, or simply to streamline the checkout process. Any subscription not following a fixed schedule is also considered a card-on-file transaction.
            * `UnscheduledCardOnFile` – A transaction that occurs on a non-fixed schedule and/or have variable amounts. For example, automatic top-ups when a cardholder's balance drops below a certain amount.
          enum:
            - CardOnFile
            - Subscription
            - UnscheduledCardOnFile
          type: string
        redirectFromIssuerMethod:
          description: Specifies the redirect method (GET or POST) when redirecting back from the issuer.
          type: string
        redirectToIssuerMethod:
          description: Specifies the redirect method (GET or POST) when redirecting to the issuer.
          type: string
        reference:
          description: |-
            The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.
            If you need to provide multiple references for a transaction, separate them with hyphens ("-").
            Maximum length: 80 characters.
          type: string
        returnUrl:
          description: The URL to return to.
          type: string
        riskData:
          description: 'Contains risk data, such as client-side data, used to identify risk for a transaction.'
          $ref: '#/components/schemas/RiskData'
        sessionValidity:
          description: The maximum validity of the session.
          type: string
        shopperEmail:
          description: |-
            The shopper's email address. We recommend that you provide this data, as it is used in velocity fraud checks.
            > For 3D Secure 2 transactions, schemes require the `shopperEmail` for both `deviceChannel` **browser** and **app**.
          type: string
        shopperIP:
          description: |-
            The shopper's IP address. In general, we recommend that you provide this data, as it is used in a number of risk checks (for instance, number of payment attempts or location-based checks).
            > Required for 3D Secure 2 transactions. This field is also mandatory for some merchants depending on your business model. For more information, [contact Support](https://support.adyen.com/hc/en-us/requests/new).
          type: string
        shopperInteraction:
          description: |-
            Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
            For the web service API, Adyen assumes Ecommerce shopper interaction by default.

            This field has the following possible values:
            * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
            * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
            * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
            * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
          enum:
            - Ecommerce
            - ContAuth
            - Moto
            - POS
          type: string
        shopperLocale:
          description: The combination of a language code and a country code to specify the language to be used in the payment.
          type: string
        shopperName:
          description: The shopper's full name and gender (if specified).
          $ref: '#/components/schemas/Name'
        shopperReference:
          description: |-
            The shopper's reference to uniquely identify this shopper (e.g. user ID or account ID).
            > This field is required for recurring payments.
          type: string
        shopperStatement:
          description: The text to appear on the shopper's bank statement.
          type: string
        socialSecurityNumber:
          description: The shopper's social security number.
          type: string
        splits:
          description: The details of how the payment should be split when distributing a payment to a MarketPay Marketplace and its Accounts.
          items:
            $ref: '#/components/schemas/Split'
          type: array
        telephoneNumber:
          description: The shopper's telephone number.
          type: string
        threeDS2RequestData:
          description: Request fields for 3D Secure 2.
          $ref: '#/components/schemas/ThreeDS2RequestData'
        trustedShopper:
          description: Set to true if the payment should be routed to a trusted MID.
          type: boolean
      required:
        - merchantAccount
        - reference
        - amount
        - returnUrl
        - paymentMethod
    PaymentResponse:
      properties:
        additionalData:
          description: 'This field contains additional data, which may be required to return in a particular payment response. To choose data fields to be returned, go to **Customer Area** > **Account** > **API URLs** > **Additional data settings**.'
          anyOf:
            - $ref: '#/components/schemas/ResponseAdditionalDataCommon'
            - $ref: '#/components/schemas/ResponseAdditionalDataBillingAddress'
            - $ref: '#/components/schemas/ResponseAdditionalDataCard'
            - $ref: '#/components/schemas/ResponseAdditionalDataDeliveryAddress'
            - $ref: '#/components/schemas/ResponseAdditionalDataInstallments'
            - $ref: '#/components/schemas/ResponseAdditionalDataPayPal'
            - $ref: '#/components/schemas/ResponseAdditionalDataSepa'
        authentication:
          description: 'Contains `threeds2.fingerprint` or `threeds2.challengeToken` values to be used in further calls to `/payments/details` endpoint. '
          type: object
        details:
          description: 'When non-empty, contains all the fields that you must submit to the `/payments/details` endpoint.'
          items:
            $ref: '#/components/schemas/InputDetail'
          type: array
        fraudResult:
          description: The fraud result properties of the payment.
          $ref: '#/components/schemas/FraudResult'
        outputDetails:
          description: Contains the details that will be presented to the shopper.
          type: object
        paymentData:
          description: 'When non-empty, contains a value that you must submit to the `/payments/details` endpoint.'
          type: string
        pspReference:
          description: |-
            Adyen's 16-character string reference associated with the transaction/request. This value is globally unique; quote it when communicating with us about this request.

            > `pspReference` is returned only for non-redirect payment methods.
          type: string
        redirect:
          description: 'When the payment flow requires a redirect, this object contains information about the redirect URL.'
          $ref: '#/components/schemas/Redirect'
        refusalReason:
          description: |-
            If the payment's authorisation is refused or an error occurs during authorisation, this field holds Adyen's mapped reason for the refusal or a description of the error.

            When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.
          type: string
        refusalReasonCode:
          description: 'Code that specifies the refusal reason. For more information, see [Authorisation refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).'
          type: string
        resultCode:
          description: |-
            The result of the payment. Possible values:

            * **AuthenticationFinished** – The payment has been successfully authenticated with 3D Secure 2. Returned for 3D Secure 2 authentication-only transactions.
            * **Authorised** – The payment was successfully authorised. This state serves as an indicator to proceed with the delivery of goods and services. This is a final state.
            * **Cancelled** – Indicates the payment has been cancelled (either by the shopper or the merchant) before processing was completed. This is a final state.
            * **ChallengeShopper** – The issuer requires further shopper interaction before the payment can be authenticated. Returned for 3D Secure 2 transactions.
            * **Error** – There was an error when the payment was being processed. The reason is given in the `refusalReason` field. This is a final state.
            * **IdentifyShopper** – The issuer requires the shopper's device fingerprint before the payment can be authenticated. Returned for 3D Secure 2 transactions.
            * **Pending** – Indicates that it is not possible to obtain the final status of the payment. This can happen if the systems providing final status information for the payment are unavailable, or if the shopper needs to take further action to complete the payment. For more information, refer to [Result codes](https://docs.adyen.com/checkout/payment-result-codes).
            * **PresentToShopper** – Indicates that the response contains additional information that you need to present to a shopper, so that they can use it to complete a payment.
            * **Received** – Indicates the payment has successfully been received by Adyen, and will be processed. This is the initial state for all payments.
            * **RedirectShopper** – Indicates the shopper should be redirected to an external web page or app to complete the authorisation.
            * **Refused** – Indicates the payment was refused. The reason is given in the `refusalReason` field. This is a final state.
          enum:
            - AuthenticationFinished
            - Authorised
            - Cancelled
            - ChallengeShopper
            - Error
            - IdentifyShopper
            - Pending
            - PresentToShopper
            - Received
            - RedirectShopper
            - Refused
          type: string
    PaymentSetupRequest:
      properties:
        additionalData:
          description: |-
            This field contains additional data, which may be required for a particular payment request.

            The `additionalData` object consists of entries, each of which includes the key and value.
          anyOf:
            - $ref: '#/components/schemas/AdditionalDataCommon'
            - $ref: '#/components/schemas/AdditionalData3DSecure'
            - $ref: '#/components/schemas/AdditionalDataAirline'
            - $ref: '#/components/schemas/AdditionalDataCarRental'
            - $ref: '#/components/schemas/AdditionalDataLevel23'
            - $ref: '#/components/schemas/AdditionalDataLodging'
            - $ref: '#/components/schemas/AdditionalDataOpenInvoice'
            - $ref: '#/components/schemas/AdditionalDataRatepay'
            - $ref: '#/components/schemas/AdditionalDataRetry'
            - $ref: '#/components/schemas/AdditionalDataRisk'
            - $ref: '#/components/schemas/AdditionalDataRiskStandalone'
            - $ref: '#/components/schemas/AdditionalDataTemporaryServices'
        allowedPaymentMethods:
          description: |-
            List of payments methods to be presented to the shopper. To refer to payment methods, use their `paymentMethod.type` from [Payment methods overview](https://docs.adyen.com/payment-methods).

            Example: `"allowedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          type: array
        amount:
          description: 'The amount information for the transaction (in [minor units](https://docs.adyen.com/development-resources/currency-codes)). For [BIN or card verification](https://docs.adyen.com/payment-methods/cards/bin-data-and-card-verification) requests, set amount to 0 (zero).'
          $ref: '#/components/schemas/Amount'
        applicationInfo:
          description: 'Information about your application. For more details, see [Building Adyen solutions](https://docs.adyen.com/development-resources/building-adyen-solutions).'
          $ref: '#/components/schemas/ApplicationInfo'
        billingAddress:
          description: |-
            The address where to send the invoice.
            > For 3D Secure 2 transactions, schemes require the `billingAddress` for both `deviceChannel` **browser** and **app**. Include all of the fields within this object.
          $ref: '#/components/schemas/Address'
        blockedPaymentMethods:
          description: |-
            List of payments methods to be hidden from the shopper. To refer to payment methods, use their `paymentMethod.type` from [Payment methods overview](https://docs.adyen.com/payment-methods).

            Example: `"blockedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          type: array
        captureDelayHours:
          description: 'The delay between the authorisation and scheduled auto-capture, specified in hours.'
          format: int32
          type: integer
        channel:
          description: |-
            The platform where a payment transaction takes place. This field is optional for filtering out payment methods that are only available on specific platforms. If this value is not set, then we will try to infer it from the `sdkVersion` or `token`.

            Possible values:
            * iOS
            * Android
            * Web
          enum:
            - iOS
            - Android
            - Web
          type: string
        company:
          description: Information regarding the company.
          $ref: '#/components/schemas/Company'
        configuration:
          description: Specify configurations to enable additional features.
          $ref: '#/components/schemas/Configuration'
        countryCode:
          description: |-
            The shopper country.

            Format: [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            Example: NL or DE
          type: string
        dateOfBirth:
          description: |-
            The shopper's date of birth.

            Format [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD
          format: date-time
          type: string
        dccQuote:
          description: The forex quote as returned in the response of the forex service.
          $ref: '#/components/schemas/ForexQuote'
        deliveryAddress:
          description: The address where the purchased goods should be delivered.
          $ref: '#/components/schemas/Address'
        deliveryDate:
          description: |-
            The date and time the purchased goods should be delivered.

            Format [ISO 8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DDThh:mm:ss.sssTZD

            Example: 2017-07-17T13:42:40.428+01:00
          format: date-time
          type: string
        enableOneClick:
          description: 'When true and `shopperReference` is provided, the shopper will be asked if the payment details should be stored for future one-click payments.'
          type: boolean
        enablePayOut:
          description: 'When true and `shopperReference` is provided, the payment details will be tokenized for payouts.'
          type: boolean
        enableRecurring:
          description: 'When true and `shopperReference` is provided, the payment details will be tokenized for recurring payments.'
          type: boolean
        entityType:
          description: The type of the entity the payment is processed for.
          enum:
            - NaturalPerson
            - CompanyName
          type: string
        fraudOffset:
          description: An integer value that is added to the normal fraud score. The value can be either positive or negative.
          format: int32
          type: integer
        installments:
          description: 'Contains installment settings. For more information, refer to [Installments](https://docs.adyen.com/payment-methods/cards/credit-card-installments).'
          $ref: '#/components/schemas/Installments'
        lineItems:
          description: |-
            Price and product information about the purchased items, to be included on the invoice sent to the shopper.
            > This field is required for Klarna, AfterPay, and RatePay.
          items:
            $ref: '#/components/schemas/LineItem'
          type: array
        mcc:
          description: 'The [merchant category code](https://en.wikipedia.org/wiki/Merchant_category_code) (MCC) is a four-digit number, which relates to a particular market segment. This code reflects the predominant activity that is conducted by the merchant.'
          type: string
        merchantAccount:
          description: 'The merchant account identifier, with which you want to process the transaction.'
          type: string
        merchantOrderReference:
          description: |-
            This reference allows linking multiple transactions to each other for reporting purposes (i.e. order auth-rate). The reference should be unique per billing cycle.
            The same merchant order reference should never be reused after the first authorised attempt. If used, this field should be supplied for all incoming authorisations.
            > We strongly recommend you send the `merchantOrderReference` value to benefit from linking payment requests when authorisation retries take place. In addition, we recommend you provide `retry.orderAttemptNumber`, `retry.chainAttemptNumber`, and `retry.skipRetry` values in `PaymentRequest.additionalData`.
          type: string
        metadata:
          description: |-
            Metadata consists of entries, each of which includes a key and a value.
            Limitations: Maximum 20 key-value pairs per request. When exceeding, the "177" error occurs: "Metadata size exceeds limit".
          type: object
        orderReference:
          description: 'When you are doing multiple partial (gift card) payments, this is the `pspReference` of the first payment. We use this to link the multiple payments to each other. As your own reference for linking multiple payments, use the `merchantOrderReference`instead.'
          type: string
        origin:
          description: |-
            Required for the Web integration.

            Set this parameter to the origin URL of the page that you are loading the SDK from.
          type: string
        recurringExpiry:
          description: Date after which no further authorisations shall be performed. Only for 3D Secure 2.
          type: string
        recurringFrequency:
          description: Minimum number of days between authorisations. Only for 3D Secure 2.
          type: string
        reference:
          description: |-
            The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.
            If you need to provide multiple references for a transaction, separate them with hyphens ("-").
            Maximum length: 80 characters.
          type: string
        returnUrl:
          description: The URL to return to.
          type: string
        riskData:
          description: 'Contains risk data, such as client-side data, used to identify risk for a transaction.'
          $ref: '#/components/schemas/RiskData'
        sdkVersion:
          description: The version of the SDK you are using (for Web SDK integrations only).
          type: string
        sessionValidity:
          description: The maximum validity of the session.
          type: string
        shopperEmail:
          description: |-
            The shopper's email address. We recommend that you provide this data, as it is used in velocity fraud checks.
            > For 3D Secure 2 transactions, schemes require the `shopperEmail` for both `deviceChannel` **browser** and **app**.
          type: string
        shopperIP:
          description: |-
            The shopper's IP address. In general, we recommend that you provide this data, as it is used in a number of risk checks (for instance, number of payment attempts or location-based checks).
            > Required for 3D Secure 2 transactions. This field is also mandatory for some merchants depending on your business model. For more information, [contact Support](https://support.adyen.com/hc/en-us/requests/new).
          type: string
        shopperInteraction:
          description: |-
            Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
            For the web service API, Adyen assumes Ecommerce shopper interaction by default.

            This field has the following possible values:
            * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
            * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
            * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
            * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
          enum:
            - Ecommerce
            - ContAuth
            - Moto
            - POS
          type: string
        shopperLocale:
          description: The combination of a language code and a country code to specify the language to be used in the payment.
          type: string
        shopperName:
          description: The shopper's full name and gender (if specified).
          $ref: '#/components/schemas/Name'
        shopperReference:
          description: |-
            The shopper's reference to uniquely identify this shopper (e.g. user ID or account ID).
            > This field is required for recurring payments.
          type: string
        shopperStatement:
          description: The text to appear on the shopper's bank statement.
          type: string
        socialSecurityNumber:
          description: The shopper's social security number.
          type: string
        splits:
          description: The details of how the payment should be split when distributing a payment to a MarketPay Marketplace and its Accounts.
          items:
            $ref: '#/components/schemas/Split'
          type: array
        telephoneNumber:
          description: The shopper's telephone number.
          type: string
        token:
          description: |-
            The token obtained when initializing the SDK.

            > This parameter is required for iOS and Android; not required for Web.
          type: string
        trustedShopper:
          description: Set to true if the payment should be routed to a trusted MID.
          type: boolean
      required:
        - merchantAccount
        - reference
        - amount
        - returnUrl
        - countryCode
    PaymentSetupResponse:
      properties:
        paymentSession:
          description: The encoded payment session that you need to pass to the SDK.
          type: string
        recurringDetails:
          deprecated: true
          description: The detailed list of stored payment details required to generate payment forms. Will be empty if oneClick is set to false in the request.
          items:
            $ref: '#/components/schemas/RecurringDetail'
          type: array
    PaymentVerificationRequest:
      properties:
        payload:
          description: Encrypted and signed payment result data. You should receive this value from the Checkout SDK after the shopper completes the payment.
          type: string
      required:
        - payload
    PaymentVerificationResponse:
      properties:
        additionalData:
          description: 'This field contains additional data, which may be required to return in a particular payment response. To choose data fields to be returned, go to **Customer Area** > **Account** > **API URLs** > **Additional data settings**.'
          anyOf:
            - $ref: '#/components/schemas/ResponseAdditionalDataCommon'
            - $ref: '#/components/schemas/ResponseAdditionalDataBillingAddress'
            - $ref: '#/components/schemas/ResponseAdditionalDataCard'
            - $ref: '#/components/schemas/ResponseAdditionalDataDeliveryAddress'
            - $ref: '#/components/schemas/ResponseAdditionalDataInstallments'
            - $ref: '#/components/schemas/ResponseAdditionalDataPayPal'
            - $ref: '#/components/schemas/ResponseAdditionalDataSepa'
        fraudResult:
          description: The fraud result properties of the payment.
          $ref: '#/components/schemas/FraudResult'
        merchantReference:
          description: A unique value that you provided in the initial `/paymentSession` request as a `reference` field.
          type: string
        paymentMethod:
          description: The payment method used in the transaction.
          type: string
        pspReference:
          description: |-
            Adyen's 16-character string reference associated with the transaction/request. This value is globally unique; quote it when communicating with us about this request.

            > `pspReference` is returned only for non-redirect payment methods.
          type: string
        refusalReason:
          description: |-
            If the payment's authorisation is refused or an error occurs during authorisation, this field holds Adyen's mapped reason for the refusal or a description of the error.

            When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.
          type: string
        refusalReasonCode:
          description: 'Code that specifies the refusal reason. For more information, see [Authorisation refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).'
          type: string
        resultCode:
          description: |-
            The result of the payment. Possible values:

            * **AuthenticationFinished** – The payment has been successfully authenticated with 3D Secure 2. Returned for 3D Secure 2 authentication-only transactions.
            * **Authorised** – The payment was successfully authorised. This state serves as an indicator to proceed with the delivery of goods and services. This is a final state.
            * **Cancelled** – Indicates the payment has been cancelled (either by the shopper or the merchant) before processing was completed. This is a final state.
            * **ChallengeShopper** – The issuer requires further shopper interaction before the payment can be authenticated. Returned for 3D Secure 2 transactions.
            * **Error** – There was an error when the payment was being processed. The reason is given in the `refusalReason` field. This is a final state.
            * **IdentifyShopper** – The issuer requires the shopper's device fingerprint before the payment can be authenticated. Returned for 3D Secure 2 transactions.
            * **Pending** – Indicates that it is not possible to obtain the final status of the payment. This can happen if the systems providing final status information for the payment are unavailable, or if the shopper needs to take further action to complete the payment. For more information, refer to [Result codes](https://docs.adyen.com/checkout/payment-result-codes).
            * **PresentToShopper** – Indicates that the response contains additional information that you need to present to a shopper, so that they can use it to complete a payment.
            * **Received** – Indicates the payment has successfully been received by Adyen, and will be processed. This is the initial state for all payments.
            * **RedirectShopper** – Indicates the shopper should be redirected to an external web page or app to complete the authorisation.
            * **Refused** – Indicates the payment was refused. The reason is given in the `refusalReason` field. This is a final state.
          enum:
            - AuthenticationFinished
            - Authorised
            - Cancelled
            - ChallengeShopper
            - Error
            - IdentifyShopper
            - Pending
            - PresentToShopper
            - Received
            - RedirectShopper
            - Refused
          type: string
        serviceError:
          description: The type of the error.
          $ref: '#/components/schemas/ServiceError'
        shopperLocale:
          description: The shopperLocale value provided in the payment request.
          type: string
      required:
        - merchantReference
        - paymentMethod
        - shopperLocale
    Recurring:
      properties:
        contract:
          description: |-
            The type of recurring contract to be used.
            Possible values:
            * `ONECLICK` – Payment details can be used to initiate a one-click payment, where the shopper enters the [card security code (CVC/CVV)](https://docs.adyen.com/payments-fundamentals/payment-glossary#card-security-code-cvc-cvv-cid).
            * `RECURRING` – Payment details can be used without the card security code to initiate [card-not-present transactions](https://docs.adyen.com/payments-fundamentals/payment-glossary#card-not-present-cnp).
            * `ONECLICK,RECURRING` – Payment details can be used regardless of whether the shopper is on your site or not.
            * `PAYOUT` – Payment details can be used to [make a payout](https://docs.adyen.com/checkout/online-payouts).
          enum:
            - ONECLICK
            - RECURRING
            - PAYOUT
          type: string
        recurringDetailName:
          description: A descriptive name for this detail.
          type: string
        recurringExpiry:
          description: Date after which no further authorisations shall be performed. Only for 3D Secure 2.
          format: date-time
          type: string
        recurringFrequency:
          description: Minimum number of days between authorisations. Only for 3D Secure 2.
          type: string
        tokenService:
          description: The name of the token service.
          enum:
            - VISATOKENSERVICE
            - MCTOKENSERVICE
          type: string
    RecurringDetail:
      properties:
        configuration:
          description: The configuration of the payment method.
          type: object
        details:
          description: All input details to be provided to complete the payment with this payment method.
          items:
            $ref: '#/components/schemas/InputDetail'
          type: array
        group:
          description: The group where this payment method belongs to.
          $ref: '#/components/schemas/PaymentMethodGroup'
        inputDetails:
          deprecated: true
          description: All input details to be provided to complete the payment with this payment method.
          items:
            $ref: '#/components/schemas/InputDetail'
          type: array
        name:
          description: The displayable name of this payment method.
          type: string
        paymentMethodData:
          description: Echo data required to send in next calls.
          type: string
        recurringDetailReference:
          description: The reference that uniquely identifies the recurring detail.
          type: string
        storedDetails:
          description: Contains information on previously stored payment details.
          $ref: '#/components/schemas/StoredDetails'
        supportsRecurring:
          description: Indicates whether this payment method supports tokenization or not.
          type: boolean
        type:
          description: The unique payment method code.
          type: string
    Redirect:
      properties:
        data:
          description: 'When the redirect URL must be accessed via POST, use this data to post to the redirect URL.'
          type: object
        method:
          description: |-
            The web method that you must use to access the redirect URL.

            Possible values: GET, POST.
          enum:
            - GET
            - POST
          type: string
        url:
          description: 'The URL, to which you must redirect a shopper to complete a payment.'
          type: string
    RiskData:
      properties:
        clientData:
          description: 'Contains client-side data, like the device fingerprint, cookies, and specific browser settings.'
          type: string
    SDKEphemPubKey:
      properties:
        crv:
          description: The `crv` value as received from the 3D Secure 2 SDK.
          type: string
        kty:
          description: The `kty` value as received from the 3D Secure 2 SDK.
          type: string
        x:
          description: The `x` value as received from the 3D Secure 2 SDK.
          type: string
        'y':
          description: The `y` value as received from the 3D Secure 2 SDK.
          type: string
    ServiceError:
      properties:
        errorCode:
          type: string
        errorType:
          type: string
        message:
          type: string
    ShopperInput:
      properties:
        billingAddress:
          description: |-
            Specifies visibility of billing address fields.

            Permitted values:
            * editable
            * hidden
            * readOnly
          enum:
            - editable
            - hidden
            - readOnly
          type: string
        deliveryAddress:
          description: |-
            Specifies visibility of delivery address fields.

            Permitted values:
            * editable
            * hidden
            * readOnly
          enum:
            - editable
            - hidden
            - readOnly
          type: string
        personalDetails:
          description: |-
            Specifies visibility of personal details.

            Permitted values:
            * editable
            * hidden
            * readOnly
          enum:
            - editable
            - hidden
            - readOnly
          type: string
    ShopperInteractionDevice:
      properties:
        locale:
          description: Locale on the shopper interaction device.
          type: string
        os:
          description: Operating system running on the shopper interaction device.
          type: string
        osVersion:
          description: Version of the operating system on the shopper interaction device.
          type: string
    Split:
      properties:
        account:
          description: |-
            The account to which this split applies.

            >Required if the type is `MarketPlace`.
          type: string
        amount:
          description: The amount of this split.
          $ref: '#/components/schemas/SplitAmount'
        description:
          description: A description of this split.
          type: string
        reference:
          description: |-
            The reference of this split. Used to link other operations (e.g. captures and refunds) to this split.

            >Required if the type is `MarketPlace`.
          type: string
        type:
          description: |-
            The type of this split.

            >Permitted values: `Default`, `PaymentFee`, `VAT`, `Commission`, `MarketPlace`, `BalanceAccount`.
          enum:
            - BalanceAccount
            - Commission
            - Default
            - MarketPlace
            - PaymentFee
            - VAT
            - Verification
          type: string
      required:
        - amount
        - type
    SplitAmount:
      properties:
        currency:
          description: |-
            The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).

            If this value is not provided, the currency in which the payment is made will be used.
          maxLength: 3
          minLength: 3
          type: string
        value:
          description: |-
            The payable amount that can be charged for the transaction.

            The transaction amount needs to be represented in minor units according to the [following table](https://docs.adyen.com/development-resources/currency-codes).
          format: int64
          type: integer
      required:
        - value
    StoredDetails:
      properties:
        bank:
          description: The stored bank account.
          $ref: '#/components/schemas/BankAccount'
        card:
          description: The stored card information.
          $ref: '#/components/schemas/Card'
        emailAddress:
          description: The email associated with stored payment details.
          type: string
    SubInputDetail:
      properties:
        configuration:
          description: Configuration parameters for the required input.
          type: object
        items:
          description: 'In case of a select, the items to choose from.'
          items:
            $ref: '#/components/schemas/Item'
          type: array
        key:
          description: The value to provide in the result.
          type: string
        optional:
          description: True if this input is optional to provide.
          type: boolean
        type:
          description: The type of the required input.
          type: string
        value:
          description: 'The value can be pre-filled, if available.'
          type: string
    ThreeDS2RequestData:
      properties:
        authenticationOnly:
          description: 'If set to true, you will only perform the [3D Secure 2 authentication](https://docs.adyen.com/checkout/3d-secure/other-3ds-flows/authentication-only), and not the payment authorisation.'
          type: boolean
        challengeIndicator:
          description: |
            Possibility to specify a preference for receiving a challenge from the issuer.
            Allowed values:
            * `noPreference`
            * `requestNoChallenge`
            * `requestChallenge`
            * `requestChallengeAsMandate`
          enum:
            - noPreference
            - requestNoChallenge
            - requestChallenge
            - requestChallengeAsMandate
          type: string
        deviceChannel:
          description: |-
            The environment of the shopper.
            Allowed values:
            * `app`
            * `browser`
          type: string
        deviceRenderOptions:
          description: |-
            Display options for the 3D Secure 2 SDK.
            Optional and only for `deviceChannel` **app**.
          $ref: '#/components/schemas/DeviceRenderOptions'
        messageVersion:
          description: The `messageVersion` value indicating the 3D Secure 2 protocol version.
          type: string
        notificationURL:
          description: URL to where the issuer should send the `CRes`. Required if you are not using components for `channel` **Web** or if you are using classic integration `deviceChannel` **browser**.
          type: string
        sdkAppID:
          description: |-
            The `sdkAppID` value as received from the 3D Secure 2 SDK.
            Required for `deviceChannel` set to **app**.
          type: string
        sdkEncData:
          description: |-
            The `sdkEncData` value as received from the 3D Secure 2 SDK.
            Required for `deviceChannel` set to **app**.
          type: string
        sdkEphemPubKey:
          description: |-
            The `sdkEphemPubKey` value as received from the 3D Secure 2 SDK.
            Required for `deviceChannel` set to **app**.
          $ref: '#/components/schemas/SDKEphemPubKey'
        sdkMaxTimeout:
          description: |-
            The maximum amount of time in minutes for the 3D Secure 2 authentication process.
            Optional and only for `deviceChannel` set to **app**. Defaults to **60** minutes.
          format: int32
          type: integer
        sdkReferenceNumber:
          description: |-
            The `sdkReferenceNumber` value as received from the 3D Secure 2 SDK.
            Only for `deviceChannel` set to **app**.
          type: string
        sdkTransID:
          description: |-
            The `sdkTransID` value as received from the 3D Secure 2 SDK.
            Only for `deviceChannel` set to **app**.
          type: string
        threeDSCompInd:
          description: Completion indicator for the device fingerprinting.
          type: string
        threeDSRequestorID:
          description: 'Required for [authentication-only integration](https://docs.adyen.com/checkout/3d-secure/other-3ds-flows/authentication-only) for Visa. Unique 3D Secure requestor identifier assigned by the Directory Server when you enrol for 3D Secure 2.'
          type: string
        threeDSRequestorName:
          description: 'Required for [authentication-only integration](https://docs.adyen.com/checkout/3d-secure/other-3ds-flows/authentication-only) for Visa. Unique 3D Secure requestor name assigned by the Directory Server when you enrol for 3D Secure 2.'
          type: string
        threeDSRequestorURL:
          description: URL of the (customer service) website that will be shown to the shopper in case of technical errors during the 3D Secure 2 process.
          type: string
      required:
        - deviceChannel
    ThreeDSecureData:
      properties:
        authenticationResponse:
          description: |-
            In 3D Secure 1, the authentication response if the shopper was redirected.

            In 3D Secure 2, this is the `transStatus` from the challenge result. If the transaction was frictionless, set this value to **Y**.
          enum:
            - 'Y'
            - 'N'
            - U
            - A
          type: string
        cavv:
          description: 'The cardholder authentication value (base64 encoded, 20 bytes in a decoded form).'
          format: byte
          type: string
        cavvAlgorithm:
          description: The CAVV algorithm used. Include this only for 3D Secure 1.
          type: string
        directoryResponse:
          description: |-
            In 3D Secure 1, this is the enrollment response from the 3D directory server.

            In 3D Secure 2, this is the `transStatus` from the `ARes`. The possible values are **A** or **Y** for a frictionless flow, or **C** for a challenge flow.
          enum:
            - A
            - C
            - D
            - I
            - 'N'
            - R
            - U
            - 'Y'
          type: string
        eci:
          description: The electronic commerce indicator.
          type: string
        threeDSVersion:
          description: The version of the 3D Secure protocol.
          type: string
        xid:
          description: 'Supported for 3D Secure 1. The transaction identifier (Base64-encoded, 20 bytes in a decoded form).'
          format: byte
          type: string
