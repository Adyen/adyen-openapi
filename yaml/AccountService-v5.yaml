openapi: 3.0.3
servers:
- url: https://cal-test.adyen.com/cal/services/Account/v5
info:
  version: '5'
  x-publicVersion: true
  title: 'Adyen for Platforms: Account API'
  description: 'The Account API provides endpoints for managing account-related entities
    on your platform. These related entities include account holders, accounts, bank
    accounts, shareholders, and KYC-related documents. The management operations include
    actions such as creation, retrieval, updating, and deletion of them.


    For more information, refer to our [documentation](https://docs.adyen.com/platforms).

    ## Authentication

    To connect to the Account API, you must use basic authentication credentials of
    your web service user. If you don''t have one, contact the [Adyen Support Team](https://support.adyen.com/hc/en-us/requests/new).
    Then use its credentials to authenticate your request, for example:


    ```

    curl

    -U "ws@MarketPlace.YourMarketPlace":"YourWsPassword" \

    -H "Content-Type: application/json" \

    ...

    ```

    Note that when going live, you need to generate new web service user credentials
    to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).


    ## Versioning

    The Account API supports versioning of its endpoints through a version suffix
    in the endpoint URL. This suffix has the following format: "vXX", where XX is
    the version number.


    For example:

    ```

    https://cal-test.adyen.com/cal/services/Account/v5/createAccountHolder

    ```'
  termsOfService: https://www.adyen.com/legal/terms-and-conditions
  contact:
    name: Adyen Developer Experience team
    url: https://www.adyen.help/hc/en-us/community/topics
    email: developer-experience@adyen.com
x-groups:
- Account holders
- Accounts
- Verification
paths:
  /checkAccountHolder:
    post:
      summary: Perform verification for an account holder.
      description: Triggers the KYC verification for an account holder even if the
        checks are not yet required for the volume that they currently process.
      x-addedInVersion: 5
      operationId: post-checkAccountHolder
      x-groupName: Verification
      x-sortIndex: 5
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-checkAccountHolder-basic'
            schema:
              $ref: '#/components/schemas/PerformVerificationRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: OK - the request has succeeded.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Accepted - the request has been accepted for processing, but
            the processing has not been completed.
        '400':
          content:
            application/json:
              examples:
                generic-400:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic-403:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /closeAccount:
    post:
      summary: Close an account.
      description: Closes an account. If an account is closed, you cannot process
        transactions, pay out its funds, or reopen it. If payments are made to a closed
        account, the payments will be directed to your liable account.
      operationId: post-closeAccount
      x-groupName: Accounts
      x-sortIndex: 3
      requestBody:
        content:
          application/json:
            examples:
              closeAccount:
                $ref: '#/components/examples/post-closeAccount-closeAccount'
            schema:
              $ref: '#/components/schemas/CloseAccountRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloseAccountResponse'
          description: OK - the request has succeeded.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloseAccountResponse'
          description: Accepted - the request has been accepted for processing, but
            the processing has not been completed.
        '400':
          content:
            application/json:
              examples:
                generic-400:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic-403:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /closeAccountHolder:
    post:
      summary: Close an account holder.
      description: Changes the [status of an account holder](https://docs.adyen.com/platforms/account-holders-and-accounts#account-holder-statuses)
        to **Closed**. This state is final. If an account holder is closed, you can't
        process transactions, pay out funds, or reopen it. If payments are made to
        an account of an account holder with a **Closed** status,the payments will
        be directed to your liable account.
      operationId: post-closeAccountHolder
      x-groupName: Account holders
      x-sortIndex: 7
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-closeAccountHolder-basic'
            schema:
              $ref: '#/components/schemas/CloseAccountHolderRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloseAccountHolderResponse'
          description: OK - the request has succeeded.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloseAccountHolderResponse'
          description: Accepted - the request has been accepted for processing, but
            the processing has not been completed.
        '400':
          content:
            application/json:
              examples:
                generic-400:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic-403:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /createAccount:
    post:
      summary: Create a new account.
      description: Creates an account under an account holder. An account holder can
        have [multiple accounts](https://docs.adyen.com/platforms/account-holders-and-accounts#create-additional-accounts).
      operationId: post-createAccount
      x-groupName: Accounts
      x-sortIndex: 1
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-createAccount-basic'
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountResponse'
          description: OK - the request has succeeded.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountResponse'
          description: Accepted - the request has been accepted for processing, but
            the processing has not been completed.
        '400':
          content:
            application/json:
              examples:
                generic-400:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic-403:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /createAccountHolder:
    post:
      summary: Create a new account holder.
      description: Creates an account holder, which [represents the sub-merchant's
        entity](https://docs.adyen.com/platforms/account-structure#your-platform)
        in your platform. The details that you need to provide in the request depend
        on the sub-merchant's legal entity type. For more information, refer to [Account
        holder and accounts](https://docs.adyen.com/platforms/account-holders-and-accounts#legal-entity-types).
      operationId: post-createAccountHolder
      x-groupName: Account holders
      x-sortIndex: 1
      requestBody:
        content:
          application/json:
            examples:
              business:
                $ref: '#/components/examples/post-createAccountHolder-business'
            schema:
              $ref: '#/components/schemas/CreateAccountHolderRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountHolderResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic-403:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /deleteBankAccounts:
    post:
      summary: Delete bank accounts of an account holder.
      description: 'Deletes one or more bank accounts of an account holder. '
      operationId: post-deleteBankAccounts
      x-groupName: Verification
      x-sortIndex: 3
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-deleteBankAccounts-basic'
            schema:
              $ref: '#/components/schemas/DeleteBankAccountRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: OK - the request has succeeded.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Accepted - the request has been accepted for processing, but
            the processing has not been completed.
        '400':
          content:
            application/json:
              examples:
                generic-400:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic-403:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /deletePayoutMethods:
    post:
      summary: Delete payout methods of an account holder.
      description: Deletes one or more payout methods of an account holder.
      x-addedInVersion: 5
      operationId: post-deletePayoutMethods
      x-groupName: Verification
      x-sortIndex: 3
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-deletePayoutMethods-basic'
            schema:
              $ref: '#/components/schemas/DeletePayoutMethodRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: OK - the request has succeeded.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Accepted - the request has been accepted for processing, but
            the processing has not been completed.
        '400':
          content:
            application/json:
              examples:
                generic-400:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic-403:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /deleteShareholders:
    post:
      summary: Delete shareholders of an existing account holder.
      description: Deletes one or more shareholders from an account holder.
      operationId: post-deleteShareholders
      x-groupName: Verification
      x-sortIndex: 4
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-deleteShareholders-basic'
            schema:
              $ref: '#/components/schemas/DeleteShareholderRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: OK - the request has succeeded.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Accepted - the request has been accepted for processing, but
            the processing has not been completed.
        '400':
          content:
            application/json:
              examples:
                generic-400:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic-403:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /getAccountHolder:
    post:
      summary: Retrieve the details of an account holder.
      description: Retrieves the details of an account holder.
      operationId: post-getAccountHolder
      x-groupName: Account holders
      x-sortIndex: 2
      requestBody:
        content:
          application/json:
            examples:
              accountCode:
                $ref: '#/components/examples/post-getAccountHolder-accountCode'
              accountHolderCode:
                $ref: '#/components/examples/post-getAccountHolder-accountHolderCode'
            schema:
              $ref: '#/components/schemas/GetAccountHolderRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountHolderResponse'
          description: OK - the request has succeeded.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountHolderResponse'
          description: Accepted - the request has been accepted for processing, but
            the processing has not been completed.
        '400':
          content:
            application/json:
              examples:
                generic-400:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic-403:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /getTaxForm:
    post:
      summary: Request a tax form for an account holder.
      description: Generates a tax form for account holders operating in the US. For
        more information, refer to [Providing tax forms](https://docs.adyen.com/platforms/tax-forms).
      operationId: post-getTaxForm
      x-groupName: Account holders
      x-sortIndex: 8
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-getTaxForm-basic'
            schema:
              $ref: '#/components/schemas/GetTaxFormRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaxFormResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic-400:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic-403:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /getUploadedDocuments:
    post:
      summary: Retrieve the uploaded documents of an existing account holder.
      description: 'Retrieves documents that were previously uploaded for an account
        holder. Adyen uses the documents in the [KYC verification checks](https://docs.adyen.com/platforms/verification-checks).

        '
      operationId: post-getUploadedDocuments
      x-groupName: Verification
      x-sortIndex: 2
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-getUploadedDocuments-basic'
            schema:
              $ref: '#/components/schemas/GetUploadedDocumentsRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUploadedDocumentsResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic-400:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic-403:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /suspendAccountHolder:
    post:
      summary: Suspend an account holder.
      description: Changes the [status of an account holder](https://docs.adyen.com/platforms/account-holders-and-accounts#account-holder-statuses)
        to **Suspended**.
      operationId: post-suspendAccountHolder
      x-groupName: Account holders
      x-sortIndex: 5
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-suspendAccountHolder-basic'
            schema:
              $ref: '#/components/schemas/SuspendAccountHolderRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuspendAccountHolderResponse'
          description: OK - the request has succeeded.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuspendAccountHolderResponse'
          description: Accepted - the request has been accepted for processing, but
            the processing has not been completed.
        '400':
          content:
            application/json:
              examples:
                generic-400:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic-403:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /unSuspendAccountHolder:
    post:
      summary: Unsuspend an account holder.
      description: 'Changes the [status of an account holder](https://docs.adyen.com/platforms/account-holders-and-accounts#account-holder-statuses)
        from **Suspended** to **Inactive**. Account holders can have a **Suspended**
        status if you suspend them through the [`/suspendAccountHolder`](https://docs.adyen.com/api-explorer/#/Account/v5/post/suspendAccountHolder)
        endpoint or if a KYC deadline expires.


        You can only unsuspend account holders if they _do not_ have verification
        checks with a **FAILED** [`status`](https://docs.adyen.com/api-explorer/#/Account/latest/post/getAccountHolder__resParam_verification-accountHolder-checks-status).'
      operationId: post-unSuspendAccountHolder
      x-groupName: Account holders
      x-sortIndex: 6
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-unSuspendAccountHolder-basic'
            schema:
              $ref: '#/components/schemas/UnSuspendAccountHolderRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnSuspendAccountHolderResponse'
          description: OK - the request has succeeded.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnSuspendAccountHolderResponse'
          description: Accepted - the request has been accepted for processing, but
            the processing has not been completed.
        '400':
          content:
            application/json:
              examples:
                generic-400:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic-403:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /updateAccount:
    post:
      summary: Update an account.
      description: Updates the description or payout schedule of an account.
      operationId: post-updateAccount
      x-groupName: Accounts
      x-sortIndex: 2
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-updateAccount-basic'
            schema:
              $ref: '#/components/schemas/UpdateAccountRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountResponse'
          description: OK - the request has succeeded.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountResponse'
          description: Accepted - the request has been accepted for processing, but
            the processing has not been completed.
        '400':
          content:
            application/json:
              examples:
                generic-400:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic-403:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /updateAccountHolder:
    post:
      summary: Update an account holder.
      description: "Updates the `accountHolderDetails` and `processingTier` of an\
        \ account holder, and adds bank accounts and shareholders.\n\nWhen updating\
        \ `accountHolderDetails`, parameters that are not included in the request\
        \ are left unchanged except for the objects below.\n\n* `metadata`: Updating\
        \ the metadata replaces the entire object. This means that to update an existing\
        \ key-value pair, you must provide the changes along with other existing key-value\
        \ pairs.\n\nWhen updating any field in the following objects, you must submit\
        \ all the fields required for validation.\n\n * `address`\n\n* `fullPhoneNumber`\n\
        \n* `bankAccountDetails.BankAccountDetail`\n\n* `businessDetails.shareholders.ShareholderContact`\n\
        \n For example, to update the `address.postalCode`, you must also submit the\
        \ `address.country`, `.city`, `.street`, `.postalCode`, and possibly `.stateOrProvince`\
        \ so that the address can be validated.\n\nTo add a bank account or shareholder,\
        \ provide the bank account or shareholder details without a `bankAccountUUID`\
        \ or a `shareholderCode`.\n\n"
      operationId: post-updateAccountHolder
      x-groupName: Account holders
      x-sortIndex: 3
      requestBody:
        content:
          application/json:
            examples:
              general:
                $ref: '#/components/examples/post-updateAccountHolder-general'
              businessDetails:
                $ref: '#/components/examples/post-updateAccountHolder-businessDetails'
            schema:
              $ref: '#/components/schemas/UpdateAccountHolderRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountHolderResponse'
          description: OK - the request has succeeded.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountHolderResponse'
          description: Accepted - the request has been accepted for processing, but
            the processing has not been completed.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic-403:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /updateAccountHolderState:
    post:
      summary: Update the payout or processing state of an account holder.
      description: Disables or enables the processing or payout state of an account
        holder.
      operationId: post-updateAccountHolderState
      x-groupName: Account holders
      x-sortIndex: 4
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-updateAccountHolderState-basic'
            schema:
              $ref: '#/components/schemas/UpdateAccountHolderStateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountHolderStatusResponse'
          description: OK - the request has succeeded.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountHolderStatusResponse'
          description: Accepted - the request has been accepted for processing, but
            the processing has not been completed.
        '400':
          content:
            application/json:
              examples:
                generic-400:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic-403:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
  /uploadDocument:
    post:
      summary: Upload a document for an account holder.
      description: Uploads a document for an account holder. Adyen uses the documents
        in the [KYC verification checks](https://docs.adyen.com/platforms/verification-checks).
      operationId: post-uploadDocument
      x-groupName: Verification
      x-sortIndex: 1
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: '#/components/examples/post-uploadDocument-basic'
            schema:
              $ref: '#/components/schemas/UploadDocumentRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountHolderResponse'
          description: OK - the request has succeeded.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountHolderResponse'
          description: Accepted - the request has been accepted for processing, but
            the processing has not been completed.
        '400':
          content:
            application/json:
              examples:
                generic-400:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic-403:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Internal Server Error - the server could not process the request.
components:
  schemas:
    Account:
      properties:
        accountCode:
          description: The code of the account.
          type: string
        bankAccountUUID:
          x-addedInVersion: 5
          description: The bankAccountUUID of the bank account held by the account
            holder to couple the account with. Scheduled payouts in currencies matching
            the currency of this bank account will be sent to this bank account. Payouts
            in different currencies will be sent to a matching bank account of the
            account holder.
          type: string
        beneficiaryAccount:
          description: The beneficiary of the account.
          type: string
        beneficiaryMerchantReference:
          description: The reason that a beneficiary has been set up for this account.
            This may have been supplied during the setup of a beneficiary at the discretion
            of the executing user.
          type: string
        description:
          x-addedInVersion: 4
          description: A description of the account.
          type: string
        metadata:
          x-addedInVersion: 5
          additionalProperties:
            type: string
          description: 'A set of key and value pairs for general use by the merchant.

            The keys do not have specific names and may be used for storing miscellaneous
            data as desired.

            > Note that during an update of metadata, the omission of existing key-value
            pairs will result in the deletion of those key-value pairs.'
          type: object
        payoutMethodCode:
          x-addedInVersion: 5
          description: The payout method code held by the account holder to couple
            the account with. Scheduled card payouts will be sent using this payout
            method code.
          type: string
        payoutSchedule:
          description: The account's payout schedule.
          $ref: '#/components/schemas/PayoutScheduleResponse'
        payoutSpeed:
          x-addedInVersion: 5
          description: 'Speed with which payouts for this account are processed. Permitted
            values: `STANDARD`, `SAME_DAY`.'
          enum:
          - INSTANT
          - SAME_DAY
          - STANDARD
          type: string
        status:
          x-addedInVersion: 4
          description: 'The status of the account. Possible values: `Active`, `Inactive`,
            `Suspended`, `Closed`.'
          type: string
    AccountEvent:
      properties:
        event:
          description: 'The event.

            >Permitted values: `InactivateAccount`, `RefundNotPaidOutTransfers`.

            For more information, refer to [Verification checks](https://docs.adyen.com/platforms/verification-checks).'
          enum:
          - InactivateAccount
          - RefundNotPaidOutTransfers
          type: string
        executionDate:
          description: The date on which the event will take place.
          format: date-time
          type: string
        reason:
          description: The reason why this event has been created.
          type: string
      required:
      - event
      - executionDate
      - reason
    AccountHolderDetails:
      properties:
        address:
          description: The address of the account holder.
          $ref: '#/components/schemas/ViasAddress'
        bankAccountDetails:
          description: Array of bank accounts associated with the account holder.
            For details about the required `BankAccountDetail` fields, refer to [Bank
            account check](https://docs.adyen.com/platforms/verification-checks/bank-account-check).
          items:
            $ref: '#/components/schemas/BankAccountDetail'
          type: array
        bankAggregatorDataReference:
          x-addedInVersion: 5
          description: The opaque reference value returned by the Adyen API during
            bank account login.
          type: string
        businessDetails:
          description: 'Details about the business or nonprofit account holder.

            Required when creating an account holder with `legalEntity` **Business**
            or **NonProfit**.'
          $ref: '#/components/schemas/BusinessDetails'
        email:
          description: The email address of the account holder.
          type: string
        fullPhoneNumber:
          description: 'The phone number of the account holder provided as a single
            string. It will be handled as a landline phone.

            **Examples:** "0031 6 11 22 33 44", "+316/1122-3344", "(0031) 611223344"'
          type: string
        individualDetails:
          description: 'Details about the individual account holder.

            Required when creating an account holder with `legalEntity` **Individual**.

            '
          $ref: '#/components/schemas/IndividualDetails'
        merchantCategoryCode:
          description: 'The Merchant Category Code of the account holder.

            > If not specified in the request, this will be derived from the platform
            account (which is configured by Adyen).'
          type: string
        metadata:
          additionalProperties:
            type: string
          description: 'A set of key and value pairs for general use by the account
            holder or merchant.

            The keys do not have specific names and may be used for storing miscellaneous
            data as desired.

            > The values being stored have a maximum length of eighty (80) characters
            and will be truncated if necessary.

            > Note that during an update of metadata, the omission of existing key-value
            pairs will result in the deletion of those key-value pairs.'
          type: object
        payoutMethods:
          x-addedInVersion: 5
          description: Array of tokenized card details associated with the account
            holder. For details about how you can use the tokens to pay out, refer
            to [Pay out to cards](https://docs.adyen.com/platforms/payout-to-cards).
          items:
            $ref: '#/components/schemas/PayoutMethod'
          type: array
        storeDetails:
          x-addedInVersion: 5
          description: Array of stores associated with the account holder. Required
            when onboarding account holders that have an Adyen [point of sale](https://docs.adyen.com/platforms/platforms-for-pos).
          items:
            $ref: '#/components/schemas/StoreDetail'
          type: array
        webAddress:
          description: The URL of the website of the account holder.
          type: string
      required:
      - fullPhoneNumber
      - email
      - webAddress
    AccountHolderStatus:
      properties:
        events:
          description: A list of events scheduled for the account holder.
          items:
            $ref: '#/components/schemas/AccountEvent'
          type: array
        payoutState:
          description: The payout state of the account holder.
          $ref: '#/components/schemas/AccountPayoutState'
        processingState:
          description: The processing state of the account holder.
          $ref: '#/components/schemas/AccountProcessingState'
        status:
          description: 'The status of the account holder.

            >Permitted values: `Active`, `Inactive`, `Suspended`, `Closed`.'
          enum:
          - Active
          - Closed
          - Inactive
          - Suspended
          type: string
        statusReason:
          description: The reason why the status was assigned to the account holder.
          type: string
      required:
      - status
    AccountPayoutState:
      properties:
        allowPayout:
          description: Indicates whether payouts are allowed. This field is the overarching
            payout status, and is the aggregate of multiple conditions (e.g., KYC
            status, disabled flag, etc). If this field is false, no payouts will be
            permitted for any of the account holder's accounts. If this field is true,
            payouts will be permitted for any of the account holder's accounts.
          type: boolean
        disableReason:
          description: The reason why payouts (to all of the account holder's accounts)
            have been disabled (by the platform). If the `disabled` field is true,
            this field can be used to explain why.
          type: string
        disabled:
          description: Indicates whether payouts have been disabled (by the platform)
            for all of the account holder's accounts. A platform may enable and disable
            this field at their discretion. If this field is true, `allowPayout` will
            be false and no payouts will be permitted for any of the account holder's
            accounts. If this field is false, `allowPayout` may or may not be enabled,
            depending on other factors.
          type: boolean
        notAllowedReason:
          x-addedInVersion: 5
          description: The reason why payouts (to all of the account holder's accounts)
            have been disabled (by Adyen). If payouts have been disabled by Adyen,
            this field will explain why. If this field is blank, payouts have not
            been disabled by Adyen.
          type: string
        payoutLimit:
          description: The maximum amount that payouts are limited to. Only applies
            if payouts are allowed but limited.
          $ref: '#/components/schemas/Amount'
        tierNumber:
          x-addedInVersion: 3
          description: The payout tier that the account holder occupies.
          format: int32
          type: integer
    AccountProcessingState:
      properties:
        disableReason:
          description: The reason why processing has been disabled.
          type: string
        disabled:
          description: Indicates whether the processing of payments is allowed.
          type: boolean
        processedFrom:
          description: The lower bound of the processing tier (i.e., an account holder
            must have processed at least this amount of money in order to be placed
            into this tier).
          $ref: '#/components/schemas/Amount'
        processedTo:
          description: The upper bound of the processing tier (i.e., an account holder
            must have processed less than this amount of money in order to be placed
            into this tier).
          $ref: '#/components/schemas/Amount'
        tierNumber:
          x-addedInVersion: 3
          description: The processing tier that the account holder occupies.
          format: int32
          type: integer
    Amount:
      properties:
        currency:
          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).
          maxLength: 3
          minLength: 3
          type: string
        value:
          description: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
          format: int64
          type: integer
      required:
      - value
      - currency
    BankAccountDetail:
      properties:
        accountNumber:
          description: 'The bank account number (without separators).

            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        accountType:
          description: 'The type of bank account.

            Only applicable to bank accounts held in the USA.

            The permitted values are: `checking`, `savings`.


            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        bankAccountName:
          description: The name of the bank account.
          type: string
        bankAccountReference:
          x-addedInVersion: 5
          description: Merchant reference to the bank account.
          type: string
        bankAccountUUID:
          description: 'The unique identifier (UUID) of the Bank Account.

            >If, during an account holder create or update request, this field is
            left blank (but other fields provided), a new Bank Account will be created
            with a procedurally-generated UUID.


            >If, during an account holder create request, a UUID is provided, the
            creation of the Bank Account will fail while the creation of the account
            holder will continue.


            >If, during an account holder update request, a UUID that is not correlated
            with an existing Bank Account is provided, the update of the account holder
            will fail.


            >If, during an account holder update request, a UUID that is correlated
            with an existing Bank Account is provided, the existing Bank Account will
            be updated.

            '
          type: string
        bankBicSwift:
          description: 'The bank identifier code.

            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        bankCity:
          description: 'The city in which the bank branch is located.


            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        bankCode:
          description: 'The bank code of the banking institution with which the bank
            account is registered.


            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        bankName:
          description: 'The name of the banking institution with which the bank account
            is held.


            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        branchCode:
          description: 'The branch code of the branch under which the bank account
            is registered. The value to be specified in this parameter depends on
            the country of the bank account:

            * United States - Routing number

            * United Kingdom - Sort code

            * Germany - Bankleitzahl

            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        checkCode:
          description: 'The check code of the bank account.


            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        countryCode:
          description: 'The two-letter country code in which the bank account is registered.

            >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. ''NL'').


            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        currencyCode:
          description: 'The currency in which the bank account deals.

            >The permitted currency codes are defined in ISO-4217 (e.g. ''EUR'').


            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        iban:
          description: 'The international bank account number.

            >The IBAN standard is defined in ISO-13616.


            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        ownerCity:
          description: 'The city of residence of the bank account owner.

            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        ownerCountryCode:
          description: 'The country code of the country of residence of the bank account
            owner.

            >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. ''NL'').


            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        ownerDateOfBirth:
          description: 'The date of birth of the bank account owner.

            '
          type: string
        ownerHouseNumberOrName:
          description: 'The house name or number of the residence of the bank account
            owner.

            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        ownerName:
          description: 'The name of the bank account owner.

            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        ownerNationality:
          description: 'The country code of the country of nationality of the bank
            account owner.

            >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. ''NL'').


            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        ownerPostalCode:
          description: 'The postal code of the residence of the bank account owner.

            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        ownerState:
          description: 'The state of residence of the bank account owner.

            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        ownerStreet:
          description: 'The street name of the residence of the bank account owner.

            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        primaryAccount:
          description: If set to true, the bank account is a primary account.
          type: boolean
        taxId:
          description: 'The tax ID number.


            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
        urlForVerification:
          description: 'The URL to be used for bank account verification.

            This may be generated on bank account creation.


            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on field requirements.'
          type: string
    BusinessDetails:
      properties:
        doingBusinessAs:
          description: The registered name of the company (if it differs from the
            legal name of the company).
          type: string
        legalBusinessName:
          description: The legal name of the company.
          type: string
        registrationNumber:
          x-addedInVersion: 4
          description: The registration number of the company.
          type: string
        shareholders:
          description: Array containing information about individuals associated with
            the account holder either through ownership or control. For details about
            how you can identify them, refer to [Identity check](https://docs.adyen.com/platforms/verification-checks/identity-check).
          items:
            $ref: '#/components/schemas/ShareholderContact'
          type: array
        signatories:
          description: 'Signatories associated with the company.

            Each array entry should represent one signatory.'
          items:
            $ref: '#/components/schemas/SignatoryContact'
          type: array
        taxId:
          description: The tax ID of the company.
          type: string
    CloseAccountHolderRequest:
      properties:
        accountHolderCode:
          description: The code of the Account Holder to be closed.
          type: string
      required:
      - accountHolderCode
    CloseAccountHolderResponse:
      properties:
        accountHolderStatus:
          description: The new status of the Account Holder.
          $ref: '#/components/schemas/AccountHolderStatus'
        invalidFields:
          x-addedInVersion: 5
          description: Contains field validation errors that would prevent requests
            from being processed.
          items:
            $ref: '#/components/schemas/ErrorFieldType'
          type: array
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
      required:
      - accountHolderStatus
    CloseAccountRequest:
      properties:
        accountCode:
          description: The code of account to be closed.
          type: string
      required:
      - accountCode
    CloseAccountResponse:
      properties:
        accountCode:
          x-addedInVersion: 5
          description: The account code of the account that is closed.
          type: string
        invalidFields:
          x-addedInVersion: 5
          description: Contains field validation errors that would prevent requests
            from being processed.
          items:
            $ref: '#/components/schemas/ErrorFieldType'
          type: array
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        status:
          x-addedInVersion: 2
          description: 'The new status of the account.

            >Permitted values: `Active`, `Inactive`, `Suspended`, `Closed`.'
          enum:
          - Active
          - Closed
          - Inactive
          - Suspended
          type: string
      required:
      - status
    CreateAccountHolderRequest:
      properties:
        accountHolderCode:
          description: 'Your unique identifier for the prospective account holder.

            The length must be between three (3) and fifty (50) characters long. Only
            letters, digits, and hyphens (-) are allowed.'
          type: string
        accountHolderDetails:
          description: The details of the prospective account holder.
          $ref: '#/components/schemas/AccountHolderDetails'
        createDefaultAccount:
          description: 'If set to **true**, an account with the default options is
            automatically created for the account holder.

            By default, this field is set to **true**.'
          type: boolean
        description:
          x-addedInVersion: 4
          description: A description of the prospective account holder, maximum 256
            characters. You can use alphanumeric characters (A-Z, a-z, 0-9), white
            spaces, and underscores `_`.
          type: string
        legalEntity:
          description: 'The legal entity type of the account holder. This determines
            the information that should be provided in the request.


            Possible values: **Business**, **Individual**, or **NonProfit**.


            * If set to **Business** or **NonProfit**, then `accountHolderDetails.businessDetails`
            must be provided, with at least one entry in the `accountHolderDetails.businessDetails.shareholders`
            list.


            * If set to **Individual**, then `accountHolderDetails.individualDetails`
            must be provided.'
          enum:
          - Business
          - Individual
          - NonProfit
          - Partnership
          - PublicCompany
          type: string
        primaryCurrency:
          x-addedInVersion: 4
          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes),
            with which the prospective account holder primarily deals.
          type: string
        processingTier:
          x-addedInVersion: 3
          description: The starting [processing tier](https://docs.adyen.com/platforms/onboarding-and-verification/precheck-kyc-information)
            for the prospective account holder.
          format: int32
          type: integer
      required:
      - accountHolderCode
      - legalEntity
      - accountHolderDetails
    CreateAccountHolderResponse:
      properties:
        accountCode:
          description: The code of a new account created for the account holder.
          type: string
        accountHolderCode:
          description: The code of the new account holder.
          type: string
        accountHolderDetails:
          description: Details of the new account holder.
          $ref: '#/components/schemas/AccountHolderDetails'
        accountHolderStatus:
          x-addedInVersion: 2
          description: The status of the new account holder.
          $ref: '#/components/schemas/AccountHolderStatus'
        description:
          x-addedInVersion: 4
          description: The description of the new account holder.
          type: string
        invalidFields:
          x-addedInVersion: 5
          description: A list of fields that caused the `/createAccountHolder` request
            to fail.
          items:
            $ref: '#/components/schemas/ErrorFieldType'
          type: array
        legalEntity:
          x-addedInVersion: 4
          description: The type of legal entity of the new account holder.
          enum:
          - Business
          - Individual
          - NonProfit
          - Partnership
          - PublicCompany
          type: string
        primaryCurrency:
          x-addedInVersion: 5
          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes),
            with which the prospective account holder primarily deals.
          type: string
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        verification:
          x-addedInVersion: 2
          description: The details of KYC Verification of the account holder.
          $ref: '#/components/schemas/KYCVerificationResult2'
      required:
      - accountHolderCode
      - accountHolderStatus
      - accountHolderDetails
      - verification
      - legalEntity
    CreateAccountRequest:
      properties:
        accountHolderCode:
          description: The code of Account Holder under which to create the account.
          type: string
        bankAccountUUID:
          x-addedInVersion: 5
          description: The bankAccountUUID of the bank account held by the account
            holder to couple the account with. Scheduled payouts in currencies matching
            the currency of this bank account will be sent to this bank account. Payouts
            in different currencies will be sent to a matching bank account of the
            account holder.
          type: string
        description:
          x-addedInVersion: 4
          description: A description of the account, maximum 256 characters. You can
            use alphanumeric characters (A-Z, a-z, 0-9), white spaces, and underscores
            `_`.
          type: string
        metadata:
          x-addedInVersion: 5
          additionalProperties:
            type: string
          description: 'A set of key and value pairs for general use by the merchant.

            The keys do not have specific names and may be used for storing miscellaneous
            data as desired.

            > Note that during an update of metadata, the omission of existing key-value
            pairs will result in the deletion of those key-value pairs.'
          type: object
        payoutMethodCode:
          x-addedInVersion: 5
          description: The payout method code held by the account holder to couple
            the account with. Scheduled card payouts will be sent using this payout
            method code.
          type: string
        payoutSchedule:
          description: 'The payout schedule of the prospective account.

            >Permitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.'
          enum:
          - BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT
          - BIWEEKLY_ON_1ST_AND_15TH_AT_NOON
          - DAILY
          - DAILY_6PM
          - DAILY_AU
          - DAILY_EU
          - DAILY_SG
          - DAILY_US
          - DEFAULT
          - EVERY_6_HOURS_FROM_MIDNIGHT
          - HOLD
          - MONTHLY
          - WEEKLY
          - WEEKLY_ON_TUE_FRI_MIDNIGHT
          - YEARLY
          type: string
        payoutScheduleReason:
          description: 'The reason for the payout schedule choice.

            >Required if the payoutSchedule is `HOLD`.'
          type: string
        payoutSpeed:
          x-addedInVersion: 5
          default: STANDARD
          description: 'Speed with which payouts for this account are processed. Permitted
            values: `STANDARD`, `SAME_DAY`.'
          enum:
          - INSTANT
          - SAME_DAY
          - STANDARD
          type: string
      required:
      - accountHolderCode
    CreateAccountResponse:
      properties:
        accountCode:
          description: The code of the new account.
          type: string
        accountHolderCode:
          description: The code of the account holder.
          type: string
        bankAccountUUID:
          x-addedInVersion: 5
          description: The bankAccountUUID of the bank account held by the account
            holder to couple the account with. Scheduled payouts in currencies matching
            the currency of this bank account will be sent to this bank account. Payouts
            in different currencies will be sent to a matching bank account of the
            account holder.
          type: string
        description:
          x-addedInVersion: 4
          description: The description of the account.
          type: string
        invalidFields:
          x-addedInVersion: 5
          description: A list of fields that caused the `/createAccount` request to
            fail.
          items:
            $ref: '#/components/schemas/ErrorFieldType'
          type: array
        metadata:
          x-addedInVersion: 5
          additionalProperties:
            type: string
          description: A set of key and value pairs containing metadata.
          type: object
        payoutMethodCode:
          x-addedInVersion: 5
          description: The payout method code held by the account holder to couple
            the account with. Scheduled card payouts will be sent using this payout
            method code.
          type: string
        payoutSchedule:
          description: The payout schedule of the account.
          $ref: '#/components/schemas/PayoutScheduleResponse'
        payoutSpeed:
          x-addedInVersion: 5
          description: 'Speed with which payouts for this account are processed. Permitted
            values: `STANDARD`, `SAME_DAY`.'
          enum:
          - INSTANT
          - SAME_DAY
          - STANDARD
          type: string
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        status:
          x-addedInVersion: 2
          description: 'The status of the account.

            >Permitted values: `Active`.'
          enum:
          - Active
          - Closed
          - Inactive
          - Suspended
          type: string
      required:
      - accountHolderCode
      - accountCode
      - status
    DeleteBankAccountRequest:
      properties:
        accountHolderCode:
          description: The code of the Account Holder from which to delete the Bank
            Account(s).
          type: string
        bankAccountUUIDs:
          description: The code(s) of the Bank Accounts to be deleted.
          items:
            type: string
          type: array
      required:
      - accountHolderCode
      - bankAccountUUIDs
    DeletePayoutMethodRequest:
      properties:
        accountHolderCode:
          description: The code of the account holder, from which to delete the payout
            methods.
          type: string
        payoutMethodCodes:
          description: The codes of the payout methods to be deleted.
          items:
            type: string
          type: array
      required:
      - accountHolderCode
      - payoutMethodCodes
    DeleteShareholderRequest:
      properties:
        accountHolderCode:
          description: The code of the Account Holder from which to delete the Shareholders.
          type: string
        shareholderCodes:
          description: The code(s) of the Shareholders to be deleted.
          items:
            type: string
          type: array
      required:
      - accountHolderCode
      - shareholderCodes
    DocumentDetail:
      properties:
        accountHolderCode:
          x-addedInVersion: 2
          description: The code of account holder, to which the document applies.
          type: string
        bankAccountUUID:
          x-addedInVersion: 2
          description: 'The unique ID of the Bank Account to which the document applies.

            >Required if the `documentType` is **BANK_STATEMENT**, where a document
            is being submitted in order to verify a bank account.


            >Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)
            section for details on when a document should be submitted in order to
            verify a bank account.'
          type: string
        description:
          description: Description of the document.
          type: string
        documentType:
          description: 'The type of the document. Refer to [Verification checks](https://docs.adyen.com/platforms/verification-checks)
            for details on when each document type should be submitted and for the
            accepted file formats.


            Permitted values:

            * **BANK_STATEMENT**: A file containing a bank statement or other document
            proving ownership of a specific bank account.

            * **COMPANY_REGISTRATION_SCREENING** (Supported from v5 and later): A
            file containing a company registration document.

            * **PASSPORT**: A file containing the identity page(s) of a passport.

            * **ID_CARD_FRONT**: A file containing only the front of the ID card.
            In order for a document to be usable, both the **ID_CARD_FRONT** and **ID_CARD_BACK**
            must be submitted.

            * **ID_CARD_BACK**: A file containing only the back of the ID card. In
            order for a document to be usable, both the **ID_CARD_FRONT** and **ID_CARD_BACK**
            must be submitted.

            * **DRIVING_LICENCE_FRONT**: A file containing only the front of the driving
            licence. In order for a document to be usable, both the **DRIVING_LICENCE_FRONT**
            and **DRIVING_LICENCE_BACK** must be submitted.

            * **DRIVING_LICENCE_BACK**: A file containing only the back of the driving
            licence. In order for a document to be usable, both the **DRIVING_LICENCE_FRONT**
            and **DRIVING_LICENCE_FRONT** must be submitted.

            '
          enum:
          - BANK_STATEMENT
          - BSN
          - COMPANY_REGISTRATION_SCREENING
          - CONSTITUTIONAL_DOCUMENT
          - DRIVING_LICENCE
          - DRIVING_LICENCE_BACK
          - DRIVING_LICENCE_FRONT
          - ID_CARD
          - ID_CARD_BACK
          - ID_CARD_FRONT
          - PASSPORT
          - SSN
          - SUPPORTING_DOCUMENTS
          type: string
        filename:
          description: Filename of the document.
          type: string
        shareholderCode:
          x-addedInVersion: 2
          description: "The code of the shareholder, to which the document applies.\
            \ Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\
            \ for details on when a document should be submitted in order to verify\
            \ a shareholder.>Required if the account holder referred to by the `accountHolderCode`\
            \ has a `legalEntity` of type **Business** and the `documentType` is either\
            \ **PASSPORT**, **ID_CARD_FRONT**, **ID_CARD_BACK**, **DRIVING_LICENCE_FRONT**,\
            \ or **DRIVING_LICENCE_BACK**. \n>Refer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification)\
            \ section for details on when a document should be submitted in order\
            \ to verify a shareholder."
          type: string
      required:
      - accountHolderCode
      - documentType
      - filename
    ErrorFieldType:
      properties:
        errorCode:
          description: The validation error code.
          format: int32
          type: integer
        errorDescription:
          description: A description of the validation error.
          type: string
        fieldType:
          description: The type of error field.
          $ref: '#/components/schemas/FieldType'
    FieldType:
      properties:
        field:
          description: The full name of the property.
          type: string
        fieldName:
          description: The type of the field.
          enum:
          - accountCode
          - accountHolderCode
          - accountHolderDetails
          - accountNumber
          - accountStateType
          - accountStatus
          - accountType
          - address
          - bankAccount
          - bankAccountCode
          - bankAccountName
          - bankAccountUUID
          - bankBicSwift
          - bankCity
          - bankCode
          - bankName
          - bankStatement
          - branchCode
          - businessContact
          - cardToken
          - checkCode
          - city
          - companyRegistration
          - constitutionalDocument
          - country
          - countryCode
          - currency
          - currencyCode
          - dateOfBirth
          - description
          - destinationAccountCode
          - document
          - documentExpirationDate
          - documentIssuerCountry
          - documentIssuerState
          - documentName
          - documentNumber
          - documentType
          - doingBusinessAs
          - drivingLicence
          - drivingLicenceBack
          - drivingLicense
          - email
          - firstName
          - formType
          - fullPhoneNumber
          - gender
          - hopWebserviceUser
          - houseNumberOrName
          - iban
          - idCard
          - idCardBack
          - idCardFront
          - idNumber
          - identityDocument
          - individualDetails
          - jobTitle
          - lastName
          - legalArrangement
          - legalArrangementCode
          - legalArrangementEntity
          - legalArrangementEntityCode
          - legalArrangementLegalForm
          - legalArrangementMember
          - legalArrangementName
          - legalArrangementReference
          - legalArrangementRegistrationNumber
          - legalArrangementTaxNumber
          - legalArrangementType
          - legalBusinessName
          - legalEntity
          - legalEntityType
          - merchantAccount
          - merchantCategoryCode
          - merchantReference
          - microDeposit
          - name
          - nationality
          - originalReference
          - ownerCity
          - ownerCountryCode
          - ownerHouseNumberOrName
          - ownerName
          - ownerPostalCode
          - ownerState
          - ownerStreet
          - passport
          - passportNumber
          - payoutMethodCode
          - personalData
          - phoneCountryCode
          - phoneNumber
          - postalCode
          - primaryCurrency
          - reason
          - registrationNumber
          - returnUrl
          - schedule
          - shareholder
          - shareholderCode
          - shareholderType
          - shopperInteraction
          - signatory
          - socialSecurityNumber
          - sourceAccountCode
          - splitAccount
          - splitCurrency
          - splitValue
          - splits
          - stateOrProvince
          - status
          - stockExchange
          - stockNumber
          - stockTicker
          - store
          - storeDetail
          - storeName
          - storeReference
          - street
          - taxId
          - tier
          - tierNumber
          - transferCode
          - unknown
          - value
          - verificationType
          - virtualAccount
          - visaNumber
          - webAddress
          - year
          type: string
        shareholderCode:
          description: The code of the shareholder that the field belongs to. If empty,
            the field belongs to an account holder.
          type: string
    GenericResponse:
      properties:
        invalidFields:
          x-addedInVersion: 5
          description: Contains field validation errors that would prevent requests
            from being processed.
          items:
            $ref: '#/components/schemas/ErrorFieldType'
          type: array
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
    GetAccountHolderRequest:
      properties:
        accountCode:
          description: 'The code of the account of which to retrieve the details.

            > Required if no `accountHolderCode` is provided.'
          type: string
        accountHolderCode:
          description: 'The code of the account holder of which to retrieve the details.

            > Required if no `accountCode` is provided.'
          type: string
        showDetails:
          x-addedInVersion: 4
          description: True if the request should return the account holder details
          type: boolean
    GetAccountHolderResponse:
      properties:
        accountHolderCode:
          description: The code of the account holder.
          type: string
        accountHolderDetails:
          description: Details of the account holder.
          $ref: '#/components/schemas/AccountHolderDetails'
        accountHolderStatus:
          x-addedInVersion: 2
          description: The status of the account holder.
          $ref: '#/components/schemas/AccountHolderStatus'
        accounts:
          description: A list of the accounts under the account holder.
          items:
            $ref: '#/components/schemas/Account'
          type: array
        description:
          x-addedInVersion: 4
          description: The description of the account holder.
          type: string
        invalidFields:
          x-addedInVersion: 5
          description: Contains field validation errors that would prevent requests
            from being processed.
          items:
            $ref: '#/components/schemas/ErrorFieldType'
          type: array
        legalEntity:
          description: The legal entity of the account holder.
          enum:
          - Business
          - Individual
          - NonProfit
          - Partnership
          - PublicCompany
          type: string
        primaryCurrency:
          x-addedInVersion: 4
          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes),
            with which the prospective account holder primarily deals.
          type: string
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        systemUpToDateTime:
          x-addedInVersion: 5
          description: The time that shows how up to date is the information in the
            response.
          format: date-time
          type: string
        verification:
          x-addedInVersion: 2
          description: The details of KYC Verification of the account holder.
          $ref: '#/components/schemas/KYCVerificationResult2'
      required:
      - accountHolderCode
      - legalEntity
      - accountHolderStatus
      - accountHolderDetails
      - verification
    GetAccountHolderStatusResponse:
      properties:
        accountHolderCode:
          description: The code of the Account Holder.
          type: string
        accountHolderStatus:
          x-addedInVersion: 2
          description: The status of the Account Holder.
          $ref: '#/components/schemas/AccountHolderStatus'
        invalidFields:
          x-addedInVersion: 5
          description: Contains field validation errors that would prevent requests
            from being processed.
          items:
            $ref: '#/components/schemas/ErrorFieldType'
          type: array
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
      required:
      - accountHolderCode
      - accountHolderStatus
    GetTaxFormRequest:
      properties:
        accountHolderCode:
          description: The account holder code you provided when you created the account
            holder.
          type: string
        formType:
          description: Type of the requested tax form. For example, 1099-K.
          type: string
        year:
          description: Applicable tax year in the YYYY format.
          format: int32
          type: integer
      required:
      - accountHolderCode
      - formType
      - year
    GetTaxFormResponse:
      properties:
        content:
          description: The content of the tax form in the Base64 binary format.
          format: byte
          type: string
        contentType:
          description: The content type of the tax form.
          type: string
        invalidFields:
          x-addedInVersion: 5
          description: Contains field validation errors that would prevent requests
            from being processed.
          items:
            $ref: '#/components/schemas/ErrorFieldType'
          type: array
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
    GetUploadedDocumentsRequest:
      properties:
        accountHolderCode:
          description: The code of the Account Holder for which to retrieve the documents.
          type: string
        bankAccountUUID:
          x-addedInVersion: 2
          description: The code of the Bank Account for which to retrieve the documents.
          type: string
        shareholderCode:
          description: The code of the Shareholder for which to retrieve the documents.
          type: string
      required:
      - accountHolderCode
    GetUploadedDocumentsResponse:
      properties:
        documentDetails:
          description: A list of the documents and their details.
          items:
            $ref: '#/components/schemas/DocumentDetail'
          type: array
        invalidFields:
          x-addedInVersion: 5
          description: Contains field validation errors that would prevent requests
            from being processed.
          items:
            $ref: '#/components/schemas/ErrorFieldType'
          type: array
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
    IndividualDetails:
      properties:
        name:
          description: 'The name of the individual.

            >Make sure your account holder registers using the name shown on their
            Photo ID.'
          $ref: '#/components/schemas/ViasName'
        personalData:
          description: Personal information of the individual.
          $ref: '#/components/schemas/ViasPersonalData'
    KYCBankAccountCheckResult:
      properties:
        bankAccountUUID:
          description: The unique ID of the bank account to which the check applies.
          type: string
        checks:
          description: A list of the checks and their statuses.
          items:
            $ref: '#/components/schemas/KYCCheckStatusData'
          type: array
    KYCCardCheckResult:
      properties:
        checks:
          description: A list of the checks and their statuses.
          items:
            $ref: '#/components/schemas/KYCCheckStatusData'
          type: array
        payoutMethodCode:
          description: The unique ID of the card to which the check applies.
          type: string
    KYCCheckResult2:
      properties:
        checks:
          description: A list of the checks and their statuses.
          items:
            $ref: '#/components/schemas/KYCCheckStatusData'
          type: array
    KYCCheckStatusData:
      properties:
        requiredFields:
          description: A list of the fields required for execution of the check.
          items:
            type: string
          type: array
        status:
          description: 'The status of the check.

            >Permitted Values: `DATA_PROVIDED`, `PASSED`, `PENDING`, `AWAITING_DATA`,
            `RETRY_LIMIT_REACHED`, `INVALID_DATA`, `FAILED`.'
          enum:
          - AWAITING_DATA
          - DATA_PROVIDED
          - FAILED
          - INVALID_DATA
          - PASSED
          - PENDING
          - PENDING_REVIEW
          - RETRY_LIMIT_REACHED
          - UNCHECKED
          type: string
        summary:
          description: A summary of the execution of the check.
          $ref: '#/components/schemas/KYCCheckSummary'
        type:
          description: 'The type of check.

            >Permitted Values: `COMPANY_VERIFICATION`, `IDENTITY_VERIFICATION`, `PASSPORT_VERIFICATION`,
            `BANK_ACCOUNT_VERIFICATION`, `NONPROFIT_VERIFICATION`, `CARD_VERIFICATION`.'
          enum:
          - BANK_ACCOUNT_VERIFICATION
          - CARD_VERIFICATION
          - COMPANY_VERIFICATION
          - CRIMINAL_BACKGROUND_EXTENSIVE_VERIFICATION
          - CRIMINAL_BACKGROUND_MEDIUM_VERIFICATION
          - IDENTITY_VERIFICATION
          - LEGAL_ARRANGEMENT_VERIFICATION
          - NONPROFIT_VERIFICATION
          - PASSPORT_VERIFICATION
          - PAYOUT_METHOD_VERIFICATION
          - PCI_SELF_ASSESSMENT_PRESENCE_VERIFICATION
          - PCI_VERIFICATION
          - POLITICALLY_EXPOSED_IDENTIFICATION_VERIFICATION
          - POLITICALLY_EXPOSED_VERIFICATION
          type: string
      required:
      - type
      - status
    KYCCheckSummary:
      properties:
        kycCheckCode:
          x-addedInVersion: 5
          description: The code of the check.
          format: int32
          type: integer
        kycCheckDescription:
          x-addedInVersion: 5
          description: A description of the check.
          type: string
    KYCShareholderCheckResult:
      properties:
        checks:
          description: A list of the checks and their statuses.
          items:
            $ref: '#/components/schemas/KYCCheckStatusData'
          type: array
        shareholderCode:
          description: The code of the shareholder to which the check applies.
          type: string
    KYCVerificationResult2:
      properties:
        accountHolder:
          description: The result(s) of the checks on the account holder.
          $ref: '#/components/schemas/KYCCheckResult2'
        bankAccounts:
          description: The result(s) of the checks on the bank account(s).
          items:
            $ref: '#/components/schemas/KYCBankAccountCheckResult'
          type: array
        cards:
          x-addedInVersion: 5
          description: The result(s) of the checks on the card(s).
          items:
            $ref: '#/components/schemas/KYCCardCheckResult'
          type: array
        shareholders:
          description: The result(s) of the checks on the shareholder(s).
          items:
            $ref: '#/components/schemas/KYCShareholderCheckResult'
          type: array
    PayoutMethod:
      properties:
        merchantAccount:
          type: string
        payoutMethodCode:
          type: string
        payoutMethodType:
          enum:
          - CardToken
          type: string
        recurringDetailReference:
          type: string
        shopperReference:
          type: string
      required:
      - merchantAccount
      - shopperReference
      - recurringDetailReference
    PayoutScheduleResponse:
      properties:
        nextScheduledPayout:
          description: The date of the next scheduled payout.
          format: date-time
          type: string
        schedule:
          description: 'The payout schedule of the account.

            >Permitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.'
          enum:
          - BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT
          - BIWEEKLY_ON_1ST_AND_15TH_AT_NOON
          - DAILY
          - DAILY_6PM
          - DAILY_AU
          - DAILY_EU
          - DAILY_SG
          - DAILY_US
          - DEFAULT
          - EVERY_6_HOURS_FROM_MIDNIGHT
          - HOLD
          - MONTHLY
          - WEEKLY
          - WEEKLY_ON_TUE_FRI_MIDNIGHT
          - YEARLY
          type: string
      required:
      - schedule
    PerformVerificationRequest:
      properties:
        accountHolderCode:
          description: The code of the account holder to verify.
          type: string
        accountStateType:
          description: 'The state required for the account holder.

            > Permitted values: `Processing`, `Payout`.'
          enum:
          - LimitedPayout
          - LimitedProcessing
          - LimitlessPayout
          - LimitlessProcessing
          - Payout
          - Processing
          type: string
        tier:
          description: The tier required for the account holder.
          format: int32
          type: integer
      required:
      - accountHolderCode
      - accountStateType
      - tier
    PersonalDocumentData:
      properties:
        expirationDate:
          description: "The expiry date of the document, \n in ISO-8601 YYYY-MM-DD\
            \ format. For example, **2000-01-31**."
          type: string
        issuerCountry:
          description: "The country where the document was issued, in the two-character\
            \ \n[ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
            \ format. For example, **NL**."
          maxLength: 2
          minLength: 2
          type: string
        issuerState:
          description: The state where the document was issued (if applicable).
          type: string
        number:
          description: The number in the document.
          type: string
        type:
          description: 'The type of the document. Possible values: **ID**, **DRIVINGLICENSE**,
            **PASSPORT**, **SOCIALSECURITY**, **VISA**.


            To delete an existing entry for a document `type`, send only the `type`
            field in your request. '
          enum:
          - DRIVINGLICENSE
          - ID
          - PASSPORT
          - SOCIALSECURITY
          - VISA
          type: string
      required:
      - type
    ServiceError:
      properties:
        errorCode:
          description: The error code mapped to the error message.
          type: string
        errorType:
          description: The category of the error.
          type: string
        message:
          description: A short explanation of the issue.
          type: string
        pspReference:
          description: The PSP reference of the payment.
          type: string
        status:
          description: The HTTP response status.
          format: int32
          type: integer
    ShareholderContact:
      properties:
        address:
          description: The address of the person.
          $ref: '#/components/schemas/ViasAddress'
        email:
          description: The e-mail address of the person.
          type: string
        fullPhoneNumber:
          description: 'The phone number of the person provided as a single string.  It
            will be handled as a landline phone.

            Examples: "0031 6 11 22 33 44", "+316/1122-3344", "(0031) 611223344"'
          type: string
        jobTitle:
          description: 'Job title of the person. Required when the `shareholderType`
            is **Controller**.


            Example values: **Chief Executive Officer**, **Chief Financial Officer**,
            **Chief Operating Officer**, **President**, **Vice President**, **Executive
            President**, **Managing Member**, **Partner**, **Treasurer**, **Director**,
            or **Other**.'
          type: string
        name:
          description: The name of the person.
          $ref: '#/components/schemas/ViasName'
        personalData:
          description: Contains information about the person.
          $ref: '#/components/schemas/ViasPersonalData'
        phoneNumber:
          description: The phone number of the person.
          $ref: '#/components/schemas/ViasPhoneNumber'
        shareholderCode:
          description: 'The unique identifier (UUID) of the shareholder entry.

            >**If, during an Account Holder create or update request, this field is
            left blank (but other fields provided), a new Shareholder will be created
            with a procedurally-generated UUID.**


            >**If, during an Account Holder create request, a UUID is provided, the
            creation of the Shareholder will fail while the creation of the Account
            Holder will continue.**


            >**If, during an Account Holder update request, a UUID that is not correlated
            with an existing Shareholder is provided, the update of the Shareholder
            will fail.**


            >**If, during an Account Holder update request, a UUID that is correlated
            with an existing Shareholder is provided, the existing Shareholder will
            be updated.**

            '
          type: string
        shareholderReference:
          x-addedInVersion: 5
          description: Your reference for the shareholder entry.
          type: string
        shareholderType:
          description: "Specifies how the person is associated with the account holder.\
            \ \n\nPossible values: \n\n* **Owner**: Individuals who directly or indirectly\
            \ own 25% or more of a company.\n\n* **Controller**: Individuals who are\
            \ members of senior management staff responsible for managing a company\
            \ or organization."
          enum:
          - Controller
          - Owner
          - Signatory
          type: string
        webAddress:
          description: The URL of the person's website.
          type: string
    SignatoryContact:
      properties:
        address:
          description: The address of the person.
          $ref: '#/components/schemas/ViasAddress'
        email:
          description: The e-mail address of the person.
          type: string
        fullPhoneNumber:
          description: 'The phone number of the person provided as a single string.  It
            will be handled as a landline phone.

            Examples: "0031 6 11 22 33 44", "+316/1122-3344", "(0031) 611223344"'
          type: string
        jobTitle:
          description: 'Job title of the signatory.


            Example values: **Chief Executive Officer**, **Chief Financial Officer**,
            **Chief Operating Officer**, **President**, **Vice President**, **Executive
            President**, **Managing Member**, **Partner**, **Treasurer**, **Director**,
            or **Other**.'
          type: string
        name:
          description: The name of the person.
          $ref: '#/components/schemas/ViasName'
        personalData:
          description: Contains information about the person.
          $ref: '#/components/schemas/ViasPersonalData'
        phoneNumber:
          description: The phone number of the person.
          $ref: '#/components/schemas/ViasPhoneNumber'
        signatoryCode:
          description: 'The unique identifier (UUID) of the Signatory.

            >**If, during an Account Holder create or update request, this field is
            left blank (but other fields provided), a new Signatory will be created
            with a procedurally-generated UUID.**


            >**If, during an Account Holder create request, a UUID is provided, the
            creation of the Signatory will fail while the creation of the Account
            Holder will continue.**


            >**If, during an Account Holder update request, a UUID that is not correlated
            with an existing Signatory is provided, the update of the Signatory will
            fail.**


            >**If, during an Account Holder update request, a UUID that is correlated
            with an existing Signatory is provided, the existing Signatory will be
            updated.**

            '
          type: string
        signatoryReference:
          description: Your reference for the Signatory.
          type: string
        webAddress:
          description: The URL of the person's website.
          type: string
    StoreDetail:
      properties:
        address:
          description: The address of the physical store where the account holder
            will process payments from.
          $ref: '#/components/schemas/ViasAddress'
        fullPhoneNumber:
          description: 'The phone number of the store provided as a single string.  It
            will be handled as a landline phone.


            Examples: "0031 6 11 22 33 44", "+316/1122-3344", "(0031) 611223344"'
          type: string
        merchantAccount:
          description: The merchant account to which the store belongs.
          type: string
        merchantCategoryCode:
          description: The merchant category code (MCC) that classifies the business
            of the account holder.
          type: string
        phoneNumber:
          description: The phone number of the store.
          readOnly: true
          $ref: '#/components/schemas/ViasPhoneNumber'
        shopperInteraction:
          x-addedInVersion: 5
          description: 'The sales channel. Possible values: **Ecommerce**, **POS**.'
          enum:
          - Ecommerce
          - POS
          type: string
        splitConfigurationUUID:
          x-addedInVersion: 5
          description: The unique reference for the split configuration, returned
            when you configure splits in your Customer Area. When this is provided,
            the `virtualAccount` is also required. Adyen uses the configuration and
            the `virtualAccount` to split funds between accounts in your platform.
          type: string
        status:
          description: 'The status of the store. Possible values: **Pending**, **Active**,
            **Inactive**, **InactiveWithModifications**, **Closed**.'
          enum:
          - Active
          - Closed
          - Inactive
          - InactiveWithModifications
          - Pending
          readOnly: true
          type: string
        store:
          description: Adyen-generated unique alphanumeric identifier (UUID) for the
            store, returned in the response when you create a store. Required when
            updating an existing store in an `/updateAccountHolder` request.
          type: string
        storeName:
          description: 'The name of the account holder''s store, between  3 to 22
            characters in length.

            This value will be shown in shopper statements.'
          type: string
        storeReference:
          description: 'Your unique identifier for the store, between 3 to 128 characters
            in length.

            This value will be shown as the store description in your Customer Area.'
          type: string
        virtualAccount:
          x-addedInVersion: 5
          description: The account holder's `accountCode` where the split amount will
            be sent. Required when you provide the `splitConfigurationUUID`.
          type: string
        webAddress:
          x-addedInVersion: 5
          description: URL of the ecommerce store.
          type: string
      required:
      - storeReference
      - merchantCategoryCode
      - address
      - merchantAccount
    SuspendAccountHolderRequest:
      properties:
        accountHolderCode:
          description: The code of the account holder to be suspended.
          type: string
      required:
      - accountHolderCode
    SuspendAccountHolderResponse:
      properties:
        accountHolderStatus:
          description: The new status of the Account Holder.
          $ref: '#/components/schemas/AccountHolderStatus'
        invalidFields:
          x-addedInVersion: 5
          description: Contains field validation errors that would prevent requests
            from being processed.
          items:
            $ref: '#/components/schemas/ErrorFieldType'
          type: array
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
      required:
      - accountHolderStatus
    UnSuspendAccountHolderRequest:
      properties:
        accountHolderCode:
          description: The code of the account holder to be reinstated.
          type: string
      required:
      - accountHolderCode
    UnSuspendAccountHolderResponse:
      properties:
        accountHolderStatus:
          description: The new status of the Account Holder.
          $ref: '#/components/schemas/AccountHolderStatus'
        invalidFields:
          x-addedInVersion: 5
          description: Contains field validation errors that would prevent requests
            from being processed.
          items:
            $ref: '#/components/schemas/ErrorFieldType'
          type: array
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
      required:
      - accountHolderStatus
    UpdateAccountHolderRequest:
      properties:
        accountHolderCode:
          description: The code of the Account Holder to be updated.
          type: string
        accountHolderDetails:
          description: 'The details to which the Account Holder should be updated.


            Required if a processingTier is not provided.'
          $ref: '#/components/schemas/AccountHolderDetails'
        description:
          x-addedInVersion: 4
          description: A description of the account holder, maximum 256 characters.
            You can use alphanumeric characters (A-Z, a-z, 0-9), white spaces, and
            underscores `_`.
          type: string
        legalEntity:
          x-addedInVersion: 5
          description: 'The legal entity type of the account holder. This determines
            the information that should be provided in the request.


            Possible values: **Business**, **Individual**, or **NonProfit**.


            * If set to **Business** or **NonProfit**, then `accountHolderDetails.businessDetails`
            must be provided, with at least one entry in the `accountHolderDetails.businessDetails.shareholders`
            list.


            * If set to **Individual**, then `accountHolderDetails.individualDetails`
            must be provided.'
          enum:
          - Business
          - Individual
          - NonProfit
          - Partnership
          - PublicCompany
          type: string
        primaryCurrency:
          x-addedInVersion: 4
          description: The primary three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes),
            to which the account holder should be updated.
          type: string
        processingTier:
          x-addedInVersion: 3
          description: 'The processing tier to which the Account Holder should be
            updated.

            >The processing tier can not be lowered through this request.


            >Required if accountHolderDetails are not provided.'
          format: int32
          type: integer
      required:
      - accountHolderCode
    UpdateAccountHolderResponse:
      properties:
        accountHolderCode:
          description: The code of the account holder.
          type: string
        accountHolderDetails:
          description: Details of the account holder.
          $ref: '#/components/schemas/AccountHolderDetails'
        accountHolderStatus:
          x-addedInVersion: 2
          description: The new status of the account holder.
          $ref: '#/components/schemas/AccountHolderStatus'
        description:
          x-addedInVersion: 4
          description: The description of the account holder.
          type: string
        invalidFields:
          x-addedInVersion: 5
          description: in case the account holder has not been updated, contains account
            holder fields, that did not pass the validation.
          items:
            $ref: '#/components/schemas/ErrorFieldType'
          type: array
        legalEntity:
          x-addedInVersion: 4
          description: The legal entity of the account holder.
          enum:
          - Business
          - Individual
          - NonProfit
          - Partnership
          - PublicCompany
          type: string
        primaryCurrency:
          x-addedInVersion: 5
          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes),
            with which the prospective account holder primarily deals.
          type: string
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        verification:
          x-addedInVersion: 2
          description: The details of KYC Verification of the account holder.
          $ref: '#/components/schemas/KYCVerificationResult2'
      required:
      - accountHolderStatus
      - verification
      - legalEntity
    UpdateAccountHolderStateRequest:
      properties:
        accountHolderCode:
          description: The code of the Account Holder on which to update the state.
          type: string
        disable:
          description: If true, disable the requested state.  If false, enable the
            requested state.
          type: boolean
        reason:
          description: 'The reason that the state is being updated.

            >Required if the state is being disabled.'
          type: string
        stateType:
          description: 'The state to be updated.

            >Permitted values are: `Processing`, `Payout`'
          enum:
          - LimitedPayout
          - LimitedProcessing
          - LimitlessPayout
          - LimitlessProcessing
          - Payout
          - Processing
          type: string
      required:
      - accountHolderCode
      - stateType
      - disable
    UpdateAccountRequest:
      properties:
        accountCode:
          description: The code of the account to update.
          type: string
        bankAccountUUID:
          x-addedInVersion: 5
          description: The bankAccountUUID of the bank account held by the account
            holder to couple the account with. Scheduled payouts in currencies matching
            the currency of this bank account will be sent to this bank account. Payouts
            in different currencies will be sent to a matching bank account of the
            account holder.
          type: string
        description:
          x-addedInVersion: 4
          description: A description of the account, maximum 256 characters.You can
            use alphanumeric characters (A-Z, a-z, 0-9), white spaces, and underscores
            `_`.
          type: string
        metadata:
          x-addedInVersion: 5
          additionalProperties:
            type: string
          description: 'A set of key and value pairs for general use by the merchant.

            The keys do not have specific names and may be used for storing miscellaneous
            data as desired.

            > Note that during an update of metadata, the omission of existing key-value
            pairs will result in the deletion of those key-value pairs.'
          type: object
        payoutMethodCode:
          x-addedInVersion: 5
          description: The payout method code held by the account holder to couple
            the account with. Scheduled card payouts will be sent using this payout
            method code.
          type: string
        payoutSchedule:
          description: The details of the payout schedule, to which the account should
            be updated.
          $ref: '#/components/schemas/UpdatePayoutScheduleRequest'
        payoutSpeed:
          x-addedInVersion: 5
          description: 'Speed with which payouts for this account are processed. Permitted
            values: `STANDARD`, `SAME_DAY`.'
          enum:
          - INSTANT
          - SAME_DAY
          - STANDARD
          type: string
      required:
      - accountCode
    UpdateAccountResponse:
      properties:
        accountCode:
          description: The code of the account.
          type: string
        bankAccountUUID:
          x-addedInVersion: 5
          description: The bankAccountUUID of the bank account held by the account
            holder to couple the account with. Scheduled payouts in currencies matching
            the currency of this bank account will be sent to this bank account. Payouts
            in different currencies will be sent to a matching bank account of the
            account holder.
          type: string
        description:
          x-addedInVersion: 4
          description: The description of the account.
          type: string
        invalidFields:
          x-addedInVersion: 5
          description: A list of fields that caused the `/updateAccount` request to
            fail.
          items:
            $ref: '#/components/schemas/ErrorFieldType'
          type: array
        metadata:
          x-addedInVersion: 5
          additionalProperties:
            type: string
          description: A set of key and value pairs containing metadata.
          type: object
        payoutMethodCode:
          x-addedInVersion: 5
          description: The payout method code held by the account holder to couple
            the account with. Scheduled card payouts will be sent using this payout
            method code.
          type: string
        payoutSchedule:
          description: The payout schedule of the account.
          $ref: '#/components/schemas/PayoutScheduleResponse'
        payoutSpeed:
          x-addedInVersion: 5
          description: 'Speed with which payouts for this account are processed. Permitted
            values: `STANDARD`, `SAME_DAY`.'
          enum:
          - INSTANT
          - SAME_DAY
          - STANDARD
          type: string
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
      required:
      - accountCode
    UpdatePayoutScheduleRequest:
      properties:
        action:
          description: 'Direction on how to handle any payouts that have already been
            scheduled.

            Permitted values:

            * `CLOSE` will close the existing batch of payouts.

            * `UPDATE` will reschedule the existing batch to the new schedule.

            * `NOTHING` (**default**) will allow the payout to proceed.'
          enum:
          - CLOSE
          - NOTHING
          - UPDATE
          type: string
        reason:
          description: 'The reason for the payout schedule update.

            > This field is required when the `schedule` parameter is set to `HOLD`.'
          type: string
        schedule:
          description: 'The payout schedule to which the account is to be updated.

            Permitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.

            `HOLD` will prevent scheduled payouts from happening but will still allow
            manual payouts to occur.'
          enum:
          - BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT
          - BIWEEKLY_ON_1ST_AND_15TH_AT_NOON
          - DAILY
          - DAILY_6PM
          - DAILY_AU
          - DAILY_EU
          - DAILY_SG
          - DAILY_US
          - DEFAULT
          - EVERY_6_HOURS_FROM_MIDNIGHT
          - HOLD
          - MONTHLY
          - WEEKLY
          - WEEKLY_ON_TUE_FRI_MIDNIGHT
          - YEARLY
          type: string
      required:
      - schedule
    UploadDocumentRequest:
      properties:
        documentContent:
          description: 'The content of the document, in Base64-encoded string format.


            To learn about document requirements, refer to [Verification checks](https://docs.adyen.com/platforms/verification-checks).'
          format: byte
          type: string
        documentDetail:
          description: Details of the document being submitted.
          $ref: '#/components/schemas/DocumentDetail'
      required:
      - documentDetail
      - documentContent
    ViasAddress:
      properties:
        city:
          description: 'The name of the city.

            >Required if either `houseNumberOrName`, `street`, `postalCode`, or `stateOrProvince`
            are provided.'
          type: string
        country:
          description: 'The two-character country code of the address. The permitted
            country codes are defined in ISO-3166-1 alpha-2 (e.g. ''NL'').

            > If you don''t know the country or are not collecting the country from
            the shopper, provide `country` as `ZZ`.'
          type: string
        houseNumberOrName:
          description: The number or name of the house.
          type: string
        postalCode:
          description: 'The postal code.

            >A maximum of five (5) digits for an address in the USA, or a maximum
            of ten (10) characters for an address in all other countries.

            >Required if either `houseNumberOrName`, `street`, `city`, or `stateOrProvince`
            are provided.'
          type: string
        stateOrProvince:
          description: 'The abbreviation of the state or province.

            >Two (2) characters for an address in the USA or Canada, or a maximum
            of three (3) characters for an address in all other countries.

            >Required for an address in the USA or Canada if either `houseNumberOrName`,
            `street`, `city`, or `postalCode` are provided.'
          type: string
        street:
          description: 'The name of the street.

            >The house number should not be included in this field; it should be separately
            provided via `houseNumberOrName`.

            >Required if either `houseNumberOrName`, `city`, `postalCode`, or `stateOrProvince`
            are provided.'
          type: string
      required:
      - country
    ViasName:
      properties:
        firstName:
          description: The first name.
          type: string
        gender:
          description: 'The gender.

            >The following values are permitted: `MALE`, `FEMALE`, `UNKNOWN`.'
          enum:
          - MALE
          - FEMALE
          - UNKNOWN
          maxLength: 1
          type: string
        infix:
          description: 'The name''s infix, if applicable.

            >A maximum length of twenty (20) characters is imposed.'
          type: string
        lastName:
          description: The last name.
          type: string
      required:
      - firstName
      - lastName
    ViasPersonalData:
      properties:
        dateOfBirth:
          description: The person's date of birth, in ISO-8601 YYYY-MM-DD format.
            For example, **2000-01-31**.
          type: string
        documentData:
          x-addedInVersion: 3
          description: Array that contains information about the person's identification
            document. You can submit only one entry per document type.
          items:
            $ref: '#/components/schemas/PersonalDocumentData'
          type: array
        nationality:
          description: 'The nationality of the person represented by a two-character
            country code,  in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            format. For example, **NL**.

            '
          maxLength: 2
          minLength: 2
          type: string
    ViasPhoneNumber:
      properties:
        phoneCountryCode:
          description: 'The two-character country code of the phone number.

            >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. ''NL'').'
          type: string
        phoneNumber:
          description: 'The phone number.

            >The inclusion of the phone number country code is not necessary.'
          type: string
        phoneType:
          description: 'The type of the phone number.

            >The following values are permitted: `Landline`, `Mobile`, `SIP`, `Fax`.'
          enum:
          - Fax
          - Landline
          - Mobile
          - SIP
          type: string
      required:
      - phoneCountryCode
      - phoneNumber
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
    BasicAuth:
      scheme: basic
      type: http
  examples:
    generic-400:
      summary: Response code 400. Bad Request.
      value:
        status: 400
        errorCode: '702'
        message: 'Unexpected input: I'
        errorType: validation
    generic-403:
      summary: Response code 401. Forbidden.
      value:
        status: 403
        errorCode: '10_003'
        message: Failed to authorize user
        errorType: security
    post-checkAccountHolder-basic:
      summary: Check the account holder.
      value:
        accountHolderCode: CODE_OF_ACCOUNT_HOLDER
        accountStateType: Processing
        tier: '2'
    post-closeAccount-closeAccount:
      summary: Close an account
      value:
        accountCode: CODE_OF_ACCOUNT
    post-closeAccountHolder-basic:
      summary: Close an account holder
      value:
        accountHolderCode: CODE_OF_ACCOUNT_HOLDER
    post-createAccount-basic:
      summary: Add an account to an account holder
      value:
        accountHolderCode: CODE_OF_ACCOUNT_HOLDER
    post-createAccountHolder-business:
      summary: Create a business account holder
      value:
        accountHolderCode: YOUR_UNIQUE_ACCOUNT_HOLDER_CODE
        accountHolderDetails:
          address:
            country: US
          businessDetails:
            doingBusinessAs: Real Good Restaurant
            legalBusinessName: Real Good Restaurant Inc.
            shareholders:
            - name:
                firstName: John
                gender: MALE
                lastName: Carpenter
              address:
                country: NL
              email: testshareholder@email.com
          email: test@email.com
          webAddress: https://www.your-website.com
        legalEntity: Business
    post-deleteBankAccounts-basic:
      summary: Delete bank accounts
      value:
        accountHolderCode: CODE_OF_ACCOUNT_HOLDER
        bankAccountUUIDs:
        - eeb6ed22-3bae-483c-83b9-bc2097a75d40
    post-deletePayoutMethods-basic:
      summary: Delete a payout method
      value:
        accountHolderCode: CODE_OF_ACCOUNT_HOLDER
        payoutMethodCodes:
        - 34b6ed22-3bae-483c-83b9-bc2097a75d40
    post-deleteShareholders-basic:
      summary: Delete shareholders
      value:
        accountHolderCode: CODE_OF_ACCOUNT_HOLDER
        shareholderCodes:
        - 9188218c-576e-4cbe-8e86-72722f453920
    post-getAccountHolder-accountCode:
      summary: Get an account holder
      value:
        accountCode: CODE_OF_ACCOUNT
    post-getAccountHolder-accountHolderCode:
      summary: Get an account holder for the account
      value:
        accountHolderCode: CODE_OF_ACCOUNT_HOLDER
    post-getTaxForm-basic:
      summary: Get a tax form
      value:
        accountHolderCode: CODE_OF_ACCOUNT_HOLDER
        formType: 1099-K
        year: 2020
    post-getUploadedDocuments-basic:
      summary: Get uploaded documents
      value:
        accountHolderCode: CODE_OF_ACCOUNT_HOLDER
        bankAccountUUID: EXAMPLE_UUID
    post-suspendAccountHolder-basic:
      summary: Suspend an account holder
      value:
        accountHolderCode: CODE_OF_ACCOUNT_HOLDER
    post-unSuspendAccountHolder-basic:
      summary: Unsuspend an account holder
      value:
        accountHolderCode: CODE_OF_ACCOUNT_HOLDER
    post-updateAccount-basic:
      summary: Set a payout schedule
      value:
        accountCode: CODE_OF_ACCOUNT
        payoutSchedule:
          schedule: WEEKLY
          action: CLOSE
    post-updateAccountHolder-businessDetails:
      summary: Update business details
      value:
        accountHolderCode: CODE_OF_ACCOUNT_HOLDER
        accountHolderDetails:
          businessDetails:
            shareholders:
            - address:
                city: Amsterdam
                country: NL
                houseNumberOrName: '1'
                postalCode: 1111AA
                stateOrProvince: NH
                street: Awesome St
              email: testshareholder2@email.com
              name:
                firstName: Alice
                gender: FEMALE
                lastName: Fields
            taxId: BV123456789
          email: test@email.com
          fullPhoneNumber: '+31612345678'
          webAddress: http://www.accountholderwebsite.com
    post-updateAccountHolder-general:
      summary: Update account holder details
      value:
        accountHolderCode: CODE_OF_ACCOUNT_HOLDER
        accountHolderDetails:
          address:
            city: NY
            country: US
            postalCode: '12345'
            stateOrProvince: NH
            street: Teststreet 1
            houseNumberOrName: '100'
          email: test@adyen.com
          individualDetails:
            name:
              firstName: Simon
              gender: MALE
              lastName: Hopper
            personalData:
              dateOfBirth: '1970-01-01'
              documentData:
              - number: '1234567890'
                type: ID
              nationality: NL
          merchantCategoryCode: '7999'
          fullPhoneNumber: '+31612345678'
          webAddress: http://www.accountholderwebsite.com
    post-updateAccountHolderState-basic:
      summary: Update account holder state
      value:
        accountHolderCode: CODE_OF_ACCOUNT_HOLDER
        disable: true
        reason: test reason payout
        stateType: Payout
    post-uploadDocument-basic:
      summary: Upload a document
      value:
        documentContent: dGVzdCBkb2N1bWVudCBjb250ZW50
        documentDetail:
          accountHolderCode: CODE_OF_ACCOUNT_HOLDER
          documentType: PASSPORT
          filename: passport.png
          description: test passport description
