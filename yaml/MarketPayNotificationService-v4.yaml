openapi: 3.0.0
info:
  version: '4'
  title: Adyen MarketPay Notifications
  description: |-
    The Notification API sends notifications to the endpoints specified in a given subscription. Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.

    For further information on MarketPay notifications, please visit the [MarketPay documentation](https://docs.adyen.com/marketpay).
  termsOfService: 'https://www.adyen.com/legal/terms-and-conditions'
  contact:
    name: Adyen Support
    url: 'https://support.adyen.com/'
    email: support@adyen.com
x-groups:
  - Account holders
  - Accounts
  - Fund management
  - Other
x-isWebhook: 'true'
x-staticResponse: response.json
paths:
  /ACCOUNT_CLOSED:
    post:
      summary: Triggered upon the closure of an account.
      description: This notification is sent when an account has been closed.
      x-groupName: Accounts
      x-sortIndex: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCloseNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_CREATED:
    post:
      summary: Triggered upon the creation of an account.
      description: This notification is sent when an account has been created.
      x-groupName: Accounts
      x-sortIndex: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_HOLDER_CREATED:
    post:
      summary: Triggered upon the creation of an account holder.
      description: This notification is sent when an account holder has been created.
      x-groupName: Account holders
      x-sortIndex: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountHolderCreateNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_HOLDER_PAYOUT:
    post:
      summary: Triggered upon a payout to an account holder.
      description: This notification is sent when a payout request to an account holder has been processed and the payout has been scheduled.
      x-groupName: Fund management
      x-sortIndex: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountHolderPayoutNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_HOLDER_STATUS_CHANGE:
    post:
      summary: Triggered upon the status change of an account holder.
      description: This notification is sent when the status of an account holder has been changed.
      x-groupName: Account holders
      x-sortIndex: 4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountHolderStatusChangeNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_HOLDER_STORE_STATUS_CHANGE:
    post:
      summary: Triggered upon the status change of a store tied to an account holder.
      description: This notification is sent when the status of a store tied to an account holder has been changed.
      x-groupName: Account holders
      x-sortIndex: 4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountHolderStoreStatusChangeNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_HOLDER_UPCOMING_DEADLINE:
    post:
      summary: Triggered upon an upcoming deadline.
      description: 'This notification is sent when an Account Holder has a deadline, to fulfill the requirements of a specific event, coming up.'
      x-groupName: Account holders
      x-sortIndex: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountHolderUpcomingDeadlineNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_HOLDER_UPDATED:
    post:
      summary: Triggered upon the update of an account holder.
      description: This notification is sent when an account holder has been updated.
      x-groupName: Account holders
      x-sortIndex: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountHolderUpdateNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_HOLDER_VERIFICATION:
    post:
      summary: Triggered upon the receipt of KYC Verification results.
      description: This notification is sent when KYC Verification results are made available.
      x-groupName: Account holders
      x-sortIndex: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountHolderVerificationNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_UPDATED:
    post:
      summary: Triggered upon the update of an account.
      description: This notification is sent when an account has been updated.
      x-groupName: Accounts
      x-sortIndex: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /BENEFICIARY_SETUP:
    post:
      summary: Triggered upon the setup of a beneficiary.
      description: This notification is sent when a benefactor/beneficiary relationship between accounts has been set up.
      x-groupName: Fund management
      x-sortIndex: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeneficiarySetupNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /COMPENSATE_NEGATIVE_BALANCE:
    post:
      summary: Triggered upon the compensation of negative account balances.
      description: This notification is sent when funds have been transferred from the Marketplace's liable account to an overdrawn account in order to compensate for the overdraft.
      x-groupName: Fund management
      x-sortIndex: 5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompensateNegativeBalanceNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /DIRECT_DEBIT_INITIATED:
    post:
      summary: Triggered when an automated direct debit is initiated.
      description: This notification is sent when an automated direct debit is initiated from the Adyen platform.
      x-groupName: Fund management
      x-sortIndex: 7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectDebitInitiatedNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /PAYMENT_FAILURE:
    post:
      summary: Triggered upon an account payment failure.
      description: 'This notification is sent when a payment to an account has failed. In these cases, the funds which were meant for the account are redirected to the Marketplace''s liable account.'
      x-groupName: Other
      x-sortIndex: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentFailureNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /REFUND_FUNDS_TRANSFER:
    post:
      summary: Triggered upon the transfer refund of funds between accounts.
      description: This notification is sent when the refund of funds from an account have been transferred to another account.
      x-groupName: Fund management
      x-sortIndex: 6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundFundsTransferNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /REPORT_AVAILABLE:
    post:
      summary: Triggered when a report is made available.
      description: This notification is sent when a report has been made available.
      x-groupName: Other
      x-sortIndex: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportAvailableNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /SCHEDULED_REFUNDS:
    post:
      summary: Triggered upon the scheduling of refunds requested by a 'Refund Transfers Not Paid Out' call.
      description: This notification is sent when a 'Refund Transfers Not Paid Out' call has been processed and the associated refunds have been scheduled.
      x-groupName: Fund management
      x-sortIndex: 4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledRefundsNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /TRANSFER_FUNDS:
    post:
      summary: Triggered upon the transfer of funds between accounts.
      description: This notification is sent when the funds from an account have been transferred to another account.
      x-groupName: Fund management
      x-sortIndex: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferFundsNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
components:
  schemas:
    AccountCloseNotification:
      properties:
        content:
          description: The details of the Account update.
          $ref: '#/components/schemas/CloseAccountResponse'
        eventDate:
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: 'Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.'
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification originates.
          type: string
      required:
        - executingUserKey
        - pspReference
        - eventType
        - live
        - eventDate
        - content
    AccountCreateNotification:
      properties:
        content:
          description: The details of the account creation.
          $ref: '#/components/schemas/CreateAccountResponse'
        eventDate:
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: 'Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.'
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification originates.
          type: string
      required:
        - executingUserKey
        - pspReference
        - eventType
        - live
        - eventDate
        - content
    AccountEvent:
      properties:
        event:
          description: |-
            The event.
            >Permitted values: `InactivateAccount`, `RefundNotPaidOutTransfers`.
            For more information, refer to [Verification checks](https://docs.adyen.com/marketpay/onboarding-and-verification/verification-checks).
          enum:
            - InactivateAccount
            - RefundNotPaidOutTransfers
          type: string
        executionDate:
          description: The date on which the event will take place.
          format: date-time
          type: string
        reason:
          description: The reason why this event has been created.
          type: string
      required:
        - event
        - executionDate
        - reason
    AccountHolderCreateNotification:
      properties:
        content:
          description: The details of the account holder creation.
          $ref: '#/components/schemas/CreateAccountHolderResponse'
        eventDate:
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: 'Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.'
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification originates.
          type: string
      required:
        - executingUserKey
        - pspReference
        - eventType
        - live
        - eventDate
        - content
    AccountHolderDetails:
      properties:
        address:
          description: The address of the account holder.
          $ref: '#/components/schemas/ViasAddress'
        bankAccountDetails:
          description: |-
            Each of the bank accounts associated with the account holder.
            > Each array entry should represent one bank account.
            > For comprehensive detail regarding the required `BankAccountDetail` fields, please refer to the [KYC Verification documentation](https://docs.adyen.com/marketpay/onboarding-and-verification/verification-checks).
          items:
            $ref: '#/components/schemas/BankAccountDetail'
          type: array
        businessDetails:
          description: |-
            Details applicable to `Business` legal entities.
            Populated only if the account holder's legal entity is of type `Business`.
            > Required when being used in a `/createAccountHolder` request in which the legal entity is `Business`.
          $ref: '#/components/schemas/BusinessDetails'
        email:
          description: The email address of the account holder.
          type: string
        fullPhoneNumber:
          description: |-
            The phone number of the account holder provided as a single string. It will be handled as a landline phone.
            **Examples:** "0031 6 11 22 33 44", "+316/1122-3344", "(0031) 611223344"
          type: string
        individualDetails:
          description: |-
            Details applicable to `Individual` legal entities.
            Populated only if the account holder's legal entity is of type `Individual`.
            > Required when being used in a `/createAccountHolder` request in which the legal entity is `Individual`.
          $ref: '#/components/schemas/IndividualDetails'
        merchantCategoryCode:
          description: |-
            The Merchant Category Code of the account holder.
            > If not specified in the request, this will be derived from the platform account (which is configured by Adyen).
          type: string
        metadata:
          description: |-
            A set of key and value pairs for general use by the account holder or merchant.
            The keys do not have specific names and may be used for storing miscellaneous data as desired.
            > The values being stored have a maximum length of eighty (80) characters and will be truncated if necessary.
            > Note that during an update of metadata, the omission of existing key-value pairs will result in the deletion of those key-value pairs.
          type: object
        webAddress:
          description: The URL of the website of the account holder.
          type: string
      required:
        - fullPhoneNumber
        - email
        - webAddress
    AccountHolderPayoutNotification:
      properties:
        content:
          description: Details of the payout to the Account Holder.
          $ref: '#/components/schemas/AccountHolderPayoutNotificationContent'
        eventDate:
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: 'Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.'
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification originates.
          type: string
      required:
        - executingUserKey
        - pspReference
        - eventType
        - live
        - eventDate
        - content
    AccountHolderPayoutNotificationContent:
      properties:
        accountCode:
          description: The code of the account from which the payout was made.
          type: string
        accountHolderCode:
          description: The code of the Account Holder to which the payout was made.
          type: string
        amount:
          description: The payout amount.
          $ref: '#/components/schemas/Amount'
        amounts:
          description: The payout amounts (per currency).
          items:
            $ref: '#/components/schemas/Amount'
          type: array
        bankAccountDetail:
          description: Details of the Bank Account to which the payout was made.
          $ref: '#/components/schemas/BankAccountDetail'
        description:
          description: A description of the payout.
          type: string
        merchantReference:
          description: The merchant reference.
          type: string
        status:
          description: The payout status.
          $ref: '#/components/schemas/OperationStatus'
      required:
        - accountHolderCode
        - accountCode
    AccountHolderStatus:
      properties:
        events:
          description: A list of events scheduled for the account holder.
          items:
            $ref: '#/components/schemas/AccountEvent'
          type: array
        payoutState:
          description: The payout state of the account holder.
          $ref: '#/components/schemas/AccountPayoutState'
        processingState:
          description: The processing state of the account holder.
          $ref: '#/components/schemas/AccountProcessingState'
        status:
          description: |-
            The status of the account holder.
            >Permitted values: `Active`, `Inactive`, `Suspended`, `Closed`.
          enum:
            - Active
            - Closed
            - Inactive
            - Suspended
          type: string
        statusReason:
          description: The reason why the status was assigned to the account holder.
          type: string
      required:
        - status
        - statusReason
        - processingState
        - payoutState
        - events
    AccountHolderStatusChangeNotification:
      properties:
        content:
          description: The details of the Account Holder status change.
          $ref: '#/components/schemas/AccountHolderStatusChangeNotificationContent'
        eventDate:
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: 'Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.'
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification originates.
          type: string
      required:
        - executingUserKey
        - pspReference
        - eventType
        - live
        - eventDate
    AccountHolderStatusChangeNotificationContent:
      properties:
        accountHolderCode:
          description: The code of the account holder.
          type: string
        newStatus:
          description: The new status of the account holder.
          $ref: '#/components/schemas/AccountHolderStatus'
        oldStatus:
          description: The former status of the account holder.
          $ref: '#/components/schemas/AccountHolderStatus'
        reason:
          description: The reason for the status change.
          type: string
      required:
        - accountHolderCode
        - oldStatus
        - newStatus
        - reason
    AccountHolderStoreStatusChangeNotification:
      properties:
        content:
          description: The details of the Account Holder Store status change.
          $ref: '#/components/schemas/AccountHolderStoreStatusChangeNotificationContent'
        eventDate:
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: 'Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.'
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification originates.
          type: string
      required:
        - executingUserKey
        - pspReference
        - eventType
        - live
        - eventDate
    AccountHolderStoreStatusChangeNotificationContent: {}
    AccountHolderUpcomingDeadlineNotification:
      properties:
        content:
          description: The details of the upcoming event.
          $ref: '#/components/schemas/AccountHolderUpcomingDeadlineNotificationContent'
        eventDate:
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: 'Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.'
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification originates.
          type: string
      required:
        - executingUserKey
        - pspReference
        - eventType
        - live
        - eventDate
    AccountHolderUpcomingDeadlineNotificationContent:
      properties:
        accountHolderCode:
          description: The code of the account holder whom the event refers to.
          type: string
        event:
          description: The event name that will be trigger if no action is taken.
          enum:
            - AccessPii
            - CloseAccount
            - CloseStores
            - DeleteBankAccounts
            - DeletePayoutInstrumentTokens
            - DeletePayoutMethods
            - DeleteShareholders
            - InactivateAccount
            - RecalculateAccountStatusAndProcessingTier
            - RefundNotPaidOutTransfers
            - ResolveEvents
            - SaveAccountHolder
            - SaveKYCCheckStatus
            - SuspendAccount
            - UnSuspendAccount
            - UpdateAccountHolderState
            - Verification
          type: string
        executionDate:
          description: The execution date scheduled for the event.
          $ref: '#/components/schemas/LocalDate'
        reason:
          description: The reason that leads to scheduling of the event.
          type: string
    AccountHolderUpdateNotification:
      properties:
        content:
          description: The details of the Account Holder update.
          $ref: '#/components/schemas/UpdateAccountHolderResponse'
        eventDate:
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: 'Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.'
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification originates.
          type: string
      required:
        - executingUserKey
        - pspReference
        - eventType
        - live
        - eventDate
        - content
    AccountHolderVerificationNotification:
      properties:
        content:
          description: The details of the Account Holder verification.
          $ref: '#/components/schemas/AccountHolderVerificationNotificationContent'
        eventDate:
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: 'Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.'
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification originates.
          type: string
      required:
        - executingUserKey
        - pspReference
        - eventType
        - live
        - eventDate
        - content
    AccountHolderVerificationNotificationContent:
      properties:
        accountHolderCode:
          description: The code of the account holder.
          type: string
        bankAccountUUID:
          description: The unique ID of the bank account that has been verified.
          type: string
        shareholderCode:
          description: The code of the shareholder that has been verified.
          type: string
        statusSummary:
          description: A summary of the verification status.
          $ref: '#/components/schemas/KYCCheckSummary'
        verificationStatus:
          description: The status of verification.
          enum:
            - AWAITING_DATA
            - DATA_PROVIDED
            - FAILED
            - INVALID_DATA
            - PASSED
            - PENDING
            - PENDING_REVIEW
            - RETRY_LIMIT_REACHED
            - UNCHECKED
          type: string
        verificationType:
          description: The type of validation performed.
          enum:
            - BANK_ACCOUNT_VERIFICATION
            - COMPANY_VERIFICATION
            - IDENTITY_VERIFICATION
            - NONPROFIT_VERIFICATION
            - PASSPORT_VERIFICATION
          type: string
      required:
        - accountHolderCode
    AccountPayoutState:
      properties:
        allowPayout:
          description: 'Indicates whether payouts are allowed. This field is the overarching payout status, and is the aggregate of multiple conditions (e.g., KYC status, disabled flag, etc). If this field is false, no payouts will be permitted for any of the account holder''s accounts. If this field is true, payouts will be permitted for any of the account holder''s accounts.'
          type: boolean
        disableReason:
          description: 'The reason why payouts (to all of the account holder''s accounts) have been disabled (by the platform). If the `disabled` field is true, this field can be used to explain why.'
          type: string
        disabled:
          description: 'Indicates whether payouts have been disabled (by the platform) for all of the account holder''s accounts. A platform may enable and disable this field at their discretion. If this field is true, `allowPayout` will be false and no payouts will be permitted for any of the account holder''s accounts. If this field is false, `allowPayout` may or may not be enabled, depending on other factors.'
          type: boolean
        payoutLimit:
          description: The maximum amount that payouts are limited to. Only applies if payouts are allowed but limited.
          $ref: '#/components/schemas/Amount'
        tierNumber:
          description: The payout tier that the account holder occupies.
          format: int32
          type: integer
      required:
        - allowPayout
        - disabled
        - tierNumber
        - disableReason
        - payoutLimit
    AccountProcessingState:
      properties:
        disableReason:
          description: The reason why processing has been disabled.
          type: string
        disabled:
          description: Indicates whether the processing of payments is allowed.
          type: boolean
        processedFrom:
          description: 'The lower bound of the processing tier (i.e., an account holder must have processed at least this amount of money in order to be placed into this tier).'
          $ref: '#/components/schemas/Amount'
        processedTo:
          description: 'The upper bound of the processing tier (i.e., an account holder must have processed less than this amount of money in order to be placed into this tier).'
          $ref: '#/components/schemas/Amount'
        tierNumber:
          description: The processing tier that the account holder occupies.
          format: int32
          type: integer
      required:
        - disabled
        - disableReason
        - processedFrom
        - processedTo
        - tierNumber
    AccountUpdateNotification:
      properties:
        content:
          description: The details of the Account update.
          $ref: '#/components/schemas/UpdateAccountResponse'
        eventDate:
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: 'Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.'
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification originates.
          type: string
      required:
        - executingUserKey
        - pspReference
        - eventType
        - live
        - eventDate
        - content
    Amount:
      properties:
        currency:
          description: 'The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).'
          maxLength: 3
          minLength: 3
          type: string
        value:
          description: |-
            The payable amount that can be charged for the transaction.

            The transaction amount needs to be represented in minor units according to the [following table](https://docs.adyen.com/development-resources/currency-codes).
          format: int64
          type: integer
      required:
        - value
        - currency
    BankAccountDetail:
      properties:
        accountNumber:
          description: |-
            The bank account number (without separators).
            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        accountType:
          description: |-
            The type of bank account.
            Only applicable to bank accounts held in the USA.
            The permitted values are: `checking`, `savings`.

            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        bankAccountName:
          description: The name of the bank account.
          type: string
        bankAccountUUID:
          description: |
            The unique identifier (UUID) of the Bank Account.
            >If, during an account holder create or update request, this field is left blank (but other fields provided), a new Bank Account will be created with a procedurally-generated UUID.

            >If, during an account holder create request, a UUID is provided, the creation of the Bank Account will fail while the creation of the account holder will continue.

            >If, during an account holder update request, a UUID that is not correlated with an existing Bank Account is provided, the update of the account holder will fail.

            >If, during an account holder update request, a UUID that is correlated with an existing Bank Account is provided, the existing Bank Account will be updated.
          type: string
        bankBicSwift:
          description: |-
            The bank identifier code.
            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        bankCity:
          description: |-
            The city in which the bank branch is located.

            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        bankCode:
          description: |-
            The bank code of the banking institution with which the bank account is registered.

            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        bankName:
          description: |-
            The name of the banking institution with which the bank account is held.

            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        branchCode:
          description: |-
            The branch code of the branch under which the bank account is registered. The value to be specified in this parameter depends on the country of the bank account:
            * United States - Routing number
            * United Kingdom - Sort code
            * Germany - Bankleitzahl
            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        checkCode:
          description: |-
            The check code of the bank account.

            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        countryCode:
          description: |-
            The two-letter country code in which the bank account is registered.
            >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').

            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        currencyCode:
          description: |-
            The currency in which the bank account deals.
            >The permitted currency codes are defined in ISO-4217 (e.g. 'EUR').

            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        iban:
          description: |-
            The international bank account number.
            >The IBAN standard is defined in ISO-13616.

            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        ownerCity:
          description: |-
            The city of residence of the bank account owner.
            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        ownerCountryCode:
          description: |-
            The country code of the country of residence of the bank account owner.
            >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').

            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        ownerDateOfBirth:
          description: |
            The date of birth of the bank account owner.
          type: string
        ownerHouseNumberOrName:
          description: |-
            The house name or number of the residence of the bank account owner.
            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        ownerName:
          description: |-
            The name of the bank account owner.
            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        ownerNationality:
          description: |-
            The country code of the country of nationality of the bank account owner.
            >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').

            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        ownerPostalCode:
          description: |-
            The postal code of the residence of the bank account owner.
            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        ownerState:
          description: |-
            The state of residence of the bank account owner.
            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        ownerStreet:
          description: |-
            The street name of the residence of the bank account owner.
            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        primaryAccount:
          description: 'If set to true, the bank account is a primary account.'
          type: boolean
        taxId:
          description: |-
            The tax ID number.

            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
        urlForVerification:
          description: |-
            The URL to be used for bank account verification.
            This may be generated on bank account creation.

            >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.
          type: string
    BeneficiarySetupNotification:
      properties:
        content:
          description: Details of the beneficiary setup.
          $ref: '#/components/schemas/BeneficiarySetupNotificationContent'
        eventDate:
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: 'Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.'
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification originates.
          type: string
      required:
        - executingUserKey
        - pspReference
        - eventType
        - live
        - eventDate
        - content
    BeneficiarySetupNotificationContent:
      properties:
        destinationAccountCode:
          description: The code of the beneficiary account.
          type: string
        destinationAccountHolderCode:
          description: The code of the beneficiary Account Holder.
          type: string
        merchantReference:
          description: The reference provided by the merchant.
          type: string
        sourceAccountCode:
          description: The code of the benefactor account.
          type: string
        sourceAccountHolderCode:
          description: The code of the benefactor Account Holder.
          type: string
        transferDate:
          description: The date on which the beneficiary was set up and funds transferred from benefactor to beneficiary.
          format: date-time
          type: string
        transferredTransactionCount:
          description: The number of transactions transferred upon the setup of the beneficiary.
          format: int32
          type: integer
      required:
        - sourceAccountHolderCode
        - sourceAccountCode
        - destinationAccountHolderCode
        - destinationAccountCode
        - transferDate
        - transferredTransactionCount
    BusinessDetails:
      properties:
        doingBusinessAs:
          description: The registered name of the company (if it differs from the legal name of the company).
          type: string
        legalBusinessName:
          description: The legal name of the company.
          type: string
        registrationNumber:
          description: The registration number of the company.
          type: string
        shareholders:
          description: |-
            Each of the shareholders associated with the company.
            Each array entry should represent one shareholder.
          items:
            $ref: '#/components/schemas/ShareholderContact'
          type: array
        taxId:
          description: The tax ID of the company.
          type: string
    CloseAccountResponse:
      properties:
        pspReference:
          description: The reference of a request.  Can be used to uniquely identify the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        status:
          description: |-
            The new status of the account.
            >Permitted values: `Active`, `Inactive`, `Suspended`, `Closed`.
          enum:
            - Active
            - Closed
            - Inactive
            - Suspended
          type: string
        submittedAsync:
          description: |-
            Indicates whether the request is processed synchronously or asynchronously.  Depending on the request's platform settings, the following scenarios may be applied:
            * **sync:** The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.
            * **async:** The request is queued and will be executed when the providing service is available in the order in which the requests are received.
            * **asyncOnError:** The processing of the request is immediately attempted, but if the providing service is unavailable, the request is scheduled in a queue.
          type: boolean
      required:
        - pspReference
        - submittedAsync
        - status
    CompensateNegativeBalanceNotification:
      properties:
        content:
          description: Details of the negative balance compensation.
          $ref: '#/components/schemas/CompensateNegativeBalanceNotificationContent'
        eventDate:
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: 'Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.'
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification originates.
          type: string
      required:
        - executingUserKey
        - pspReference
        - eventType
        - live
        - eventDate
    CompensateNegativeBalanceNotificationContent:
      properties:
        records:
          description: A list of the negative balances compensated.
          items:
            $ref: '#/components/schemas/CompensateNegativeBalanceNotificationRecord'
          type: array
      required:
        - records
    CompensateNegativeBalanceNotificationRecord:
      properties:
        accountCode:
          description: The code of the account whose negative balance has been compensated.
          type: string
        amount:
          description: The amount compensated.
          $ref: '#/components/schemas/Amount'
        transferDate:
          description: The date on which the compensation took place.
          format: date-time
          type: string
      required:
        - accountCode
        - transferDate
        - amount
    CreateAccountHolderResponse:
      properties:
        accountCode:
          description: The code of a new account created for the account holder.
          type: string
        accountHolderCode:
          description: The code of the new account holder.
          type: string
        accountHolderDetails:
          description: Details of the new account holder.
          $ref: '#/components/schemas/AccountHolderDetails'
        accountHolderStatus:
          description: The status of the new account holder.
          $ref: '#/components/schemas/AccountHolderStatus'
        description:
          description: The description of the new account holder.
          type: string
        invalidFields:
          description: A list of fields that caused the `/createAccountHolder` request to fail.
          items:
            $ref: '#/components/schemas/ErrorFieldType'
          type: array
        legalEntity:
          description: The type of legal entity of the new account holder.
          enum:
            - Business
            - Individual
            - NonProfit
            - Partnership
            - PublicCompany
          type: string
        pspReference:
          description: The reference of a request.  Can be used to uniquely identify the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        submittedAsync:
          description: |-
            Indicates whether the request is processed synchronously or asynchronously.  Depending on the request's platform settings, the following scenarios may be applied:
            * **sync:** The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.
            * **async:** The request is queued and will be executed when the providing service is available in the order in which the requests are received.
            * **asyncOnError:** The processing of the request is immediately attempted, but if the providing service is unavailable, the request is scheduled in a queue.
          type: boolean
        verification:
          description: The details of KYC Verification of the account holder.
          $ref: '#/components/schemas/KYCVerificationResult'
      required:
        - pspReference
        - submittedAsync
        - accountHolderCode
        - accountHolderStatus
        - accountHolderDetails
        - verification
        - legalEntity
    CreateAccountResponse:
      properties:
        accountCode:
          description: The code of the new account.
          type: string
        accountHolderCode:
          description: The code of the account holder.
          type: string
        description:
          description: The description of the account.
          type: string
        payoutSchedule:
          description: The payout schedule of the account.
          $ref: '#/components/schemas/PayoutScheduleResponse'
        pspReference:
          description: The reference of a request.  Can be used to uniquely identify the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        status:
          description: |-
            The status of the account.
            >Permitted values: `Active`.
          enum:
            - Active
            - Closed
            - Inactive
            - Suspended
          type: string
        submittedAsync:
          description: |-
            Indicates whether the request is processed synchronously or asynchronously.  Depending on the request's platform settings, the following scenarios may be applied:
            * **sync:** The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.
            * **async:** The request is queued and will be executed when the providing service is available in the order in which the requests are received.
            * **asyncOnError:** The processing of the request is immediately attempted, but if the providing service is unavailable, the request is scheduled in a queue.
          type: boolean
      required:
        - pspReference
        - submittedAsync
        - accountHolderCode
        - accountCode
        - status
    DirectDebitInitiatedNotification:
      properties:
        content:
          description: Details of the direct debit.
          $ref: '#/components/schemas/DirectDebitInitiatedNotificationContent'
        eventDate:
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: 'Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.'
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification originates.
          type: string
      required:
        - executingUserKey
        - pspReference
        - eventType
        - live
        - eventDate
    DirectDebitInitiatedNotificationContent:
      properties:
        accountCode:
          description: The code of the account.
          type: string
        amount:
          description: The amount to be debited from the funding account.
          $ref: '#/components/schemas/Amount'
        debitInitiationDate:
          description: The date of the debit initiation.
          $ref: '#/components/schemas/LocalDate'
        merchantAccountCode:
          description: The code of the merchant account.
          type: string
        status:
          description: Direct debit status.
          $ref: '#/components/schemas/OperationStatus'
      required:
        - amount
        - accountCode
        - merchantAccountCode
    ErrorFieldType:
      properties:
        errorCode:
          description: The validation error code.
          format: int32
          type: integer
        errorDescription:
          description: A description of the validation error.
          type: string
        fieldType:
          description: The type of error field.
          $ref: '#/components/schemas/FieldType'
    FieldType:
      properties:
        field:
          description: The full name of the property.
          type: string
        fieldName:
          description: The type of the field.
          enum:
            - accountCode
            - accountHolderCode
            - accountHolderDetails
            - accountNumber
            - accountStateType
            - accountStatus
            - accountType
            - address
            - bankAccount
            - bankAccountCode
            - bankAccountName
            - bankAccountUUID
            - bankBicSwift
            - bankCity
            - bankCode
            - bankName
            - bankStatement
            - branchCode
            - businessContact
            - cardToken
            - checkCode
            - city
            - companyRegistration
            - country
            - countryCode
            - currency
            - currencyCode
            - dateOfBirth
            - description
            - destinationAccountCode
            - document
            - documentExpirationDate
            - documentIssuerCountry
            - documentIssuerState
            - documentName
            - documentNumber
            - documentType
            - doingBusinessAs
            - drivingLicence
            - drivingLicenceBack
            - drivingLicense
            - email
            - firstName
            - fullPhoneNumber
            - gender
            - hopWebserviceUser
            - houseNumberOrName
            - iban
            - idCard
            - idCardBack
            - idCardFront
            - idNumber
            - identityDocument
            - individualDetails
            - lastName
            - legalBusinessName
            - legalEntity
            - legalEntityType
            - merchantAccount
            - merchantCategoryCode
            - merchantReference
            - microDeposit
            - name
            - nationality
            - originalReference
            - ownerCity
            - ownerCountryCode
            - ownerHouseNumberOrName
            - ownerName
            - ownerPostalCode
            - ownerState
            - ownerStreet
            - passport
            - passportNumber
            - payoutMethodCode
            - personalData
            - phoneCountryCode
            - phoneNumber
            - postalCode
            - primaryCurrency
            - reason
            - registrationNumber
            - returnUrl
            - schedule
            - shareholder
            - shareholderCode
            - socialSecurityNumber
            - sourceAccountCode
            - stateOrProvince
            - status
            - store
            - storeDetail
            - storeName
            - storeReference
            - street
            - taxId
            - tier
            - tierNumber
            - transferCode
            - unknown
            - value
            - virtualAccount
            - visaNumber
            - webAddress
          type: string
        shareholderCode:
          description: 'The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder.'
          type: string
    IndividualDetails:
      properties:
        name:
          description: |-
            The name of the individual.
            >Make sure your account holder registers using the name shown on their Photo ID.
          $ref: '#/components/schemas/ViasName'
        personalData:
          description: Personal information of the individual.
          $ref: '#/components/schemas/ViasPersonalData'
    KYCBankAccountCheckResult:
      properties:
        bankAccountUUID:
          description: The unique ID of the bank account to which the check applies.
          type: string
        checks:
          description: A list of the checks and their statuses.
          items:
            $ref: '#/components/schemas/KYCCheckStatusData'
          type: array
      required:
        - checks
        - bankAccountUUID
    KYCCheckResult:
      properties:
        checks:
          description: A list of the checks and their statuses.
          items:
            $ref: '#/components/schemas/KYCCheckStatusData'
          type: array
      required:
        - checks
    KYCCheckStatusData:
      properties:
        requiredFields:
          description: A list of the fields required for execution of the check.
          items:
            type: string
          type: array
        status:
          description: |-
            The status of the check.
            >Permitted Values: `DATA_PROVIDED`, `PASSED`, `PENDING`, `AWAITING_DATA`, `RETRY_LIMIT_REACHED`, `INVALID_DATA`, `FAILED`.
          enum:
            - AWAITING_DATA
            - DATA_PROVIDED
            - FAILED
            - INVALID_DATA
            - PASSED
            - PENDING
            - PENDING_REVIEW
            - RETRY_LIMIT_REACHED
            - UNCHECKED
          type: string
        summary:
          description: A summary of the execution of the check.
          $ref: '#/components/schemas/KYCCheckSummary'
        type:
          description: |-
            The type of check.
            >Permitted Values: `COMPANY_VERIFICATION`, `IDENTITY_VERIFICATION`, `PASSPORT_VERIFICATION`, `BANK_ACCOUNT_VERIFICATION`, `NONPROFIT_VERIFICATION`.
          enum:
            - BANK_ACCOUNT_VERIFICATION
            - COMPANY_VERIFICATION
            - IDENTITY_VERIFICATION
            - NONPROFIT_VERIFICATION
            - PASSPORT_VERIFICATION
          type: string
      required:
        - type
        - status
        - summary
        - requiredFields
    KYCCheckSummary:
      properties:
        code:
          description: The code of the check.
          format: int32
          type: integer
        description:
          description: A description of the check.
          type: string
      required:
        - code
    KYCShareholderCheckResult:
      properties:
        checks:
          description: A list of the checks and their statuses.
          items:
            $ref: '#/components/schemas/KYCCheckStatusData'
          type: array
        shareholderCode:
          description: The code of the shareholder to which the check applies.
          type: string
      required:
        - checks
        - shareholderCode
    KYCVerificationResult:
      properties:
        accountHolder:
          description: The result(s) of the checks on the account holder.
          $ref: '#/components/schemas/KYCCheckResult'
        bankAccounts:
          description: The result(s) of the checks on the bank account(s).
          items:
            $ref: '#/components/schemas/KYCBankAccountCheckResult'
          type: array
        shareholders:
          description: The result(s) of the checks on the shareholder(s).
          items:
            $ref: '#/components/schemas/KYCShareholderCheckResult'
          type: array
      required:
        - accountHolder
        - shareholders
        - bankAccounts
    LocalDate:
      properties:
        month:
          format: int32
          type: integer
        year:
          format: int32
          type: integer
    Message:
      properties:
        code:
          description: The message code.
          type: string
        text:
          description: The message text.
          type: string
    NotificationResponse:
      properties:
        notificationResponse:
          description: 'Set this property to **[accepted]** to acknowledge that you received a notification from Adyen.'
          type: string
      required:
        - notificationResponse
    OperationStatus:
      properties:
        message:
          description: The message regarding the operation status.
          $ref: '#/components/schemas/Message'
        statusCode:
          description: The status code.
          type: string
    PaymentFailureNotification:
      properties:
        content:
          description: The details of the payment failure.
          $ref: '#/components/schemas/PaymentFailureNotificationContent'
        eventDate:
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: 'Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.'
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification originates.
          type: string
      required:
        - executingUserKey
        - pspReference
        - eventType
        - live
        - eventDate
        - content
    PaymentFailureNotificationContent:
      properties:
        errorFields:
          description: Missing or invalid fields that caused the payment error.
          items:
            $ref: '#/components/schemas/ErrorFieldType'
          type: array
        errorMessage:
          description: The error message.
          $ref: '#/components/schemas/Message'
      required:
        - errorMessage
        - errorFields
    PayoutScheduleResponse:
      properties:
        nextScheduledPayout:
          description: The date of the next scheduled payout.
          format: date-time
          type: string
        schedule:
          description: |-
            The payout schedule of the account.
            >Permitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.
          enum:
            - BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT
            - BIWEEKLY_ON_1ST_AND_15TH_AT_NOON
            - DAILY
            - DAILY_6PM
            - DAILY_AU
            - DAILY_EU
            - DAILY_US
            - DEFAULT
            - EVERY_6_HOURS_FROM_MIDNIGHT
            - HOLD
            - MONTHLY
            - WEEKLY
            - WEEKLY_ON_TUE_FRI_MIDNIGHT
            - YEARLY
          type: string
      required:
        - schedule
        - nextScheduledPayout
    PersonalDocumentData:
      properties:
        expirationDate:
          description: |-
            The expiration date of the document.
            The date should be in ISO-8601 format yyyy-mm-dd (e.g. 2000-01-31).
          type: string
        issuerCountry:
          description: |-
            The two-character country code of the issuer.
            >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').
          maxLength: 2
          minLength: 2
          type: string
        issuerState:
          description: The state issued the document (if applicable)
          type: string
        number:
          description: The number of the document. Delete the given type if the value empty.
          type: string
        type:
          description: |-
            The type of the document. More then one item pert type does not allowed.
            Valid values: ID, PASSPORT, VISA, DRIVINGLICENSE
          enum:
            - DRIVINGLICENSE
            - ID
            - PASSPORT
            - SOCIALSECURITY
            - VISA
          type: string
      required:
        - type
        - number
    RefundFundsTransferNotification:
      properties:
        content:
          description: Details of the fund transfer refund.
          $ref: '#/components/schemas/RefundFundsTransferNotificationContent'
        eventDate:
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: 'Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.'
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification originates.
          type: string
      required:
        - executingUserKey
        - pspReference
        - eventType
        - live
        - eventDate
        - content
    RefundFundsTransferNotificationContent:
      properties:
        amount:
          description: The amount to be refunded.
          $ref: '#/components/schemas/Amount'
        merchantReference:
          description: A value that can be supplied at the discretion of the executing user in order to link multiple transactions to one another.
          type: string
        originalReference:
          description: A PSP reference of the original fund transfer.
          type: string
        status:
          description: The status of the fund transfer refund.
          $ref: '#/components/schemas/OperationStatus'
      required:
        - originalReference
        - amount
    RefundResult:
      properties:
        originalTransaction:
          description: The transaction that has been refunded.
          $ref: '#/components/schemas/Transaction'
        pspReference:
          description: The reference of the refund.
          type: string
        response:
          description: The response indicating if the refund has been received for processing.
          type: string
      required:
        - pspReference
        - originalTransaction
    ReportAvailableNotification:
      properties:
        content:
          description: Details of the report.
          $ref: '#/components/schemas/ReportAvailableNotificationContent'
        eventDate:
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: 'Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.'
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification originates.
          type: string
      required:
        - executingUserKey
        - pspReference
        - eventType
        - live
        - eventDate
        - content
    ReportAvailableNotificationContent:
      properties:
        accountCode:
          description: The code of the Account to which the report applies.
          type: string
        accountType:
          description: The type of Account to which the report applies.
          type: string
        eventDate:
          description: The date of the event to which the report applies.
          format: date-time
          type: string
        remoteAccessUrl:
          description: The URL at which the report can be accessed.
          type: string
        success:
          description: Indicates whether the event resulted in a success.
          type: boolean
    ScheduledRefundsNotification:
      properties:
        content:
          description: Details of the scheduling of the refunds.
          $ref: '#/components/schemas/ScheduledRefundsNotificationContent'
        eventDate:
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: 'Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.'
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification originates.
          type: string
      required:
        - executingUserKey
        - pspReference
        - eventType
        - live
        - eventDate
        - content
    ScheduledRefundsNotificationContent:
      properties:
        accountCode:
          description: The code of the account.
          type: string
        accountHolderCode:
          description: The code of the Account Holder.
          type: string
        lastPayout:
          description: The most recent payout (after which all transactions were scheduled to be refunded).
          $ref: '#/components/schemas/Transaction'
        refundResults:
          description: A list of the refunds that have been scheduled and their results.
          items:
            $ref: '#/components/schemas/RefundResult'
          type: array
      required:
        - accountHolderCode
        - accountCode
        - refundResults
        - lastPayout
    ShareholderContact:
      properties:
        address:
          description: The address of the contact.
          $ref: '#/components/schemas/ViasAddress'
        email:
          description: The e-mail address of the contact.
          type: string
        fullPhoneNumber:
          description: |-
            The phone number of the contact provided as a single string.  It will be handled as a landline phone.
            **Examples:** "0031 6 11 22 33 44", "+316/1122-3344", "(0031) 611223344"
          type: string
        name:
          description: The name of the contact.
          $ref: '#/components/schemas/ViasName'
        personalData:
          description: Personal data of the Shareholder.
          $ref: '#/components/schemas/ViasPersonalData'
        phoneNumber:
          description: The phone number of the contact.
          $ref: '#/components/schemas/ViasPhoneNumber'
        shareholderCode:
          description: |
            The unique identifier (UUID) of the Shareholder.
            >**If, during an Account Holder create or update request, this field is left blank (but other fields provided), a new Shareholder will be created with a procedurally-generated UUID.**

            >**If, during an Account Holder create request, a UUID is provided, the creation of the Shareholder will fail while the creation of the Account Holder will continue.**

            >**If, during an Account Holder update request, a UUID that is not correlated with an existing Shareholder is provided, the update of the Shareholder will fail.**

            >**If, during an Account Holder update request, a UUID that is correlated with an existing Shareholder is provided, the existing Shareholder will be updated.**
          type: string
        webAddress:
          description: The URL of the website of the contact.
          type: string
    Transaction:
      properties:
        amount:
          description: The amount of the transaction.
          $ref: '#/components/schemas/Amount'
        bankAccountDetail:
          description: The details of the bank account to where a payout was made.
          $ref: '#/components/schemas/BankAccountDetail'
        captureMerchantReference:
          description: The merchant reference of a related capture.
          type: string
        capturePspReference:
          description: The psp reference of a related capture.
          type: string
        creationDate:
          description: The date on which the transaction was performed.
          format: date-time
          type: string
        description:
          description: A description of the transaction.
          type: string
        destinationAccountCode:
          description: The code of the account to which funds were credited during an outgoing fund transfer.
          type: string
        disputePspReference:
          description: The psp reference of the related dispute.
          type: string
        disputeReasonCode:
          description: The reason code of a dispute.
          type: string
        merchantReference:
          description: The merchant reference of a transaction.
          type: string
        paymentPspReference:
          description: The psp reference of the related authorisation or transfer.
          type: string
        payoutPspReference:
          description: The psp reference of the related payout.
          type: string
        pspReference:
          description: The psp reference of a transaction.
          type: string
        sourceAccountCode:
          description: The code of the account from which funds were debited during an incoming fund transfer.
          type: string
        transactionStatus:
          description: |-
            The status of the transaction.
            >Permitted values: `PendingCredit`, `CreditFailed`, `Credited`, `Converted`, `PendingDebit`, `DebitFailed`, `Debited`, `DebitReversedReceived`, `DebitedReversed`, `ChargebackReceived`, `Chargeback`, `ChargebackReversedReceived`, `ChargebackReversed`, `Payout`, `PayoutReversed`, `FundTransfer`, `PendingFundTransfer`, `ManualCorrected`.
          enum:
            - Chargeback
            - ChargebackCorrection
            - ChargebackCorrectionReceived
            - ChargebackReceived
            - ChargebackReversed
            - ChargebackReversedReceived
            - Converted
            - CreditFailed
            - CreditReversed
            - CreditReversedReceived
            - Credited
            - DebitFailed
            - DebitReversedReceived
            - Debited
            - DebitedReversed
            - Fee
            - FundTransfer
            - FundTransferReversed
            - ManualCorrected
            - Payout
            - PayoutReversed
            - PendingCredit
            - PendingDebit
            - PendingFundTransfer
            - SecondChargeback
            - SecondChargebackReceived
          type: string
        transferCode:
          description: The transfer code of the transaction.
          type: string
    TransferFundsNotification:
      properties:
        content:
          description: Details of the fund transfer.
          $ref: '#/components/schemas/TransferFundsNotificationContent'
        eventDate:
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: 'Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.'
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification originates.
          type: string
      required:
        - executingUserKey
        - pspReference
        - eventType
        - live
        - eventDate
        - content
    TransferFundsNotificationContent:
      properties:
        amount:
          description: The amount transferred.
          $ref: '#/components/schemas/Amount'
        destinationAccountCode:
          description: The code of the Account to which funds were credited.
          type: string
        merchantReference:
          description: The reference provided by the merchant.
          type: string
        sourceAccountCode:
          description: The code of the Account from which funds were debited.
          type: string
        status:
          description: The status of the fund transfer.
          $ref: '#/components/schemas/OperationStatus'
        transferCode:
          description: The transfer code.
          type: string
      required:
        - sourceAccountCode
        - destinationAccountCode
        - amount
        - transferCode
    UpdateAccountHolderResponse:
      properties:
        accountHolderCode:
          description: The code of the account holder.
          type: string
        accountHolderDetails:
          description: Details of the account holder.
          $ref: '#/components/schemas/AccountHolderDetails'
        accountHolderStatus:
          description: The new status of the account holder.
          $ref: '#/components/schemas/AccountHolderStatus'
        description:
          description: The description of the account holder.
          type: string
        invalidFields:
          description: 'in case the account holder has not been updated, contains account holder fields, that did not pass the validation.'
          items:
            $ref: '#/components/schemas/ErrorFieldType'
          type: array
        legalEntity:
          description: The legal entity of the account holder.
          enum:
            - Business
            - Individual
            - NonProfit
            - Partnership
            - PublicCompany
          type: string
        pspReference:
          description: The reference of a request.  Can be used to uniquely identify the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        submittedAsync:
          description: |-
            Indicates whether the request is processed synchronously or asynchronously.  Depending on the request's platform settings, the following scenarios may be applied:
            * **sync:** The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.
            * **async:** The request is queued and will be executed when the providing service is available in the order in which the requests are received.
            * **asyncOnError:** The processing of the request is immediately attempted, but if the providing service is unavailable, the request is scheduled in a queue.
          type: boolean
        updatedFields:
          description: A list of the fields updated through the request.
          items:
            $ref: '#/components/schemas/FieldType'
          type: array
        verification:
          description: The details of KYC Verification of the account holder.
          $ref: '#/components/schemas/KYCVerificationResult'
      required:
        - pspReference
        - submittedAsync
        - accountHolderStatus
        - verification
        - legalEntity
    UpdateAccountResponse:
      properties:
        accountCode:
          description: The code of the account.
          type: string
        description:
          description: The description of the account.
          type: string
        payoutSchedule:
          description: The payout schedule of the account.
          $ref: '#/components/schemas/PayoutScheduleResponse'
        pspReference:
          description: The reference of a request.  Can be used to uniquely identify the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        submittedAsync:
          description: |-
            Indicates whether the request is processed synchronously or asynchronously.  Depending on the request's platform settings, the following scenarios may be applied:
            * **sync:** The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.
            * **async:** The request is queued and will be executed when the providing service is available in the order in which the requests are received.
            * **asyncOnError:** The processing of the request is immediately attempted, but if the providing service is unavailable, the request is scheduled in a queue.
          type: boolean
      required:
        - pspReference
        - submittedAsync
        - accountCode
        - payoutSchedule
    ViasAddress:
      properties:
        city:
          description: |-
            The name of the city.
            >Required if either `houseNumberOrName`, `street`, `postalCode`, or `stateOrProvince` are provided.
          type: string
        country:
          description: |-
            The two-character country code of the address. The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').
            > If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.
          type: string
        houseNumberOrName:
          description: The number or name of the house.
          type: string
        postalCode:
          description: |-
            The postal code.
            >A maximum of five (5) digits for an address in the USA, or a maximum of ten (10) characters for an address in all other countries.
            >Required if either `houseNumberOrName`, `street`, `city`, or `stateOrProvince` are provided.
          type: string
        stateOrProvince:
          description: |-
            The abbreviation of the state or province.
            >Two (2) characters for an address in the USA or Canada, or a maximum of three (3) characters for an address in all other countries.
            >Required for an address in the USA or Canada if either `houseNumberOrName`, `street`, `city`, or `postalCode` are provided.
          type: string
        street:
          description: |-
            The name of the street.
            >The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.
            >Required if either `houseNumberOrName`, `city`, `postalCode`, or `stateOrProvince` are provided.
          type: string
      required:
        - country
    ViasName:
      properties:
        firstName:
          description: The first name.
          type: string
        gender:
          description: |-
            The gender.
            >The following values are permitted: `MALE`, `FEMALE`, `UNKNOWN`.
          enum:
            - MALE
            - FEMALE
            - UNKNOWN
          maxLength: 1
          minLength: 1
          type: string
        infix:
          description: |-
            The name's infix, if applicable.
            >A maximum length of twenty (20) characters is imposed.
          type: string
        lastName:
          description: The last name.
          type: string
      required:
        - firstName
        - lastName
        - gender
    ViasPersonalData:
      properties:
        dateOfBirth:
          description: |-
            The date of birth of the person.
            The date should be in ISO-8601 format yyyy-mm-dd (e.g. 2000-01-31).
          type: string
        documentData:
          description: Key value pairs of document type and identify numbers
          items:
            $ref: '#/components/schemas/PersonalDocumentData'
          type: array
        idNumber:
          deprecated: true
          description: An ID number of the person.
          type: string
        nationality:
          description: |-
            The nationality of the person represented by a two-character country code.
            >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').
          maxLength: 2
          minLength: 2
          type: string
    ViasPhoneNumber:
      properties:
        phoneCountryCode:
          description: |-
            The two-character country code of the phone number.
            >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').
          type: string
        phoneNumber:
          description: |-
            The phone number.
            >The inclusion of the phone number country code is not necessary.
          type: string
        phoneType:
          description: |-
            The type of the phone number.
            >The following values are permitted: `Landline`, `Mobile`, `SIP`, `Fax`.
          enum:
            - Fax
            - Landline
            - Mobile
            - SIP
          type: string
      required:
        - phoneCountryCode
        - phoneNumber
