openapi: 3.1.0
info:
  version: '4'
  x-publicVersion: true
  title: Classic Platforms - Notifications
  description: "This API is used for the classic integration. If you are just starting\
    \ your implementation, refer to our [new integration guide](https://docs.adyen.com/marketplaces-and-platforms)\
    \ instead.\n\nThe Notification API sends notifications to the endpoints specified\
    \ in a given subscription. \nSubscriptions are managed through the Notification\
    \ Configuration API. The API specifications listed here detail the format of each\
    \ notification.\n\nFor more information, refer to our [documentation](https://docs.adyen.com/marketplaces-and-platforms/classic/notifications)."
  x-timestamp: '2023-06-02T11:23:48Z'
  termsOfService: https://www.adyen.com/legal/terms-and-conditions
  contact:
    name: Adyen Developer Experience team
    url: https://github.com/Adyen/adyen-openapi
x-groups:
- Account holders
- Accounts
- Fund management
- Other
tags: []
x-staticResponse: response.json
webhooks:
  /ACCOUNT_CLOSED:
    post:
      tags:
      - Accounts
      summary: Account closed
      description: Adyen sends this webhook when [an account is closed](https://docs.adyen.com/api-explorer/#/Account/latest/post/closeAccount).
      operationId: post-ACCOUNT_CLOSED
      x-groupName: Accounts
      x-sortIndex: 3
      x-methodName: accountClosed
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              accountClosed:
                $ref: '#/components/examples/post-ACCOUNT_CLOSED-accountClosed'
            schema:
              $ref: '#/components/schemas/AccountCloseNotification'
      responses:
        '200':
          content:
            application/json:
              examples:
                accountClosed:
                  $ref: '#/components/examples/WebhookAck'
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_CREATED:
    post:
      tags:
      - Accounts
      summary: Account created
      description: Adyen sends this webhook when [an account is created](https://docs.adyen.com/api-explorer/#/Account/latest/post/createAccount).
      operationId: post-ACCOUNT_CREATED
      x-groupName: Accounts
      x-sortIndex: 1
      x-methodName: accountCreated
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              accountCreated:
                $ref: '#/components/examples/post-ACCOUNT_CREATED-accountCreated'
            schema:
              $ref: '#/components/schemas/AccountCreateNotification'
      responses:
        '200':
          content:
            application/json:
              examples:
                accountCreated:
                  $ref: '#/components/examples/WebhookAck'
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_FUNDS_BELOW_THRESHOLD:
    post:
      tags:
      - Fund management
      summary: Liable account's funds are below configured threshold
      description: Adyen sends this notification when the current funds of your liable
        account are below the configured threshold.
      operationId: post-ACCOUNT_FUNDS_BELOW_THRESHOLD
      x-groupName: Fund management
      x-sortIndex: 7
      x-methodName: liableAccountsFundsAreBelowConfiguredThreshold
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountFundsBelowThresholdNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_HOLDER_CREATED:
    post:
      tags:
      - Account holders
      summary: Account holder created
      description: Adyen sends this webhook when [an account holder is created](https://docs.adyen.com/api-explorer/#/Account/latest/post/createAccountHolder).
      operationId: post-ACCOUNT_HOLDER_CREATED
      x-groupName: Account holders
      x-sortIndex: 1
      x-methodName: accountHolderCreated
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              accountHolderCreated-businesses:
                $ref: '#/components/examples/post-ACCOUNT_HOLDER_CREATED-accountHolderCreated-businesses'
              accountHolderCreated-failed:
                $ref: '#/components/examples/post-ACCOUNT_HOLDER_CREATED-accountHolderCreated-failed'
              accountHolderCreated-individuals:
                $ref: '#/components/examples/post-ACCOUNT_HOLDER_CREATED-accountHolderCreated-individuals'
            schema:
              $ref: '#/components/schemas/AccountHolderCreateNotification'
      responses:
        '200':
          content:
            application/json:
              examples:
                accountHolderCreated-businesses:
                  $ref: '#/components/examples/WebhookAck'
                accountHolderCreated-failed:
                  $ref: '#/components/examples/WebhookAck'
                accountHolderCreated-individuals:
                  $ref: '#/components/examples/WebhookAck'
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_HOLDER_PAYOUT:
    post:
      tags:
      - Fund management
      summary: Paid out to account holder
      description: Adyen sends this notification when a [payout request](https://docs.adyen.com/api-explorer/#/Fund/latest/post/payoutAccountHolder)
        to an account holder is processed and the payout is scheduled.
      operationId: post-ACCOUNT_HOLDER_PAYOUT
      x-groupName: Fund management
      x-sortIndex: 1
      x-methodName: paidOutToAccountHolder
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              accountHolderPayout-failed:
                $ref: '#/components/examples/post-ACCOUNT_HOLDER_PAYOUT-accountHolderPayout-failed'
              accountHolderPayout-initiated:
                $ref: '#/components/examples/post-ACCOUNT_HOLDER_PAYOUT-accountHolderPayout-initiated'
            schema:
              $ref: '#/components/schemas/AccountHolderPayoutNotification'
      responses:
        '200':
          content:
            application/json:
              examples:
                accountHolderPayout-failed:
                  $ref: '#/components/examples/WebhookAck'
                accountHolderPayout-initiated:
                  $ref: '#/components/examples/WebhookAck'
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_HOLDER_STATUS_CHANGE:
    post:
      tags:
      - Account holders
      summary: Account holder status changed
      description: Adyen sends this webhook when [the status of an account holder
        is changed](https://docs.adyen.com/api-explorer/#/Account/latest/post/updateAccountHolderState).
      operationId: post-ACCOUNT_HOLDER_STATUS_CHANGE
      x-groupName: Account holders
      x-sortIndex: 4
      x-methodName: accountHolderStatusChanged
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              accountHolderStatusChange:
                $ref: '#/components/examples/post-ACCOUNT_HOLDER_STATUS_CHANGE-accountHolderStatusChange'
            schema:
              $ref: '#/components/schemas/AccountHolderStatusChangeNotification'
      responses:
        '200':
          content:
            application/json:
              examples:
                accountHolderStatusChange:
                  $ref: '#/components/examples/WebhookAck'
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_HOLDER_STORE_STATUS_CHANGE:
    post:
      tags:
      - Account holders
      summary: Store status changed
      description: Adyen sends this webhook when [the status of a store](https://docs.adyen.com/api-explorer/#/Account/latest/post/createAccountHolder__reqParam_accountHolderDetails-storeDetails-status)
        associated with an account holder is changed.
      operationId: post-ACCOUNT_HOLDER_STORE_STATUS_CHANGE
      x-groupName: Account holders
      x-sortIndex: 4
      x-methodName: storeStatusChanged
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              accountHolderStoreStatusChange:
                $ref: '#/components/examples/post-ACCOUNT_HOLDER_STORE_STATUS_CHANGE-accountHolderStoreStatusChange'
            schema:
              $ref: '#/components/schemas/AccountHolderStoreStatusChangeNotification'
      responses:
        '200':
          content:
            application/json:
              examples:
                accountHolderStoreStatusChange:
                  $ref: '#/components/examples/WebhookAck'
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_HOLDER_UPCOMING_DEADLINE:
    post:
      tags:
      - Account holders
      summary: Upcoming deadline
      description: Adyen sends this notification when an account holder's deadline
        to fulfill the requirements of a specific event is coming up.
      operationId: post-ACCOUNT_HOLDER_UPCOMING_DEADLINE
      x-groupName: Account holders
      x-sortIndex: 1
      x-methodName: upcomingDeadline
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountHolderUpcomingDeadlineNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_HOLDER_UPDATED:
    post:
      tags:
      - Account holders
      summary: Account holder updated
      description: Adyen sends this webhook when [an account holder is updated](https://docs.adyen.com/api-explorer/#/Account/latest/post/updateAccountHolder).
      operationId: post-ACCOUNT_HOLDER_UPDATED
      x-groupName: Account holders
      x-sortIndex: 2
      x-methodName: accountHolderUpdated
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              accountHolderUpdated:
                $ref: '#/components/examples/post-ACCOUNT_HOLDER_UPDATED-accountHolderUpdated'
            schema:
              $ref: '#/components/schemas/AccountHolderUpdateNotification'
      responses:
        '200':
          content:
            application/json:
              examples:
                accountHolderUpdated:
                  $ref: '#/components/examples/WebhookAck'
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_HOLDER_VERIFICATION:
    post:
      tags:
      - Account holders
      summary: Verification results received
      description: Adyen sends this webhook when verification results are available.
      operationId: post-ACCOUNT_HOLDER_VERIFICATION
      x-groupName: Account holders
      x-sortIndex: 3
      x-methodName: verificationResultsReceived
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              accountHolderVerification:
                $ref: '#/components/examples/post-ACCOUNT_HOLDER_VERIFICATION-accountHolderVerification'
            schema:
              $ref: '#/components/schemas/AccountHolderVerificationNotification'
      responses:
        '200':
          content:
            application/json:
              examples:
                accountHolderVerification:
                  $ref: '#/components/examples/WebhookAck'
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /ACCOUNT_UPDATED:
    post:
      tags:
      - Accounts
      summary: Account updated
      description: Adyen sends this webhook when [an account is updated](https://docs.adyen.com/api-explorer/#/Account/latest/post/updateAccount).
      operationId: post-ACCOUNT_UPDATED
      x-groupName: Accounts
      x-sortIndex: 2
      x-methodName: accountUpdated
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              accountUpdated:
                $ref: '#/components/examples/post-ACCOUNT_UPDATED-accountUpdated'
            schema:
              $ref: '#/components/schemas/AccountUpdateNotification'
      responses:
        '200':
          content:
            application/json:
              examples:
                accountUpdated:
                  $ref: '#/components/examples/WebhookAck'
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /BENEFICIARY_SETUP:
    post:
      tags:
      - Fund management
      summary: Beneficiary defined
      description: Adyen sends this notification when a [benefactor/beneficiary relationship
        is created](https://docs.adyen.com/api-explorer/#/Fund/latest/post/transferFunds).
      operationId: post-BENEFICIARY_SETUP
      x-groupName: Fund management
      x-sortIndex: 3
      x-methodName: beneficiaryDefined
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              beneficiarySetup:
                $ref: '#/components/examples/post-BENEFICIARY_SETUP-beneficiarySetup'
            schema:
              $ref: '#/components/schemas/BeneficiarySetupNotification'
      responses:
        '200':
          content:
            application/json:
              examples:
                beneficiarySetup:
                  $ref: '#/components/examples/WebhookAck'
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /COMPENSATE_NEGATIVE_BALANCE:
    post:
      tags:
      - Fund management
      summary: Negative account balances compensated
      description: Adyen sends this notification when funds are transferred from your
        platform's liable account to an overdrawn account to compensate for the overdraft.
      operationId: post-COMPENSATE_NEGATIVE_BALANCE
      x-groupName: Fund management
      x-sortIndex: 5
      x-methodName: negativeAccountBalancesCompensated
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              compensateNegativeBalance:
                $ref: '#/components/examples/post-COMPENSATE_NEGATIVE_BALANCE-compensateNegativeBalance'
            schema:
              $ref: '#/components/schemas/CompensateNegativeBalanceNotification'
      responses:
        '200':
          content:
            application/json:
              examples:
                compensateNegativeBalance:
                  $ref: '#/components/examples/WebhookAck'
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /DIRECT_DEBIT_INITIATED:
    post:
      tags:
      - Fund management
      summary: Automated direct debit initiated
      description: Adyen sends this notification when a [direct debit is initiated](https://docs.adyen.com/api-explorer/#/Fund/latest/post/debitAccountHolder).
      operationId: post-DIRECT_DEBIT_INITIATED
      x-groupName: Fund management
      x-sortIndex: 7
      x-methodName: automatedDirectDebitInitiated
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              directDebitInitiated:
                $ref: '#/components/examples/post-DIRECT_DEBIT_INITIATED-directDebitInitiated'
              directDebitInitiated-failed:
                $ref: '#/components/examples/post-DIRECT_DEBIT_INITIATED-directDebitInitiated-failed'
            schema:
              $ref: '#/components/schemas/DirectDebitInitiatedNotification'
      responses:
        '200':
          content:
            application/json:
              examples:
                directDebitInitiated:
                  $ref: '#/components/examples/WebhookAck'
                directDebitInitiated-failed:
                  $ref: '#/components/examples/WebhookAck'
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /PAYMENT_FAILURE:
    post:
      tags:
      - Other
      summary: Booking for a capture or refund failed
      description: Adyen sends this notification when a [split payment](https://docs.adyen.com/marketplaces-and-platforms/classic/processing-payments#providing-split-information)
        booking for a capture or refund fails. When a booking fails due to an invalid
        account status or an unknown `accountCode`, the funds are credited or debited
        to or fromyour platform's liable account instead of the account specified
        in the split data.
      operationId: post-PAYMENT_FAILURE
      x-groupName: Other
      x-sortIndex: 1
      x-methodName: bookingForCaptureOrRefundFailed
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              paymentFailure:
                $ref: '#/components/examples/post-PAYMENT_FAILURE-paymentFailure'
            schema:
              $ref: '#/components/schemas/PaymentFailureNotification'
      responses:
        '200':
          content:
            application/json:
              examples:
                paymentFailure:
                  $ref: '#/components/examples/WebhookAck'
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /REFUND_FUNDS_TRANSFER:
    post:
      tags:
      - Fund management
      summary: Funds transfer between accounts refunded
      description: Adyen sends this notification when [funds transferred between accounts
        are refunded](https://docs.adyen.com/api-explorer/#/Fund/v6/latest/refundFundsTransfer).
      operationId: post-REFUND_FUNDS_TRANSFER
      x-groupName: Fund management
      x-sortIndex: 6
      x-methodName: fundsTransferBetweenAccountsRefunded
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundFundsTransferNotification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /REPORT_AVAILABLE:
    post:
      tags:
      - Other
      summary: Report available
      description: Adyen sends this notification when a report has been generated
        and it is available for download.
      operationId: post-REPORT_AVAILABLE
      x-groupName: Other
      x-sortIndex: 2
      x-methodName: reportAvailable
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              reportAvailable:
                $ref: '#/components/examples/post-REPORT_AVAILABLE-reportAvailable'
            schema:
              $ref: '#/components/schemas/ReportAvailableNotification'
      responses:
        '200':
          content:
            application/json:
              examples:
                reportAvailable:
                  $ref: '#/components/examples/WebhookAck'
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /SCHEDULED_REFUNDS:
    post:
      tags:
      - Fund management
      summary: '''Refund Transfers Not Paid Out'' call processed and refunds scheduled'
      description: Adyen sends this notification when a request to [refund transfers
        that are not yet paid out](https://docs.adyen.com/api-explorer/#/Fund/latest/refundNotPaidOutTransfers)
        is processed and the associated refunds are scheduled.
      operationId: post-SCHEDULED_REFUNDS
      x-groupName: Fund management
      x-sortIndex: 4
      x-methodName: refundTransfersNotPaidOutCallProcessedAndRefundsScheduled
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              scheduledRefunds:
                $ref: '#/components/examples/post-SCHEDULED_REFUNDS-scheduledRefunds'
            schema:
              $ref: '#/components/schemas/ScheduledRefundsNotification'
      responses:
        '200':
          content:
            application/json:
              examples:
                scheduledRefunds:
                  $ref: '#/components/examples/WebhookAck'
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
  /TRANSFER_FUNDS:
    post:
      tags:
      - Fund management
      summary: Funds transferred between accounts
      description: Adyen sends this notification when [funds are transferred between
        accounts](https://docs.adyen.com/api-explorer/#/Fund/latest/post/transferFunds).
      operationId: post-TRANSFER_FUNDS
      x-groupName: Fund management
      x-sortIndex: 2
      x-methodName: fundsTransferredBetweenAccounts
      security:
      - BasicAuth: []
      requestBody:
        content:
          application/json:
            examples:
              transferFunds:
                $ref: '#/components/examples/post-TRANSFER_FUNDS-transferFunds'
            schema:
              $ref: '#/components/schemas/TransferFundsNotification'
      responses:
        '200':
          content:
            application/json:
              examples:
                transferFunds:
                  $ref: '#/components/examples/WebhookAck'
              schema:
                $ref: '#/components/schemas/NotificationResponse'
          description: OK - the request has succeeded.
components:
  schemas:
    AccountCloseNotification:
      properties:
        content:
          description: The details of the Account update.
          $ref: '#/components/schemas/CloseAccountResponse'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    AccountCreateNotification:
      properties:
        content:
          description: The details of the account creation.
          $ref: '#/components/schemas/CreateAccountResponse'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    AccountEvent:
      properties:
        event:
          description: 'The event.

            >Permitted values: `InactivateAccount`, `RefundNotPaidOutTransfers`.

            For more information, refer to [Verification checks](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process).'
          enum:
          - InactivateAccount
          - RefundNotPaidOutTransfers
          type: string
        executionDate:
          description: The date on which the event will take place.
          format: date-time
          type: string
        reason:
          description: The reason why this event has been created.
          type: string
      type: object
    AccountEventWrapper:
      properties:
        AccountEvent:
          $ref: '#/components/schemas/AccountEvent'
    AccountFundsBelowThresholdNotification:
      properties:
        content:
          description: Details of the liable account with funds under threshold.
          $ref: '#/components/schemas/AccountFundsBelowThresholdNotificationContent'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    AccountFundsBelowThresholdNotificationContent:
      properties:
        accountCode:
          description: The code of the account with funds under threshold
          type: string
        balanceDate:
          description: The date of the funds were found to be below threshold.
          $ref: '#/components/schemas/LocalDate'
        currentFunds:
          description: The current funds in the liable account.
          $ref: '#/components/schemas/Amount'
        fundThreshold:
          description: The configured fund threshold for the liable account
          $ref: '#/components/schemas/Amount'
        merchantAccountCode:
          description: The code of the merchant account.
          type: string
      required:
      - merchantAccountCode
      - fundThreshold
      type: object
    AccountHolderCreateNotification:
      properties:
        content:
          description: The details of the account holder creation.
          $ref: '#/components/schemas/CreateAccountHolderResponse'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    AccountHolderDetails:
      properties:
        address:
          description: The address of the account holder.
          $ref: '#/components/schemas/ViasAddress'
        bankAccountDetails:
          description: Array of bank accounts associated with the account holder.
            For details about the required `bankAccountDetail` fields, see [Required
            information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information).
          items:
            $ref: '#/components/schemas/BankAccountDetailWrapper'
          type: array
        businessDetails:
          description: 'Details about the business or nonprofit account holder.

            Required when creating an account holder with `legalEntity` **Business**
            or **NonProfit**.'
          $ref: '#/components/schemas/BusinessDetails'
        email:
          description: The email address of the account holder.
          type: string
        fullPhoneNumber:
          description: 'The phone number of the account holder provided as a single
            string. It will be handled as a landline phone.

            **Examples:** "0031 6 11 22 33 44", "+316/1122-3344", "(0031) 611223344"'
          type: string
        individualDetails:
          description: 'Details about the individual account holder.

            Required when creating an account holder with `legalEntity` **Individual**.

            '
          $ref: '#/components/schemas/IndividualDetails'
        lastReviewDate:
          description: Date when you last reviewed the account holder's information,
            in ISO-8601 YYYY-MM-DD format. For example, **2020-01-31**.
          type: string
        merchantCategoryCode:
          description: 'The Merchant Category Code of the account holder.

            > If not specified in the request, this will be derived from the platform
            account (which is configured by Adyen).'
          type: string
        metadata:
          additionalProperties:
            type: string
          description: 'A set of key and value pairs for general use by the account
            holder or merchant.

            The keys do not have specific names and may be used for storing miscellaneous
            data as desired.

            > The values being stored have a maximum length of eighty (80) characters
            and will be truncated if necessary.

            > Note that during an update of metadata, the omission of existing key-value
            pairs will result in the deletion of those key-value pairs.'
          type: object
        principalBusinessAddress:
          description: The principal business address of the account holder.
          $ref: '#/components/schemas/ViasAddress'
        webAddress:
          description: The URL of the website of the account holder.
          type: string
      required:
      - address
      type: object
    AccountHolderPayoutNotification:
      properties:
        content:
          description: Details of the payout to the Account Holder.
          $ref: '#/components/schemas/AccountHolderPayoutNotificationContent'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    AccountHolderPayoutNotificationContent:
      properties:
        accountCode:
          description: The code of the account from which the payout was made.
          type: string
        accountHolderCode:
          description: The code of the Account Holder to which the payout was made.
          type: string
        amount:
          description: The payout amount.
          $ref: '#/components/schemas/Amount'
        amounts:
          description: The payout amounts (per currency).
          items:
            $ref: '#/components/schemas/AmountWrapper'
          type: array
        bankAccountDetail:
          description: Details of the Bank Account to which the payout was made.
          $ref: '#/components/schemas/BankAccountDetail'
        description:
          description: A description of the payout.
          type: string
        merchantReference:
          x-addedInVersion: '2'
          description: The merchant reference.
          type: string
        status:
          description: The payout status.
          $ref: '#/components/schemas/OperationStatus'
      type: object
    AccountHolderStatus:
      properties:
        events:
          description: A list of events scheduled for the account holder.
          items:
            $ref: '#/components/schemas/AccountEventWrapper'
          type: array
        payoutState:
          description: The payout state of the account holder.
          $ref: '#/components/schemas/AccountPayoutState'
        processingState:
          description: The processing state of the account holder.
          $ref: '#/components/schemas/AccountProcessingState'
        status:
          description: 'The status of the account holder.

            >Permitted values: `Active`, `Inactive`, `Suspended`, `Closed`.'
          enum:
          - Active
          - Closed
          - Inactive
          - Suspended
          type: string
        statusReason:
          description: The reason why the status was assigned to the account holder.
          type: string
      required:
      - status
      type: object
    AccountHolderStatusChangeNotification:
      properties:
        content:
          description: The details of the Account Holder status change.
          $ref: '#/components/schemas/AccountHolderStatusChangeNotificationContent'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    AccountHolderStatusChangeNotificationContent:
      properties:
        accountHolderCode:
          description: The code of the account holder.
          type: string
        newStatus:
          x-addedInVersion: '2'
          description: The new status of the account holder.
          $ref: '#/components/schemas/AccountHolderStatus'
        oldStatus:
          x-addedInVersion: '2'
          description: The former status of the account holder.
          $ref: '#/components/schemas/AccountHolderStatus'
        reason:
          description: The reason for the status change.
          type: string
      required:
      - accountHolderCode
      type: object
    AccountHolderStoreStatusChangeNotification:
      properties:
        content:
          description: The details of the Account Holder Store status change.
          $ref: '#/components/schemas/AccountHolderStoreStatusChangeNotificationContent'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    AccountHolderStoreStatusChangeNotificationContent:
      type: object
    AccountHolderUpcomingDeadlineNotification:
      properties:
        content:
          description: The details of the upcoming event.
          $ref: '#/components/schemas/AccountHolderUpcomingDeadlineNotificationContent'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    AccountHolderUpcomingDeadlineNotificationContent:
      properties:
        accountHolderCode:
          description: The code of the account holder whom the event refers to.
          type: string
        event:
          description: The event name that will be trigger if no action is taken.
          enum:
          - AccessPii
          - ApiTierUpdate
          - CloseAccount
          - CloseStores
          - DeleteBalanceAccounts
          - DeleteBankAccounts
          - DeleteLegalArrangements
          - DeleteLiableBankAccount
          - DeletePayoutMethods
          - DeleteShareholders
          - DeleteSignatories
          - InactivateAccount
          - KYCDeadlineExtension
          - MigrateAccountToBP
          - RecalculateAccountStatusAndProcessingTier
          - RefundNotPaidOutTransfers
          - ResolveEvents
          - SaveAccountHolder
          - SaveKYCCheckStatus
          - SavePEPChecks
          - SuspendAccount
          - UnSuspendAccount
          - UpdateAccountHolderState
          - Verification
          type: string
        executionDate:
          description: The execution date scheduled for the event.
          format: date-time
          type: string
        reason:
          description: The reason that leads to scheduling of the event.
          type: string
      type: object
    AccountHolderUpdateNotification:
      properties:
        content:
          description: The details of the Account Holder update.
          $ref: '#/components/schemas/UpdateAccountHolderResponse'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    AccountHolderVerificationNotification:
      properties:
        content:
          description: The details of the Account Holder verification.
          $ref: '#/components/schemas/AccountHolderVerificationNotificationContent'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    AccountHolderVerificationNotificationContent:
      properties:
        accountHolderCode:
          description: The code of the account holder.
          type: string
        bankAccountUUID:
          description: The unique ID of the bank account that has been verified.
          type: string
        shareholderCode:
          description: The code of the shareholder that has been verified.
          type: string
        signatoryCode:
          description: The code of the signatory that has been verified.
          type: string
        statusSummary:
          x-addedInVersion: '4'
          description: A summary of the verification status.
          $ref: '#/components/schemas/KYCCheckSummary'
        verificationStatus:
          description: The status of verification.
          enum:
          - AWAITING_DATA
          - DATA_PROVIDED
          - FAILED
          - INVALID_DATA
          - PASSED
          - PENDING
          - PENDING_REVIEW
          - RETRY_LIMIT_REACHED
          - UNCHECKED
          type: string
        verificationType:
          description: The type of validation performed.
          enum:
          - BANK_ACCOUNT_VERIFICATION
          - CARD_VERIFICATION
          - COMPANY_VERIFICATION
          - IDENTITY_VERIFICATION
          - LEGAL_ARRANGEMENT_VERIFICATION
          - NONPROFIT_VERIFICATION
          - PASSPORT_VERIFICATION
          - PAYOUT_METHOD_VERIFICATION
          - PCI_VERIFICATION
          type: string
      type: object
    AccountPayoutState:
      properties:
        allowPayout:
          description: Indicates whether payouts are allowed. This field is the overarching
            payout status, and is the aggregate of multiple conditions (e.g., KYC
            status, disabled flag, etc). If this field is false, no payouts will be
            permitted for any of the account holder's accounts. If this field is true,
            payouts will be permitted for any of the account holder's accounts.
          type: boolean
        disableReason:
          description: The reason why payouts (to all of the account holder's accounts)
            have been disabled (by the platform). If the `disabled` field is true,
            this field can be used to explain why.
          type: string
        disabled:
          description: Indicates whether payouts have been disabled (by the platform)
            for all of the account holder's accounts. A platform may enable and disable
            this field at their discretion. If this field is true, `allowPayout` will
            be false and no payouts will be permitted for any of the account holder's
            accounts. If this field is false, `allowPayout` may or may not be enabled,
            depending on other factors.
          type: boolean
        payoutLimit:
          description: The maximum amount that payouts are limited to. Only applies
            if payouts are allowed but limited.
          $ref: '#/components/schemas/Amount'
        tierNumber:
          x-addedInVersion: '3'
          description: The payout tier that the account holder occupies.
          format: int32
          type: integer
      type: object
    AccountProcessingState:
      properties:
        disableReason:
          description: The reason why processing has been disabled.
          type: string
        disabled:
          description: Indicates whether the processing of payments is allowed.
          type: boolean
        processedFrom:
          description: The lower bound of the processing tier (i.e., an account holder
            must have processed at least this amount of money in order to be placed
            into this tier).
          $ref: '#/components/schemas/Amount'
        processedTo:
          description: The upper bound of the processing tier (i.e., an account holder
            must have processed less than this amount of money in order to be placed
            into this tier).
          $ref: '#/components/schemas/Amount'
        tierNumber:
          x-addedInVersion: '3'
          description: The processing tier that the account holder occupies.
          format: int32
          type: integer
      type: object
    AccountUpdateNotification:
      properties:
        content:
          description: The details of the Account update.
          $ref: '#/components/schemas/UpdateAccountResponse'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    Amount:
      properties:
        currency:
          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).
          maxLength: 3
          minLength: 3
          type: string
        value:
          description: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
          format: int64
          type: integer
      required:
      - value
      - currency
      type: object
    AmountWrapper:
      properties:
        Amount:
          $ref: '#/components/schemas/Amount'
    BankAccountDetail:
      properties:
        accountNumber:
          description: 'The bank account number (without separators).

            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        accountType:
          description: 'The type of bank account.

            Only applicable to bank accounts held in the USA.

            The permitted values are: `checking`, `savings`.


            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        bankAccountName:
          description: The name of the bank account.
          type: string
        bankAccountUUID:
          description: 'The unique identifier (UUID) of the Bank Account.

            >If, during an account holder create or update request, this field is
            left blank (but other fields provided), a new Bank Account will be created
            with a procedurally-generated UUID.


            >If, during an account holder create request, a UUID is provided, the
            creation of the Bank Account will fail while the creation of the account
            holder will continue.


            >If, during an account holder update request, a UUID that is not correlated
            with an existing Bank Account is provided, the update of the account holder
            will fail.


            >If, during an account holder update request, a UUID that is correlated
            with an existing Bank Account is provided, the existing Bank Account will
            be updated.

            '
          type: string
        bankBicSwift:
          description: 'The bank identifier code.

            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        bankCity:
          description: 'The city in which the bank branch is located.


            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        bankCode:
          description: 'The bank code of the banking institution with which the bank
            account is registered.


            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        bankName:
          description: 'The name of the banking institution with which the bank account
            is held.


            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        branchCode:
          description: 'The branch code of the branch under which the bank account
            is registered. The value to be specified in this parameter depends on
            the country of the bank account:

            * United States - Routing number

            * United Kingdom - Sort code

            * Germany - Bankleitzahl

            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        checkCode:
          description: 'The check code of the bank account.


            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        countryCode:
          description: 'The two-letter country code in which the bank account is registered.

            >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. ''NL'').


            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        currencyCode:
          description: 'The currency in which the bank account deals.

            >The permitted currency codes are defined in ISO-4217 (e.g. ''EUR'').

            '
          type: string
        iban:
          description: 'The international bank account number.

            >The IBAN standard is defined in ISO-13616.


            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        ownerCity:
          description: 'The city of residence of the bank account owner.

            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        ownerCountryCode:
          description: 'The country code of the country of residence of the bank account
            owner.

            >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. ''NL'').


            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        ownerDateOfBirth:
          deprecated: true
          description: 'The date of birth of the bank account owner.

            The date should be in ISO-8601 format yyyy-mm-dd (e.g. 2000-01-31).'
          type: string
        ownerHouseNumberOrName:
          description: 'The house name or number of the residence of the bank account
            owner.

            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        ownerName:
          description: 'The name of the bank account owner.

            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        ownerNationality:
          description: 'The country code of the country of nationality of the bank
            account owner.

            >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. ''NL'').


            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        ownerPostalCode:
          description: 'The postal code of the residence of the bank account owner.

            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        ownerState:
          description: 'The state of residence of the bank account owner.

            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        ownerStreet:
          description: 'The street name of the residence of the bank account owner.

            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        primaryAccount:
          description: If set to true, the bank account is a primary account.
          type: boolean
        taxId:
          description: 'The tax ID number.


            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
        urlForVerification:
          description: 'The URL to be used for bank account verification.

            This may be generated on bank account creation.


            >Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)
            for details on field requirements.'
          type: string
      type: object
    BankAccountDetailWrapper:
      properties:
        BankAccountDetail:
          $ref: '#/components/schemas/BankAccountDetail'
    BeneficiarySetupNotification:
      properties:
        content:
          description: Details of the beneficiary setup.
          $ref: '#/components/schemas/BeneficiarySetupNotificationContent'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    BeneficiarySetupNotificationContent:
      properties:
        destinationAccountCode:
          description: The code of the beneficiary account.
          type: string
        destinationAccountHolderCode:
          description: The code of the beneficiary Account Holder.
          type: string
        merchantReference:
          description: The reference provided by the merchant.
          type: string
        sourceAccountCode:
          description: The code of the benefactor account.
          type: string
        sourceAccountHolderCode:
          description: The code of the benefactor Account Holder.
          type: string
        transferDate:
          description: The date on which the beneficiary was set up and funds transferred
            from benefactor to beneficiary.
          format: date-time
          type: string
        transferredTransactionCount:
          description: The number of transactions transferred upon the setup of the
            beneficiary.
          format: int32
          type: integer
      type: object
    BusinessDetails:
      properties:
        doingBusinessAs:
          description: The registered name of the company (if it differs from the
            legal name of the company).
          type: string
        legalBusinessName:
          description: The legal name of the company.
          type: string
        listedUltimateParentCompany:
          description: Information about the parent public company. Required if the
            account holder is 100% owned by a publicly listed company.
          items:
            $ref: '#/components/schemas/UltimateParentCompanyWrapper'
          type: array
        registrationNumber:
          x-addedInVersion: '4'
          description: The registration number of the company.
          type: string
        shareholders:
          description: Array containing information about individuals associated with
            the account holder either through ownership or control. For details about
            how you can identify them, refer to [our verification guide](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process#identify-ubos).
          items:
            $ref: '#/components/schemas/ShareholderContactWrapper'
          type: array
        signatories:
          description: 'Signatories associated with the company.

            Each array entry should represent one signatory.'
          items:
            $ref: '#/components/schemas/SignatoryContactWrapper'
          type: array
        taxId:
          description: The tax ID of the company.
          type: string
      type: object
    CloseAccountResponse:
      properties:
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        status:
          x-addedInVersion: '2'
          description: 'The new status of the account.

            >Permitted values: `Active`, `Inactive`, `Suspended`, `Closed`.'
          enum:
          - Active
          - Closed
          - Inactive
          - Suspended
          type: string
        submittedAsync:
          description: 'Indicates whether the request is processed asynchronously.
            Depending on the request''s platform settings, the following scenarios
            may be applied:

            * **true**: The request is queued and will be executed when the providing
            service is available in the order in which the requests are received.

            * **false**: The processing of the request is immediately attempted; it
            may result in an error if the providing service is unavailable.'
          type: boolean
      type: object
    CompensateNegativeBalanceNotification:
      properties:
        content:
          description: Details of the negative balance compensation.
          $ref: '#/components/schemas/CompensateNegativeBalanceNotificationContent'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    CompensateNegativeBalanceNotificationContent:
      properties:
        records:
          description: A list of the negative balances compensated.
          items:
            $ref: '#/components/schemas/CompensateNegativeBalanceNotificationRecordWrapper'
          type: array
      type: object
    CompensateNegativeBalanceNotificationRecord:
      properties:
        accountCode:
          description: The code of the account whose negative balance has been compensated.
          type: string
        amount:
          description: The amount compensated.
          $ref: '#/components/schemas/Amount'
        transferDate:
          description: The date on which the compensation took place.
          format: date-time
          type: string
      type: object
    CompensateNegativeBalanceNotificationRecordWrapper:
      properties:
        CompensateNegativeBalanceNotificationRecord:
          $ref: '#/components/schemas/CompensateNegativeBalanceNotificationRecord'
    CreateAccountHolderResponse:
      properties:
        accountCode:
          description: The code of a new account created for the account holder.
          type: string
        accountHolderCode:
          description: The code of the new account holder.
          type: string
        accountHolderDetails:
          description: Details of the new account holder.
          $ref: '#/components/schemas/AccountHolderDetails'
        accountHolderStatus:
          x-addedInVersion: '2'
          description: The status of the new account holder.
          $ref: '#/components/schemas/AccountHolderStatus'
        description:
          x-addedInVersion: '4'
          description: The description of the new account holder.
          type: string
        invalidFields:
          x-addedInVersion: '5'
          description: A list of fields that caused the `/createAccountHolder` request
            to fail.
          items:
            $ref: '#/components/schemas/ErrorFieldTypeWrapper'
          type: array
        legalEntity:
          x-addedInVersion: '4'
          description: The type of legal entity of the new account holder.
          enum:
          - Business
          - Individual
          - NonProfit
          type: string
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        submittedAsync:
          description: 'Indicates whether the request is processed asynchronously.
            Depending on the request''s platform settings, the following scenarios
            may be applied:

            * **true**: The request is queued and will be executed when the providing
            service is available in the order in which the requests are received.

            * **false**: The processing of the request is immediately attempted; it
            may result in an error if the providing service is unavailable.'
          type: boolean
        verification:
          x-addedInVersion: '2'
          description: The details of KYC Verification of the account holder.
          $ref: '#/components/schemas/KYCVerificationResult'
      type: object
    CreateAccountResponse:
      properties:
        accountCode:
          description: The code of the new account.
          type: string
        accountHolderCode:
          description: The code of the account holder.
          type: string
        description:
          x-addedInVersion: '4'
          description: The description of the account.
          type: string
        payoutSchedule:
          description: The payout schedule of the account.
          $ref: '#/components/schemas/PayoutScheduleResponse'
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        status:
          x-addedInVersion: '2'
          description: 'The status of the account.

            >Permitted values: `Active`.'
          enum:
          - Active
          - Closed
          - Inactive
          - Suspended
          type: string
        submittedAsync:
          description: 'Indicates whether the request is processed asynchronously.
            Depending on the request''s platform settings, the following scenarios
            may be applied:

            * **true**: The request is queued and will be executed when the providing
            service is available in the order in which the requests are received.

            * **false**: The processing of the request is immediately attempted; it
            may result in an error if the providing service is unavailable.'
          type: boolean
      type: object
    DirectDebitInitiatedNotification:
      properties:
        content:
          description: Details of the direct debit.
          $ref: '#/components/schemas/DirectDebitInitiatedNotificationContent'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    DirectDebitInitiatedNotificationContent:
      properties:
        accountCode:
          description: The code of the account.
          type: string
        amount:
          description: The amount to be debited from the funding account.
          $ref: '#/components/schemas/Amount'
        debitInitiationDate:
          description: The date of the debit initiation.
          $ref: '#/components/schemas/LocalDate'
        invalidFields:
          description: Invalid fields list.
          items:
            $ref: '#/components/schemas/ErrorFieldTypeWrapper'
          type: array
        merchantAccountCode:
          description: The code of the merchant account.
          type: string
        splits:
          description: The split data for the debit request.
          items:
            $ref: '#/components/schemas/Split'
          type: array
        status:
          description: Direct debit status.
          $ref: '#/components/schemas/OperationStatus'
      required:
      - amount
      - accountCode
      - merchantAccountCode
      type: object
    ErrorFieldType:
      properties:
        errorCode:
          description: The validation error code.
          format: int32
          type: integer
        errorDescription:
          description: A description of the validation error.
          type: string
        fieldType:
          description: The type of error field.
          $ref: '#/components/schemas/FieldType'
      type: object
    ErrorFieldTypeWrapper:
      properties:
        ErrorFieldType:
          $ref: '#/components/schemas/ErrorFieldType'
    FieldType:
      properties:
        field:
          description: The full name of the property.
          type: string
        fieldName:
          description: The type of the field.
          enum:
          - accountCode
          - accountHolderCode
          - accountHolderDetails
          - accountNumber
          - accountStateType
          - accountStatus
          - accountType
          - address
          - balanceAccount
          - balanceAccountActive
          - balanceAccountCode
          - balanceAccountId
          - bankAccount
          - bankAccountCode
          - bankAccountName
          - bankAccountUUID
          - bankBicSwift
          - bankCity
          - bankCode
          - bankName
          - bankStatement
          - branchCode
          - businessContact
          - cardToken
          - checkCode
          - city
          - companyRegistration
          - constitutionalDocument
          - controller
          - country
          - countryCode
          - currency
          - currencyCode
          - dateOfBirth
          - description
          - destinationAccountCode
          - document
          - documentContent
          - documentExpirationDate
          - documentIssuerCountry
          - documentIssuerState
          - documentName
          - documentNumber
          - documentType
          - doingBusinessAs
          - drivingLicence
          - drivingLicenceBack
          - drivingLicenceFront
          - drivingLicense
          - email
          - firstName
          - formType
          - fullPhoneNumber
          - gender
          - hopWebserviceUser
          - houseNumberOrName
          - iban
          - idCard
          - idCardBack
          - idCardFront
          - idNumber
          - identityDocument
          - individualDetails
          - infix
          - jobTitle
          - lastName
          - lastReviewDate
          - legalArrangement
          - legalArrangementCode
          - legalArrangementEntity
          - legalArrangementEntityCode
          - legalArrangementLegalForm
          - legalArrangementMember
          - legalArrangementMembers
          - legalArrangementName
          - legalArrangementReference
          - legalArrangementRegistrationNumber
          - legalArrangementTaxNumber
          - legalArrangementType
          - legalBusinessName
          - legalEntity
          - legalEntityType
          - logo
          - merchantAccount
          - merchantCategoryCode
          - merchantHouseNumber
          - merchantReference
          - microDeposit
          - name
          - nationality
          - originalReference
          - ownerCity
          - ownerCountryCode
          - ownerDateOfBirth
          - ownerHouseNumberOrName
          - ownerName
          - ownerPostalCode
          - ownerState
          - ownerStreet
          - passport
          - passportNumber
          - payoutMethod
          - payoutMethodCode
          - payoutSchedule
          - pciSelfAssessment
          - personalData
          - phoneCountryCode
          - phoneNumber
          - postalCode
          - primaryCurrency
          - reason
          - registrationNumber
          - returnUrl
          - schedule
          - shareholder
          - shareholderCode
          - shareholderCodeAndSignatoryCode
          - shareholderCodeOrSignatoryCode
          - shareholderType
          - shareholderTypes
          - shopperInteraction
          - signatory
          - signatoryCode
          - socialSecurityNumber
          - sourceAccountCode
          - splitAccount
          - splitConfigurationUUID
          - splitCurrency
          - splitValue
          - splits
          - stateOrProvince
          - status
          - stockExchange
          - stockNumber
          - stockTicker
          - store
          - storeDetail
          - storeName
          - storeReference
          - street
          - taxId
          - tier
          - tierNumber
          - transferCode
          - ultimateParentCompany
          - ultimateParentCompanyAddressDetails
          - ultimateParentCompanyAddressDetailsCountry
          - ultimateParentCompanyBusinessDetails
          - ultimateParentCompanyBusinessDetailsLegalBusinessName
          - ultimateParentCompanyBusinessDetailsRegistrationNumber
          - ultimateParentCompanyCode
          - ultimateParentCompanyStockExchange
          - ultimateParentCompanyStockNumber
          - ultimateParentCompanyStockNumberOrStockTicker
          - ultimateParentCompanyStockTicker
          - unknown
          - value
          - verificationType
          - virtualAccount
          - visaNumber
          - webAddress
          - year
          type: string
        shareholderCode:
          description: The code of the shareholder that the field belongs to. If empty,
            the field belongs to an account holder.
          type: string
      type: object
    FieldTypeWrapper:
      properties:
        FieldType:
          $ref: '#/components/schemas/FieldType'
    IndividualDetails:
      properties:
        name:
          description: 'The name of the individual.

            >Make sure your account holder registers using the name shown on their
            Photo ID.'
          $ref: '#/components/schemas/ViasName'
        personalData:
          description: Personal information of the individual.
          $ref: '#/components/schemas/ViasPersonalData'
      type: object
    KYCBankAccountCheckResult:
      properties:
        bankAccountUUID:
          description: The unique ID of the bank account to which the check applies.
          type: string
        checks:
          description: A list of the checks and their statuses.
          items:
            $ref: '#/components/schemas/KYCCheckStatusData'
          type: array
      type: object
    KYCCheckResult:
      properties:
        checks:
          description: A list of the checks and their statuses.
          items:
            $ref: '#/components/schemas/KYCCheckStatusData'
          type: array
      type: object
    KYCCheckStatusData:
      properties:
        requiredFields:
          description: A list of the fields required for execution of the check.
          items:
            type: string
          type: array
        status:
          description: 'The status of the check.


            Possible values: **AWAITING_DATA** , **DATA_PROVIDED**, **FAILED**, **INVALID_DATA**,
            **PASSED**, **PENDING**, **RETRY_LIMIT_REACHED**.'
          enum:
          - AWAITING_DATA
          - DATA_PROVIDED
          - FAILED
          - INVALID_DATA
          - PASSED
          - PENDING
          - PENDING_REVIEW
          - RETRY_LIMIT_REACHED
          - UNCHECKED
          type: string
        summary:
          description: A summary of the execution of the check.
          $ref: '#/components/schemas/KYCCheckSummary'
        type:
          description: "The type of check.\n\nPossible values:\n\n * **BANK_ACCOUNT_VERIFICATION**:\
            \ Used in v5 and earlier. Replaced by **PAYOUT_METHOD_VERIFICATION** in\
            \ v6 and later.\n\n * **COMPANY_VERIFICATION**\n\n  * **CARD_VERIFICATION**\n\
            \n* **IDENTITY_VERIFICATION**\n\n* **LEGAL_ARRANGEMENT_VERIFICATION**\n\
            \n* **NONPROFIT_VERIFICATION**\n\n * **PASSPORT_VERIFICATION**\n\n* **PAYOUT_METHOD_VERIFICATION**:\
            \ Used in v6 and later.\n\n* **PCI_VERIFICATION**"
          enum:
          - BANK_ACCOUNT_VERIFICATION
          - CARD_VERIFICATION
          - COMPANY_VERIFICATION
          - IDENTITY_VERIFICATION
          - LEGAL_ARRANGEMENT_VERIFICATION
          - NONPROFIT_VERIFICATION
          - PASSPORT_VERIFICATION
          - PAYOUT_METHOD_VERIFICATION
          - PCI_VERIFICATION
          type: string
      required:
      - type
      - status
      type: object
    KYCCheckSummary:
      properties:
        code:
          description: The code of the check.
          format: int32
          type: integer
        description:
          description: A description of the check.
          type: string
      required:
      - code
      type: object
    KYCShareholderCheckResult:
      properties:
        checks:
          description: A list of the checks and their statuses.
          items:
            $ref: '#/components/schemas/KYCCheckStatusData'
          type: array
        shareholderCode:
          description: The code of the shareholder to which the check applies.
          type: string
      type: object
    KYCSignatoryCheckResult:
      properties:
        checks:
          description: A list of the checks and their statuses.
          items:
            $ref: '#/components/schemas/KYCCheckStatusData'
          type: array
        signatoryCode:
          description: The code of the signatory to which the check applies.
          type: string
      type: object
    KYCVerificationResult:
      properties:
        accountHolder:
          description: The results of the checks on the account holder.
          $ref: '#/components/schemas/KYCCheckResult'
        bankAccounts:
          description: The results of the checks on the bank accounts.
          items:
            $ref: '#/components/schemas/KYCBankAccountCheckResult'
          type: array
        shareholders:
          description: The results of the checks on the shareholders.
          items:
            $ref: '#/components/schemas/KYCShareholderCheckResult'
          type: array
        signatories:
          description: The results of the checks on the signatories.
          items:
            $ref: '#/components/schemas/KYCSignatoryCheckResult'
          type: array
      type: object
    LocalDate:
      properties:
        month:
          format: int32
          type: integer
        year:
          format: int32
          type: integer
      type: object
    Message:
      properties:
        code:
          description: The message code.
          type: string
        text:
          description: The message text.
          type: string
      type: object
    NotificationResponse:
      properties:
        notificationResponse:
          description: Set this parameter to **[accepted]** to acknowledge that you
            received a notification from Adyen.
          type: string
      type: object
    OperationStatus:
      properties:
        message:
          description: The message regarding the operation status.
          $ref: '#/components/schemas/Message'
        statusCode:
          description: The status code.
          type: string
      type: object
    PaymentFailureNotification:
      properties:
        content:
          description: The details of the payment failure.
          $ref: '#/components/schemas/PaymentFailureNotificationContent'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    PaymentFailureNotificationContent:
      properties:
        errorFields:
          description: Missing or invalid fields that caused the payment error.
          items:
            $ref: '#/components/schemas/ErrorFieldTypeWrapper'
          type: array
        errorMessage:
          description: The error message.
          $ref: '#/components/schemas/Message'
        modificationMerchantReference:
          description: The `reference` of the capture or refund.
          type: string
        modificationPspReference:
          description: The `pspReference` of the capture or refund.
          type: string
        paymentMerchantReference:
          description: The `reference` of the payment.
          type: string
        paymentPspReference:
          description: The `pspReference` of the payment.
          type: string
      type: object
    PayoutScheduleResponse:
      properties:
        nextScheduledPayout:
          description: The date of the next scheduled payout.
          format: date-time
          type: string
        schedule:
          description: 'The payout schedule of the account.

            Permitted values: `DEFAULT`, `DAILY`, `DAILY_US`, `DAILY_EU`, `DAILY_AU`,
            `DAILY_SG`, `WEEKLY`, `WEEKLY_ON_TUE_FRI_MIDNIGHT`, `BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT`,
            `MONTHLY`, `HOLD`.'
          enum:
          - BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT
          - DAILY
          - DAILY_AU
          - DAILY_EU
          - DAILY_SG
          - DAILY_US
          - HOLD
          - MONTHLY
          - WEEKLY
          - WEEKLY_MON_TO_FRI_AU
          - WEEKLY_MON_TO_FRI_EU
          - WEEKLY_MON_TO_FRI_US
          - WEEKLY_ON_TUE_FRI_MIDNIGHT
          - WEEKLY_SUN_TO_THU_AU
          - WEEKLY_SUN_TO_THU_US
          type: string
      type: object
    PersonalDocumentData:
      properties:
        expirationDate:
          description: "The expiry date of the document, \n in ISO-8601 YYYY-MM-DD\
            \ format. For example, **2000-01-31**."
          type: string
        issuerCountry:
          description: "The country where the document was issued, in the two-character\
            \ \n[ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
            \ format. For example, **NL**."
          maxLength: 2
          minLength: 2
          type: string
        issuerState:
          description: The state where the document was issued (if applicable).
          type: string
        number:
          description: The number in the document.
          type: string
        type:
          description: 'The type of the document. Possible values: **ID**, **DRIVINGLICENSE**,
            **PASSPORT**, **SOCIALSECURITY**, **VISA**.


            To delete an existing entry for a document `type`, send only the `type`
            field in your request. '
          enum:
          - DRIVINGLICENSE
          - ID
          - PASSPORT
          - SOCIALSECURITY
          - VISA
          type: string
      required:
      - type
      type: object
    PersonalDocumentDataWrapper:
      properties:
        PersonalDocumentData:
          $ref: '#/components/schemas/PersonalDocumentData'
    RefundFundsTransferNotification:
      properties:
        content:
          description: Details of the fund transfer refund.
          $ref: '#/components/schemas/RefundFundsTransferNotificationContent'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    RefundFundsTransferNotificationContent:
      properties:
        amount:
          description: The amount to be refunded.
          $ref: '#/components/schemas/Amount'
        merchantReference:
          description: A value that can be supplied at the discretion of the executing
            user in order to link multiple transactions to one another.
          type: string
        originalReference:
          description: A PSP reference of the original fund transfer.
          type: string
        status:
          description: The status of the fund transfer refund.
          $ref: '#/components/schemas/OperationStatus'
      required:
      - originalReference
      - amount
      type: object
    RefundResult:
      properties:
        originalTransaction:
          description: The transaction that has been refunded.
          $ref: '#/components/schemas/Transaction'
        pspReference:
          description: The reference of the refund.
          type: string
        response:
          description: The response indicating if the refund has been received for
            processing.
          type: string
      type: object
    RefundResultWrapper:
      properties:
        RefundResult:
          $ref: '#/components/schemas/RefundResult'
    ReportAvailableNotification:
      properties:
        content:
          description: Details of the report.
          $ref: '#/components/schemas/ReportAvailableNotificationContent'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    ReportAvailableNotificationContent:
      properties:
        accountCode:
          description: The code of the Account to which the report applies.
          type: string
        accountType:
          description: The type of Account to which the report applies.
          type: string
        eventDate:
          description: The date of the event to which the report applies.
          format: date-time
          type: string
        remoteAccessUrl:
          description: The URL at which the report can be accessed.
          type: string
        success:
          description: Indicates whether the event resulted in a success.
          type: boolean
      type: object
    ScheduledRefundsNotification:
      properties:
        content:
          description: Details of the scheduling of the refunds.
          $ref: '#/components/schemas/ScheduledRefundsNotificationContent'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    ScheduledRefundsNotificationContent:
      properties:
        accountCode:
          description: The code of the account.
          type: string
        accountHolderCode:
          description: The code of the Account Holder.
          type: string
        lastPayout:
          description: The most recent payout (after which all transactions were scheduled
            to be refunded).
          $ref: '#/components/schemas/Transaction'
        refundResults:
          description: A list of the refunds that have been scheduled and their results.
          items:
            $ref: '#/components/schemas/RefundResultWrapper'
          type: array
      type: object
    ShareholderContact:
      properties:
        address:
          description: The address of the person.
          $ref: '#/components/schemas/ViasAddress'
        email:
          description: The e-mail address of the person.
          type: string
        fullPhoneNumber:
          description: 'The phone number of the person provided as a single string.  It
            will be handled as a landline phone.

            Examples: "0031 6 11 22 33 44", "+316/1122-3344", "(0031) 611223344"'
          type: string
        jobTitle:
          description: 'Job title of the person. Required when the `shareholderType`
            is **Controller**.


            Example values: **Chief Executive Officer**, **Chief Financial Officer**,
            **Chief Operating Officer**, **President**, **Vice President**, **Executive
            President**, **Managing Member**, **Partner**, **Treasurer**, **Director**,
            or **Other**.'
          type: string
        name:
          description: The name of the person.
          $ref: '#/components/schemas/ViasName'
        personalData:
          description: Contains information about the person.
          $ref: '#/components/schemas/ViasPersonalData'
        phoneNumber:
          description: The phone number of the person.
          $ref: '#/components/schemas/ViasPhoneNumber'
        shareholderCode:
          description: 'The unique identifier (UUID) of the shareholder entry.

            >**If, during an Account Holder create or update request, this field is
            left blank (but other fields provided), a new Shareholder will be created
            with a procedurally-generated UUID.**


            >**If, during an Account Holder create request, a UUID is provided, the
            creation of Account Holder will fail with a validation Error..**


            >**If, during an Account Holder update request, a UUID that is not correlated
            with an existing Shareholder is provided, the update of the Shareholder
            will fail.**


            >**If, during an Account Holder update request, a UUID that is correlated
            with an existing Shareholder is provided, the existing Shareholder will
            be updated.**

            '
          type: string
        shareholderType:
          description: "Specifies how the person is associated with the account holder.\
            \ \n\nPossible values: \n\n* **Owner**: Individuals who directly or indirectly\
            \ own 25% or more of a company.\n\n* **Controller**: Individuals who are\
            \ members of senior management staff responsible for managing a company\
            \ or organization."
          enum:
          - Controller
          - Owner
          - Signatory
          type: string
        webAddress:
          description: The URL of the person's website.
          type: string
      type: object
    ShareholderContactWrapper:
      properties:
        ShareholderContact:
          $ref: '#/components/schemas/ShareholderContact'
    SignatoryContact:
      properties:
        address:
          description: The address of the person.
          $ref: '#/components/schemas/ViasAddress'
        email:
          description: The e-mail address of the person.
          type: string
        fullPhoneNumber:
          description: 'The phone number of the person provided as a single string.  It
            will be handled as a landline phone.

            Examples: "0031 6 11 22 33 44", "+316/1122-3344", "(0031) 611223344"'
          type: string
        jobTitle:
          description: 'Job title of the signatory.


            Example values: **Chief Executive Officer**, **Chief Financial Officer**,
            **Chief Operating Officer**, **President**, **Vice President**, **Executive
            President**, **Managing Member**, **Partner**, **Treasurer**, **Director**,
            or **Other**.'
          type: string
        name:
          description: The name of the person.
          $ref: '#/components/schemas/ViasName'
        personalData:
          description: Contains information about the person.
          $ref: '#/components/schemas/ViasPersonalData'
        phoneNumber:
          description: The phone number of the person.
          $ref: '#/components/schemas/ViasPhoneNumber'
        signatoryCode:
          description: 'The unique identifier (UUID) of the signatory.

            >**If, during an Account Holder create or update request, this field is
            left blank (but other fields provided), a new Signatory will be created
            with a procedurally-generated UUID.**


            >**If, during an Account Holder create request, a UUID is provided, the
            creation of the Signatory will fail while the creation of the Account
            Holder will continue.**


            >**If, during an Account Holder update request, a UUID that is not correlated
            with an existing Signatory is provided, the update of the Signatory will
            fail.**


            >**If, during an Account Holder update request, a UUID that is correlated
            with an existing Signatory is provided, the existing Signatory will be
            updated.**

            '
          type: string
        signatoryReference:
          description: Your reference for the signatory.
          type: string
        webAddress:
          description: The URL of the person's website.
          type: string
      type: object
    SignatoryContactWrapper:
      properties:
        SignatoryContact:
          $ref: '#/components/schemas/SignatoryContact'
    Split:
      properties:
        account:
          description: 'Unique identifier of the account where the split amount should
            be sent. This is required if `type` is **MarketPlace** or **BalanceAccount**.


            '
          type: string
        amount:
          description: The amount of this split.
          $ref: '#/components/schemas/SplitAmount'
        description:
          description: A description of this split.
          type: string
        reference:
          description: 'Your reference for the split, which you can use to link the
            split to other operations such as captures and refunds.


            This is required if `type` is **MarketPlace** or **BalanceAccount**. For
            the other types, we also recommend sending a reference so you can reconcile
            the split and the associated payment in the transaction overview and in
            the reports. If the reference is not provided, the split is reported as
            part of the aggregated [TransferBalance record type](https://docs.adyen.com/reporting/marketpay-payments-accounting-report)
            in Adyen for Platforms.'
          type: string
        type:
          description: 'The type of split.

            Possible values: **Default**, **PaymentFee**, **VAT**, **Commission**,
            **MarketPlace**, **BalanceAccount**, **Remainder**, **Surcharge**, **Tip**.'
          enum:
          - BalanceAccount
          - Commission
          - Default
          - MarketPlace
          - PaymentFee
          - PaymentFeeAcquiring
          - PaymentFeeAdyen
          - PaymentFeeAdyenCommission
          - PaymentFeeAdyenMarkup
          - PaymentFeeInterchange
          - PaymentFeeSchemeFee
          - Remainder
          - Surcharge
          - Tip
          - VAT
          - Verification
          type: string
      required:
      - amount
      - type
      type: object
    SplitAmount:
      properties:
        currency:
          description: 'The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).


            If this value is not provided, the currency in which the payment is made
            will be used.'
          maxLength: 3
          minLength: 3
          type: string
        value:
          description: The amount in [minor units](https://docs.adyen.com/development-resources/currency-codes).
          format: int64
          type: integer
      required:
      - value
      type: object
    Transaction:
      properties:
        amount:
          description: The amount of the transaction.
          $ref: '#/components/schemas/Amount'
        bankAccountDetail:
          description: The details of the bank account to where a payout was made.
          $ref: '#/components/schemas/BankAccountDetail'
        captureMerchantReference:
          description: The merchant reference of a related capture.
          type: string
        capturePspReference:
          description: The psp reference of a related capture.
          type: string
        creationDate:
          description: The date on which the transaction was performed.
          format: date-time
          type: string
        description:
          description: A description of the transaction.
          type: string
        destinationAccountCode:
          description: The code of the account to which funds were credited during
            an outgoing fund transfer.
          type: string
        disputePspReference:
          description: The psp reference of the related dispute.
          type: string
        disputeReasonCode:
          description: The reason code of a dispute.
          type: string
        merchantReference:
          description: The merchant reference of a transaction.
          type: string
        paymentPspReference:
          x-addedInVersion: '3'
          description: The psp reference of the related authorisation or transfer.
          type: string
        payoutPspReference:
          x-addedInVersion: '3'
          description: The psp reference of the related payout.
          type: string
        pspReference:
          description: The psp reference of a transaction.
          type: string
        sourceAccountCode:
          description: The code of the account from which funds were debited during
            an incoming fund transfer.
          type: string
        transactionStatus:
          description: 'The status of the transaction.

            >Permitted values: `PendingCredit`, `CreditFailed`, `CreditClosed`, `CreditSuspended`,
            `Credited`, `Converted`, `PendingDebit`, `DebitFailed`, `Debited`, `DebitReversedReceived`,
            `DebitedReversed`, `ChargebackReceived`, `Chargeback`, `ChargebackReversedReceived`,
            `ChargebackReversed`, `Payout`, `PayoutReversed`, `FundTransfer`, `PendingFundTransfer`,
            `ManualCorrected`.'
          enum:
          - BalanceNotPaidOutTransfer
          - BalancePlatformSweep
          - BalancePlatformSweepReturned
          - Chargeback
          - ChargebackCorrection
          - ChargebackCorrectionReceived
          - ChargebackReceived
          - ChargebackReversed
          - ChargebackReversedCorrection
          - ChargebackReversedCorrectionReceived
          - ChargebackReversedReceived
          - Converted
          - CreditClosed
          - CreditFailed
          - CreditReversed
          - CreditReversedReceived
          - CreditSuspended
          - Credited
          - DebitFailed
          - DebitReversedReceived
          - Debited
          - DebitedReversed
          - DepositCorrectionCredited
          - DepositCorrectionDebited
          - Fee
          - FundTransfer
          - FundTransferReversed
          - InvoiceDeductionCredited
          - InvoiceDeductionDebited
          - ManualCorrected
          - ManualCorrectionCredited
          - ManualCorrectionDebited
          - MerchantPayin
          - MerchantPayinReversed
          - Payout
          - PayoutReversed
          - PendingCredit
          - PendingDebit
          - PendingFundTransfer
          - ReCredited
          - ReCreditedReceived
          - SecondChargeback
          - SecondChargebackCorrection
          - SecondChargebackCorrectionReceived
          - SecondChargebackReceived
          type: string
        transferCode:
          description: The transfer code of the transaction.
          type: string
      type: object
    TransferFundsNotification:
      properties:
        content:
          description: Details of the fund transfer.
          $ref: '#/components/schemas/TransferFundsNotificationContent'
        eventDate:
          x-addedInVersion: '4'
          description: The date and time when an event has been completed.
          format: date-time
          type: string
        eventType:
          description: The event type of the notification.
          type: string
        executingUserKey:
          description: The user or process that has triggered the notification.
          type: string
        live:
          description: Indicates whether the notification originated from the live
            environment or the test environment. If true, the notification originated
            from the live environment. If false, the notification originated from
            the test environment.
          type: boolean
        pspReference:
          description: The PSP reference of the request from which the notification
            originates.
          type: string
      required:
      - executingUserKey
      - pspReference
      - eventType
      - live
      - eventDate
      type: object
    TransferFundsNotificationContent:
      properties:
        amount:
          description: The amount transferred.
          $ref: '#/components/schemas/Amount'
        destinationAccountCode:
          description: The code of the Account to which funds were credited.
          type: string
        merchantReference:
          x-addedInVersion: '2'
          description: The reference provided by the merchant.
          type: string
        sourceAccountCode:
          description: The code of the Account from which funds were debited.
          type: string
        status:
          description: The status of the fund transfer.
          $ref: '#/components/schemas/OperationStatus'
        transferCode:
          description: The transfer code.
          type: string
      type: object
    UltimateParentCompany:
      properties:
        address:
          description: Address of the ultimate parent company.
          $ref: '#/components/schemas/ViasAddress'
        businessDetails:
          description: Details about the ultimate parent company's business.
          $ref: '#/components/schemas/UltimateParentCompanyBusinessDetails'
        ultimateParentCompanyCode:
          description: Adyen-generated unique alphanumeric identifier (UUID) for the
            entry, returned in the response when you create an ultimate parent company.
            Required when updating an existing entry in an `/updateAccountHolder`
            request.
          type: string
      type: object
    UltimateParentCompanyBusinessDetails:
      properties:
        legalBusinessName:
          description: The legal name of the company.
          type: string
        registrationNumber:
          description: The registration number of the company.
          type: string
        stockExchange:
          description: Market Identifier Code (MIC).
          type: string
        stockNumber:
          description: International Securities Identification Number (ISIN).
          type: string
        stockTicker:
          description: Stock Ticker symbol.
          type: string
      type: object
    UltimateParentCompanyWrapper:
      properties:
        UltimateParentCompany:
          $ref: '#/components/schemas/UltimateParentCompany'
    UpdateAccountHolderResponse:
      properties:
        accountHolderCode:
          description: The code of the account holder.
          type: string
        accountHolderDetails:
          description: Details of the account holder.
          $ref: '#/components/schemas/AccountHolderDetails'
        accountHolderStatus:
          x-addedInVersion: '2'
          description: The new status of the account holder.
          $ref: '#/components/schemas/AccountHolderStatus'
        description:
          x-addedInVersion: '4'
          description: The description of the account holder.
          type: string
        invalidFields:
          x-addedInVersion: '5'
          description: in case the account holder has not been updated, contains account
            holder fields, that did not pass the validation.
          items:
            $ref: '#/components/schemas/ErrorFieldTypeWrapper'
          type: array
        legalEntity:
          x-addedInVersion: '4'
          description: The legal entity of the account holder.
          enum:
          - Business
          - Individual
          - NonProfit
          type: string
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        submittedAsync:
          description: 'Indicates whether the request is processed asynchronously.
            Depending on the request''s platform settings, the following scenarios
            may be applied:

            * **true**: The request is queued and will be executed when the providing
            service is available in the order in which the requests are received.

            * **false**: The processing of the request is immediately attempted; it
            may result in an error if the providing service is unavailable.'
          type: boolean
        updatedFields:
          description: A list of the fields updated through the request.
          items:
            $ref: '#/components/schemas/FieldTypeWrapper'
          type: array
        verification:
          x-addedInVersion: '2'
          description: The details of KYC Verification of the account holder.
          $ref: '#/components/schemas/KYCVerificationResult'
      type: object
    UpdateAccountResponse:
      properties:
        accountCode:
          description: The code of the account.
          type: string
        description:
          x-addedInVersion: '4'
          description: The description of the account.
          type: string
        payoutSchedule:
          description: The payout schedule of the account.
          $ref: '#/components/schemas/PayoutScheduleResponse'
        pspReference:
          description: The reference of a request. Can be used to uniquely identify
            the request.
          type: string
        resultCode:
          description: The result code.
          type: string
        submittedAsync:
          description: 'Indicates whether the request is processed asynchronously.
            Depending on the request''s platform settings, the following scenarios
            may be applied:

            * **true**: The request is queued and will be executed when the providing
            service is available in the order in which the requests are received.

            * **false**: The processing of the request is immediately attempted; it
            may result in an error if the providing service is unavailable.'
          type: boolean
      required:
      - accountCode
      type: object
    ViasAddress:
      properties:
        city:
          description: The name of the city. Required if the `houseNumberOrName`,
            `street`, `postalCode`, or `stateOrProvince` are provided.
          type: string
        country:
          description: The two-character country code of the address in ISO-3166-1
            alpha-2 format. For example, **NL**.
          type: string
        houseNumberOrName:
          description: The number or name of the house.
          type: string
        postalCode:
          description: 'The postal code. Required if the `houseNumberOrName`, `street`,
            `city`, or `stateOrProvince` are provided.


            Maximum length:


            * 5 digits for addresses in the US.


            * 10 characters for all other countries.'
          type: string
        stateOrProvince:
          description: "The abbreviation of the state or province. Required if the\
            \ `houseNumberOrName`, `street`, `city`, or `postalCode` are provided.\
            \ \n\nMaximum length:\n\n* 2 characters for addresses in the US or Canada.\n\
            \n* 3 characters for all other countries.\n"
          type: string
        street:
          description: The name of the street. Required if the `houseNumberOrName`,
            `city`, `postalCode`, or `stateOrProvince` are provided.
          type: string
      required:
      - country
      type: object
    ViasName:
      properties:
        firstName:
          description: The first name.
          maxLength: 80
          type: string
        gender:
          description: 'The gender.

            >The following values are permitted: `MALE`, `FEMALE`, `UNKNOWN`.'
          enum:
          - MALE
          - FEMALE
          - UNKNOWN
          maxLength: 1
          type: string
        infix:
          description: 'The name''s infix, if applicable.

            >A maximum length of twenty (20) characters is imposed.'
          maxLength: 20
          type: string
        lastName:
          description: The last name.
          maxLength: 80
          type: string
      type: object
    ViasPersonalData:
      properties:
        dateOfBirth:
          description: The person's date of birth, in ISO-8601 YYYY-MM-DD format.
            For example, **2000-01-31**.
          type: string
        documentData:
          x-addedInVersion: '3'
          description: Array that contains information about the person's identification
            document. You can submit only one entry per document type.
          items:
            $ref: '#/components/schemas/PersonalDocumentDataWrapper'
          type: array
        idNumber:
          deprecated: true
          x-deprecatedInVersion: '3'
          x-deprecatedMessage: Use `individualDetails.personalData.documentData.number`
            instead.
          description: An ID number of the person.
          type: string
        nationality:
          description: 'The nationality of the person represented by a two-character
            country code,  in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            format. For example, **NL**.

            '
          maxLength: 2
          minLength: 2
          type: string
      type: object
    ViasPhoneNumber:
      properties:
        phoneCountryCode:
          description: 'The two-character country code of the phone number.

            >The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. ''NL'').'
          type: string
        phoneNumber:
          description: 'The phone number.

            >The inclusion of the phone number country code is not necessary.'
          type: string
        phoneType:
          description: 'The type of the phone number.

            >The following values are permitted: `Landline`, `Mobile`, `SIP`, `Fax`.'
          enum:
          - Fax
          - Landline
          - Mobile
          - SIP
          type: string
      type: object
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
  examples:
    WebhookAck:
      summary: Acknowledge Webhook
      value: '[accepted]'
    post-ACCOUNT_CLOSED-accountClosed:
      summary: ACCOUNT_CLOSED example
      value:
        eventDate: '2019-01-01T01:00:00+01:00'
        eventType: ACCOUNT_CLOSED
        executingUserKey: executing-user-key
        live: false
        pspReference: TSTPSPR0001
        content:
          pspReference: TSTPSPR0001
          resultCode: Success
          submittedAsync: false
          status: Closed
    post-ACCOUNT_CREATED-accountCreated:
      summary: ACCOUNT_CREATED example
      value:
        eventDate: '2019-01-01T01:00:00+01:00'
        eventType: ACCOUNT_CREATED
        executingUserKey: executing-user-key
        live: false
        pspReference: TSTPSPR0001
        content:
          pspReference: TSTPSPR0001
          resultCode: Success
          submittedAsync: false
          accountCode: AC0000000001
          accountHolderCode: AHC00000001
          description: account description
          payoutSchedule:
            nextScheduledPayout: '2019-01-02T01:00:00+01:00'
            schedule: DAILY
          status: Active
    post-ACCOUNT_HOLDER_CREATED-accountHolderCreated-businesses:
      summary: ACCOUNT_HOLDER_CREATED for businesses example
      value:
        eventDate: '2019-01-01T01:00:00+01:00'
        eventType: ACCOUNT_HOLDER_CREATED
        executingUserKey: executing-user-key
        live: false
        pspReference: TSTPSPR0001
        content:
          pspReference: TSTPSPR0001
          resultCode: Success
          submittedAsync: false
          accountCode: AC0000000001
          accountHolderCode: AHC00000001
          accountHolderDetails:
            address:
              city: Amsterdam
              country: NL
              houseNumberOrName: 96/A
              postalCode: 1000AA
              stateOrProvince: NH
              street: Street
            bankAccountDetails:
            - accountNumber: '00000000'
              accountType: checking
              bankAccountName: Account name
              bankAccountUUID: 00000000-0000-0000-0000-000000000000
              bankBicSwift: BSWFT
              bankCity: Amsterdam
              bankCode: '00000000'
              bankName: Bank Name Co
              branchCode: '00000000'
              checkCode: '1234'
              countryCode: NL
              currencyCode: EUR
              iban: NL00NONE1234123412
              ownerCity: Amsterdam
              ownerCountryCode: NL
              ownerDateOfBirth: '1981-02-27'
              ownerHouseNumberOrName: 32/B
              ownerName: Owner Name
              ownerNationality: NL
              ownerPostalCode: 1000AA
              ownerState: NH
              ownerStreet: Owner Street
              primaryAccount: false
              taxId: OT#12345
              urlForVerification: http://adyen.com
            businessDetails:
              doingBusinessAs: Business name
              legalBusinessName: Legal Business Co
              registrationNumber: Reg#1234
              shareholders:
              - address:
                  city: Amsterdam
                  country: NL
                  houseNumberOrName: 96/A
                  postalCode: 1000AA
                  stateOrProvince: NH
                  street: Street
                email: contact@adyen.com
                fullPhoneNumber: '+31858888138'
                name:
                  firstName: Firstname
                  gender: UNKNOWN
                  infix: infix
                  lastName: Lastname
                personalData:
                  dateOfBirth: '1981-02-27'
                  documentData:
                  - expirationDate: '2030-12-31'
                    issuerCountry: NL
                    issuerState: NH
                    number: ID#123456
                    type: ID
                  idNumber: ID#123456
                  nationality: NL
                phoneNumber:
                  phoneCountryCode: NL
                  phoneNumber: '858888138'
                  phoneType: Landline
                shareholderCode: SH00001
                webAddress: https://www.adyen.com/
              taxId: TaxID#1234
            email: contact@adyen.com
            fullPhoneNumber: '+31858888138'
            merchantCategoryCode: '1212'
            metadata:
              MetaKey: MetaValue
            phoneNumber:
              phoneCountryCode: NL
              phoneNumber: '858888138'
              phoneType: Landline
            webAddress: https://adyen.com
          accountHolderStatus:
            status: Active
            statusReason: Reason of status
            processingState:
              disabled: true
              disableReason: Reason for disabled status
              processedFrom:
                currency: EUR
                value: 10
              processedTo:
                currency: EUR
                value: 100
              tierNumber: 2
            payoutState:
              allowPayout: false
              payoutLimit:
                currency: EUR
                value: 1000
              disabled: true
              disableReason: Reason for disabled status
              tierNumber: 2
            events:
            - event: InactivateAccount
              executionDate: '2019-01-01T01:00:00+01:00'
              reason: Reason of event
          description: description for account holder
          invalidFields:
          - errorCode: 1
            errorDescription: Field is missing
            fieldType:
              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown
              fieldName: unknown
              shareholderCode: SH00001
          legalEntity: Business
          verification:
            accountHolder:
              checks:
              - type: IDENTITY_VERIFICATION
                status: PENDING
                summary:
                  code: 100
                  description: KYC check summary description
                requiredFields:
                - field.missing
            shareholders:
            - checks:
              - type: IDENTITY_VERIFICATION
                status: PENDING
                summary:
                  code: 100
                  description: KYC check summary description
                requiredFields:
                - field.missing
              shareholderCode: SH000001
            bankAccounts:
            - checks:
              - type: IDENTITY_VERIFICATION
                status: PENDING
                summary:
                  code: 100
                  description: KYC check summary description
                requiredFields:
                - field.missing
              bankAccountUUID: 00000000-0000-0000-0000-000000000000
    post-ACCOUNT_HOLDER_CREATED-accountHolderCreated-failed:
      summary: ACCOUNT_HOLDER_CREATED failed example
      value:
        eventDate: '1970-01-01T01:00:00+01:00'
        eventType: ACCOUNT_HOLDER_CREATED
        executingUserKey: executing-user-key
        live: false
        mimeType: genericNotification
        pspReference: TSTPSPR0001
        content:
          accountHolderCode: AH000001
          accountState:
            allowPayout: false
            allowProcessing: false
            disableReason: Reason for disabled status
            disabled: true
            stateDeadline: '1970-01-01T01:00:00+01:00'
            stateLimit:
              amount: 100
              currency: EUR
            stateType: Processing
            tierNumber: 2
          amount:
            currency: EUR
            value: 10
          totalAmountBeforeLimit:
            currency: EUR
            value: 100
          transactionDate: '1970-01-01T01:00:00+01:00'
          transactionFailed: false
    post-ACCOUNT_HOLDER_CREATED-accountHolderCreated-individuals:
      summary: ACCOUNT_HOLDER_CREATED for individuals example
      value:
        eventDate: '2019-01-01T01:00:00+01:00'
        eventType: ACCOUNT_HOLDER_CREATED
        executingUserKey: executing-user-key
        live: false
        pspReference: TSTPSPR0001
        content:
          pspReference: TSTPSPR0001
          resultCode: Success
          submittedAsync: false
          accountCode: AC0000000001
          accountHolderCode: AHC00000001
          accountHolderDetails:
            address:
              city: Amsterdam
              country: NL
              houseNumberOrName: 96/A
              postalCode: 1000AA
              stateOrProvince: NH
              street: Street
            bankAccountDetails:
            - accountNumber: '00000000'
              accountType: checking
              bankAccountName: Account name
              bankAccountUUID: 00000000-0000-0000-0000-000000000000
              bankBicSwift: BSWFT
              bankCity: Amsterdam
              bankCode: '00000000'
              bankName: Bank Name Co
              branchCode: '00000000'
              checkCode: '1234'
              countryCode: NL
              currencyCode: EUR
              iban: NL00NONE1234123412
              ownerCity: Amsterdam
              ownerCountryCode: NL
              ownerDateOfBirth: '1981-02-27'
              ownerHouseNumberOrName: 32/B
              ownerName: Owner Name
              ownerNationality: NL
              ownerPostalCode: 1000AA
              ownerState: NH
              ownerStreet: Owner Street
              primaryAccount: false
              taxId: OT#12345
              urlForVerification: http://adyen.com
            email: contact@adyen.com
            fullPhoneNumber: '+31858888138'
            individualDetails:
              name:
                firstName: Firstname
                gender: UNKNOWN
                infix: infix
                lastName: Lastname
              personalData:
                dateOfBirth: '1981-02-27'
                documentData:
                - expirationDate: '2030-12-31'
                  issuerCountry: NL
                  issuerState: NH
                  number: ID#123456
                  type: ID
                idNumber: ID#123456
                nationality: NL
            merchantCategoryCode: '1212'
            metadata:
              MetaKey: MetaValue
            phoneNumber:
              phoneCountryCode: NL
              phoneNumber: '858888138'
              phoneType: Landline
            webAddress: https://adyen.com
          accountHolderStatus:
            status: Active
            statusReason: Reason of status
            processingState:
              disabled: true
              disableReason: Reason for disabled status
              processedFrom:
                currency: EUR
                value: 10
              processedTo:
                currency: EUR
                value: 100
              tierNumber: 2
            payoutState:
              allowPayout: false
              payoutLimit:
                currency: EUR
                value: 1000
              disabled: true
              disableReason: Reason for disabled status
              tierNumber: 2
            events:
            - event: InactivateAccount
              executionDate: '1970-01-01T01:00:00+01:00'
              reason: Reason of event
          description: description for account holder
          invalidFields:
          - errorCode: 1
            errorDescription: Field is missing
            fieldType:
              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown
              fieldName: unknown
              shareholderCode: SH00001
          legalEntity: Individual
          verification:
            accountHolder:
              checks:
              - type: IDENTITY_VERIFICATION
                status: PENDING
                summary:
                  code: 100
                  description: KYC check summary description
                requiredFields:
                - field.missing
            bankAccounts:
            - checks:
              - type: IDENTITY_VERIFICATION
                status: PENDING
                summary:
                  code: 100
                  description: KYC check summary description
                requiredFields:
                - field.missing
              bankAccountUUID: 00000000-0000-0000-0000-000000000000
    post-ACCOUNT_HOLDER_PAYOUT-accountHolderPayout-failed:
      summary: ACCOUNT_HOLDER_PAYOUT failed example
      value:
        eventDate: '2019-01-01T01:00:00+01:00'
        eventType: ACCOUNT_HOLDER_PAYOUT
        executingUserKey: executing-user-key
        live: false
        pspReference: TSTPSPR0001
        content:
          accountCode: AC00000001
          accountHolderCode: AH00000001
          amount:
            currency: EUR
            value: 100
          amounts:
          - currency: EUR
            value: 10
          bankAccountDetail:
            accountNumber: '00000000'
            accountType: checking
            bankAccountName: Account name
            bankAccountUUID: 00000000-0000-0000-0000-000000000000
            bankBicSwift: BSWFT
            bankCity: Amsterdam
            bankCode: '00000000'
            bankName: Bank Name Co
            branchCode: '00000000'
            checkCode: '1234'
            countryCode: NL
            currencyCode: EUR
            iban: NL00NONE1234123412
            ownerCity: Amsterdam
            ownerCountryCode: NL
            ownerDateOfBirth: '1981-02-27'
            ownerHouseNumberOrName: 32/B
            ownerName: Owner Name
            ownerNationality: NL
            ownerPostalCode: 1000AA
            ownerState: NH
            ownerStreet: Owner Street
            primaryAccount: false
            taxId: OT#12345
            urlForVerification: http://adyen.com
          description: description of payout
          merchantReference: MRef#00000001
          status:
            message:
              code: '10_069'
              text: 'Payout has been failed for account seller1. Details: Payout has
                been rejected by the beneficiary bank.'
            statusCode: Failed
    post-ACCOUNT_HOLDER_PAYOUT-accountHolderPayout-initiated:
      summary: ACCOUNT_HOLDER_PAYOUT initiated example
      value:
        eventDate: '2019-01-01T01:00:00+01:00'
        eventType: ACCOUNT_HOLDER_PAYOUT
        executingUserKey: executing-user-key
        live: false
        pspReference: TSTPSPR0001
        content:
          accountCode: AC00000001
          accountHolderCode: AH00000001
          amount:
            currency: EUR
            value: 100
          amounts:
          - currency: EUR
            value: 10
          bankAccountDetail:
            accountNumber: '00000000'
            accountType: checking
            bankAccountName: Account name
            bankAccountUUID: 00000000-0000-0000-0000-000000000000
            bankBicSwift: BSWFT
            bankCity: Amsterdam
            bankCode: '00000000'
            bankName: Bank Name Co
            branchCode: '00000000'
            checkCode: '1234'
            countryCode: NL
            currencyCode: EUR
            iban: NL00NONE1234123412
            ownerCity: Amsterdam
            ownerCountryCode: NL
            ownerDateOfBirth: '1981-02-27'
            ownerHouseNumberOrName: 32/B
            ownerName: Owner Name
            ownerNationality: NL
            ownerPostalCode: 1000AA
            ownerState: NH
            ownerStreet: Owner Street
            primaryAccount: false
            taxId: OT#12345
            urlForVerification: http://adyen.com
          description: description of payout
          merchantReference: MRef#00000001
          status:
            statusCode: Initiated
    post-ACCOUNT_HOLDER_STATUS_CHANGE-accountHolderStatusChange:
      summary: ACCOUNT_HOLDER_STATUS_CHANGE example
      value:
        eventDate: '2019-01-01T01:00:00+01:00'
        eventType: ACCOUNT_HOLDER_STATUS_CHANGE
        executingUserKey: executing-user-key
        live: false
        pspReference: TSTPSPR0001
        content:
          accountHolderCode: AH000001
          oldStatus:
            status: Active
            statusReason: Reason of status
            processingState:
              disabled: true
              disableReason: Reason for disabled status
              processedFrom:
                currency: EUR
                value: 10
              processedTo:
                currency: EUR
                value: 100
              tierNumber: 2
            payoutState:
              allowPayout: false
              payoutLimit:
                currency: EUR
                value: 1000
              disabled: true
              disableReason: Reason of why the payout was disabled
              tierNumber: 2
            events:
            - event: InactivateAccount
              executionDate: '1970-01-01T01:00:00+01:00'
              reason: Reason of event
          newStatus:
            status: Active
            statusReason: Reason of status
            processingState:
              disabled: true
              disableReason: Reason for disabled status
              processedFrom:
                currency: EUR
                value: 10
              processedTo:
                currency: EUR
                value: 100
              tierNumber: 2
            payoutState:
              allowPayout: false
              payoutLimit:
                currency: EUR
                value: 1000
              disabled: true
              disableReason: Reason for disabled status
              tierNumber: 2
            events:
            - event: InactivateAccount
              executionDate: '1970-01-01T01:00:00+01:00'
              reason: Reason of event
          reason: status change reason
    post-ACCOUNT_HOLDER_STORE_STATUS_CHANGE-accountHolderStoreStatusChange:
      summary: ACCOUNT_HOLDER_STORE_STATUS_CHANGE example
      value:
        eventType: ACCOUNT_HOLDER_STORE_STATUS_CHANGE
        eventDate: '2018-04-23T13:13:44+02:00'
        executingUserKey: ws
        live: true
        pspReference: '1313642467023511'
        content:
          accountHolderCode: YOUR_UNIQUE_ACCOUNT_HOLDER_CODE
          store: UNIQUE_SUBMERCHANT_STORE_ID
          storeReference: YOUR_SUBMERCHANT_STORE_ID
          newStatus: Active
          oldStatus: Pending
          reason: YOUR_REASON
    post-ACCOUNT_HOLDER_UPDATED-accountHolderUpdated:
      summary: ACCOUNT CLOSED example
      value:
        eventDate: '2019-01-01T01:00:00+01:00'
        eventType: ACCOUNT_HOLDER_UPDATED
        executingUserKey: executing-user-key
        live: false
        pspReference: TSTPSPR0001
        content:
          pspReference: TSTPSPR0001
          resultCode: Success
          submittedAsync: false
          accountHolderCode: AHC00000001
          accountHolderDetails:
            address:
              city: Amsterdam
              country: NL
              houseNumberOrName: 96/A
              postalCode: 1000AA
              stateOrProvince: NH
              street: Street
            bankAccountDetails:
            - accountNumber: '00000000'
              accountType: checking
              bankAccountName: Account name
              bankAccountUUID: 00000000-0000-0000-0000-000000000000
              bankBicSwift: BSWFT
              bankCity: Amsterdam
              bankCode: '00000000'
              bankName: Bank Name Co
              branchCode: '00000000'
              checkCode: '1234'
              countryCode: NL
              currencyCode: EUR
              iban: NL00NONE1234123412
              ownerCity: Amsterdam
              ownerCountryCode: NL
              ownerDateOfBirth: '1981-02-27'
              ownerHouseNumberOrName: 32/B
              ownerName: Owner Name
              ownerNationality: NL
              ownerPostalCode: 1000AA
              ownerState: NH
              ownerStreet: Owner Street
              primaryAccount: false
              taxId: OT#12345
              urlForVerification: http://adyen.com
            businessDetails:
              doingBusinessAs: Business name
              legalBusinessName: Legal Business Co
              registrationNumber: Reg#1234
              shareholders:
              - address:
                  city: Amsterdam
                  country: NL
                  houseNumberOrName: 96/A
                  postalCode: 1000AA
                  stateOrProvince: NH
                  street: Street
                email: contact@adyen.com
                fullPhoneNumber: '+31858888138'
                name:
                  firstName: Firstname
                  gender: UNKNOWN
                  infix: infix
                  lastName: Lastname
                personalData:
                  dateOfBirth: '1981-02-27'
                  documentData:
                  - expirationDate: '2030-12-31'
                    issuerCountry: NL
                    issuerState: NH
                    number: ID#123456
                    type: ID
                  idNumber: ID#123456
                  nationality: NL
                phoneNumber:
                  phoneCountryCode: NL
                  phoneNumber: '858888138'
                  phoneType: Landline
                shareholderCode: SH00001
                webAddress: https://www.adyen.com/
              taxId: TaxID#1234
            email: contact@adyen.com
            fullPhoneNumber: '+31858888138'
            individualDetails:
              name:
                firstName: Firstname
                gender: UNKNOWN
                infix: infix
                lastName: Lastname
              personalData:
                dateOfBirth: '1981-02-27'
                documentData:
                - expirationDate: '2030-12-31'
                  issuerCountry: NL
                  issuerState: NH
                  number: ID#123456
                  type: ID
                idNumber: ID#123456
                nationality: NL
            merchantCategoryCode: '1212'
            metadata:
              MetaKey: MetaValue
            phoneNumber:
              phoneCountryCode: NL
              phoneNumber: '858888138'
              phoneType: Landline
            webAddress: https://adyen.com
          accountHolderStatus:
            status: Active
            statusReason: Reason of status
            processingState:
              disabled: true
              disableReason: Reason for disabled status
              processedFrom:
                currency: EUR
                value: 10
              processedTo:
                currency: EUR
                value: 100
              tierNumber: 2
            payoutState:
              allowPayout: false
              payoutLimit:
                currency: EUR
                value: 1000
              disabled: true
              disableReason: Reason for disabled status
              tierNumber: 2
            events:
            - event: InactivateAccount
              executionDate: '1970-01-01T01:00:00+01:00'
              reason: Reason of event
          description: description for account holder
          invalidFields:
          - errorCode: 1
            errorDescription: Field is missing
            fieldType:
              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown
              fieldName: unknown
              shareholderCode: SH00001
          legalEntity: Business
          updatedFields:
          - field: AccountHolderDetails.BusinessDetails.Shareholders.unknown
            fieldName: unknown
            shareholderCode: SH00001
          verification:
            accountHolder:
              checks:
              - type: IDENTITY_VERIFICATION
                status: PENDING
                summary:
                  code: 100
                  description: KYC check summary description
                requiredFields:
                - field.missing
            shareholders:
            - checks:
              - type: IDENTITY_VERIFICATION
                status: PENDING
                summary:
                  code: 100
                  description: KYC check summary description
                requiredFields:
                - field.missing
              shareholderCode: SH000001
            bankAccounts:
            - checks:
              - type: IDENTITY_VERIFICATION
                status: PENDING
                summary:
                  code: 100
                  description: KYC check summary description
                requiredFields:
                - field.missing
              bankAccountUUID: 00000000-0000-0000-0000-000000000000
    post-ACCOUNT_HOLDER_VERIFICATION-accountHolderVerification:
      summary: ACCOUNT_HOLDER_VERIFICATION example
      value:
        eventDate: '2019-01-01T01:00:00+01:00'
        eventType: ACCOUNT_HOLDER_VERIFICATION
        executingUserKey: executing-user-key
        live: false
        pspReference: TSTPSPR0001
        content:
          accountHolderCode: AH0000001
          bankAccountUUID: 00000000-0000-0000-0000-000000000000
          statusSummary:
            code: 1302
            description: This user was not found in the database. Please update your
              personal details or upload a document
          verificationStatus: INVALID_DATA
          verificationType: IDENTITY_VERIFICATION
    post-ACCOUNT_UPDATED-accountUpdated:
      summary: ACCOUNT_UPDATED example
      value:
        eventDate: '2019-01-01T01:00:00+01:00'
        eventType: ACCOUNT_UPDATED
        executingUserKey: executing-user-key
        live: false
        pspReference: TSTPSPR0001
        content:
          pspReference: TSTPSPR0001
          resultCode: Success
          submittedAsync: false
          accountCode: AC0000000001
          description: account description
          payoutSchedule:
            nextScheduledPayout: '2019-01-02T01:00:00+01:00'
            schedule: DAILY
    post-BENEFICIARY_SETUP-beneficiarySetup:
      summary: BENEFICIARY_SETUP example
      value:
        eventDate: '2019-01-01T01:00:00+01:00'
        eventType: BENEFICIARY_SETUP
        executingUserKey: executing-user-key
        live: false
        pspReference: TSTPSPR0001
        content:
          destinationAccountCode: AC00000001D
          destinationAccountHolderCode: AH00000001D
          merchantReference: MRef#000000001
          sourceAccountCode: AC0000001S
          sourceAccountHolderCode: AH000000001S
          transferDate: '2019-01-01T01:00:00+01:00'
          transferredTransactionCount: 3
    post-COMPENSATE_NEGATIVE_BALANCE-compensateNegativeBalance:
      summary: COMPENSATE_NEGATIVE_BALANCE example
      value:
        eventDate: '2019-01-01T01:00:00+01:00'
        eventType: COMPENSATE_NEGATIVE_BALANCE
        executingUserKey: executing-user-key
        live: false
        pspReference: TSTPSPR0001
        content:
          records:
          - accountCode: AC000001
            amount:
              currency: EUR
              value: 10
            transferDate: '2019-01-01T01:00:00+01:00'
    post-DIRECT_DEBIT_INITIATED-directDebitInitiated:
      summary: DIRECT_DEBIT_INITIATED example
      value:
        eventDate: '2021-02-01T14:19:14-08:00'
        eventType: DIRECT_DEBIT_INITIATED
        live: 'false'
        executingUserKey: executing-user-key
        pspReference: '8515681150749298'
        content:
          accountCode: '8825579787887769'
          amount:
            currency: USD
            value: 6200
          debitInitiationDate: '2021-02-01'
          splits:
          - account: '8535516988037431'
            amount:
              currency: EUR
              value: 6000
            reference: YOUR_SPLIT_REFERENCE_1
            type: MarketPlace
          - amount:
              currency: EUR
              value: 200
            reference: YOUR_SPLIT_REFERENCE_2
            type: Commission
          status:
            statusCode: Initiated
    post-DIRECT_DEBIT_INITIATED-directDebitInitiated-failed:
      summary: DIRECT_DEBIT_INITIATED failed example
      value:
        eventDate: '2021-02-01T14:19:14-08:00'
        eventType: DIRECT_DEBIT_INITIATED
        live: 'false'
        executingUserKey: executing-user-key
        pspReference: '8315659584588245'
        content:
          accountCode: '8825579787887769'
          amount:
            currency: EUR
            value: 500000
          debitInitiationDate: '2021-07-07'
          merchantAccountCode: YOUR_MERCHANT_ACCOUNT
          splits:
          - account: '8535516988037431'
            amount:
              currency: EUR
              value: 490000
            reference: YOUR_SPLIT_REFERENCE_1
            type: MarketPlace
          - amount:
              currency: EUR
              value: 10000
            reference: YOUR_SPLIT_REFERENCE_2
            type: Commission
          status:
            message:
              code: '10_145'
              text: Failed to initiate the direct debit for account holder.
            statusCode: Failed
    post-PAYMENT_FAILURE-paymentFailure:
      summary: PAYMENT_FAILURE example
      value:
        eventDate: '2019-01-01T01:00:00+01:00'
        eventType: PAYMENT_FAILURE
        executingUserKey: executing-user-key
        live: false
        pspReference: TSTPSPR0001
        content:
          errorFields:
          - errorCode: 52
            errorDescription: 'Amount is negative or zero. value: <empty>'
            fieldType:
              field: AccountHolderDetails.BusinessDetails.Shareholders.unknown
              fieldName: unknown
              shareholderCode: SH00001
          errorMessage:
            code: '100'
            text: test error message
    post-REPORT_AVAILABLE-reportAvailable:
      summary: REPORT_AVAILABLE example
      value:
        eventDate: '2019-01-01T01:00:00+01:00'
        eventType: REPORT_AVAILABLE
        executingUserKey: executing-user-key
        live: false
        pspReference: TSTPSPR0001
        content:
          accountCode: AC000001
          accountType: account-type
          eventDate: '2019-01-01T01:00:00+01:00'
          remoteAccessUrl: http://adyen.com/
          success: false
    post-SCHEDULED_REFUNDS-scheduledRefunds:
      summary: SCHEDULED_REFUNDS example
      value:
        eventDate: '2019-01-01T01:00:00+01:00'
        eventType: SCHEDULED_REFUNDS
        executingUserKey: executing-user-key
        live: false
        pspReference: TSTPSPR0001
        content:
          accountCode: AC000001
          accountHolderCode: AH000001
          lastPayout:
            amount:
              currency: EUR
              value: 10
            bankAccountDetail:
              accountNumber: '00000000'
              accountType: checking
              bankAccountName: Account name
              bankAccountUUID: 00000000-0000-0000-0000-000000000000
              bankBicSwift: BSWFT
              bankCity: Amsterdam
              bankCode: '00000000'
              bankName: Bank Name Co
              branchCode: '00000000'
              checkCode: '1234'
              countryCode: NL
              currencyCode: EUR
              iban: NL00NONE1234123412
              ownerCity: Amsterdam
              ownerCountryCode: NL
              ownerDateOfBirth: '1981-02-27'
              ownerHouseNumberOrName: 32/B
              ownerName: Owner Name
              ownerNationality: NL
              ownerPostalCode: 1000AA
              ownerState: NH
              ownerStreet: Owner Street
              primaryAccount: false
              taxId: OT#12345
              urlForVerification: http://adyen.com
            captureMerchantReference: MRef0000001C
            capturePspReference: TSTPSPR00000001C
            creationDate: '2019-01-01T01:00:00+01:00'
            description: transaction description
            destinationAccountCode: AC0000001D
            disputePspReference: TSTPSPR00000000D
            disputeReasonCode: DRC001
            merchantReference: MRef#00000001
            paymentPspReference: TSTPSPR0000000PO
            payoutPspReference: TSTPSPR000000PI
            pspReference: TSTPSPR000000001
            sourceAccountCode: AC00000001S
            transactionStatus: Debited
            transferCode: TC0001
          refundResults:
          - originalTransaction:
              amount:
                currency: EUR
                value: 10
              bankAccountDetail:
                accountNumber: '00000000'
                accountType: checking
                bankAccountName: Account name
                bankAccountUUID: 00000000-0000-0000-0000-000000000000
                bankBicSwift: BSWFT
                bankCity: Amsterdam
                bankCode: '00000000'
                bankName: Bank Name Co
                branchCode: '00000000'
                checkCode: '1234'
                countryCode: NL
                currencyCode: EUR
                iban: NL00NONE1234123412
                ownerCity: Amsterdam
                ownerCountryCode: NL
                ownerDateOfBirth: '1981-02-27'
                ownerHouseNumberOrName: 32/B
                ownerName: Owner Name
                ownerNationality: NL
                ownerPostalCode: 1000AA
                ownerState: NH
                ownerStreet: Owner Street
                primaryAccount: false
                taxId: OT#12345
                urlForVerification: http://adyen.com
              captureMerchantReference: MRef0000001C
              capturePspReference: TSTPSPR00000001C
              creationDate: '2019-01-01T01:00:00+01:00'
              description: transaction description
              destinationAccountCode: AC0000001D
              disputePspReference: TSTPSPR00000000D
              disputeReasonCode: DRC001
              merchantReference: MRef#00000001
              paymentPspReference: TSTPSPR0000000PO
              payoutPspReference: TSTPSPR000000PI
              pspReference: TSTPSPR000000001
              sourceAccountCode: AC00000001S
              transactionStatus: Debited
              transferCode: TC0001
            pspReference: TSTPSPR00000001
            response: response
    post-TRANSFER_FUNDS-transferFunds:
      summary: TRANSFER_FUNDS example
      value:
        eventDate: '2019-01-01T01:00:00+01:00'
        eventType: TRANSFER_FUNDS
        executingUserKey: executing-user-key
        live: false
        pspReference: TSTPSPR0001
        content:
          amount:
            currency: EUR
            value: 10
          destinationAccountCode: AC0000001D
          merchantReference: MRef#000001
          sourceAccountCode: AC0000001S
          status:
            message:
              code: '100'
              text: test message
            statusCode: Success
          transferCode: TC0001
