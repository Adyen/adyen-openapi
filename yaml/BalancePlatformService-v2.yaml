openapi: 3.1.0
servers:
- url: https://balanceplatform-api-test.adyen.com/bcl/v2
info:
  version: '2'
  x-publicVersion: true
  title: Configuration API
  description: "The Configuration API enables you to create a platform where you can\
    \ onboard your users as account holders and create balance accounts, cards, and\
    \ business accounts.\n\n## Authentication\nYour Adyen contact will provide your\
    \ API credential and an API key. To connect to the API, add an `X-API-Key` header\
    \ with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type:\
    \ application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively,\
    \ you can use the username and password to connect to the API using basic authentication.\
    \ For example:\n\n```\ncurl\n-H \"Content-Type: application/json\" \\\n-U \"ws@BalancePlatform.YOUR_BALANCE_PLATFORM\"\
    :\"YOUR_WS_PASSWORD\" \\\n...\n```\n## Versioning\nThe Configuration API supports\
    \ [versioning](https://docs.adyen.com/development-resources/versioning) using\
    \ a version suffix in the endpoint URL. This suffix has the following format:\
    \ \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://balanceplatform-api-test.adyen.com/bcl/v2/accountHolders\n\
    ```\n## Going live\nWhen going live, your Adyen contact will provide your API\
    \ credential for the live environment. You can then use the API key or the username\
    \ and password to send requests to `https://balanceplatform-api-live.adyen.com/bcl/v2`."
  termsOfService: https://www.adyen.com/legal/terms-and-conditions
  contact:
    name: Adyen Developer Experience team
    url: https://github.com/Adyen/adyen-openapi
x-groups:
- Platform
- Account holders
- Balance accounts
- Payment instruments
- Payment instrument groups
- Transaction rules
- Bank account validation
- Network tokens
- Grant accounts
- Grant offers
- Transfer routes
tags:
- name: Platform
- name: Grant offers
- name: Payment instrument groups
- name: Network tokens
- name: Account holders
- name: Payment instruments
- name: Grant accounts
- name: Bank account validation
- name: Balance accounts
- name: Transaction rules
- name: Transfer routes
paths:
  /accountHolders:
    post:
      tags:
      - Account holders
      summary: Create an account holder
      description: 'Creates an account holder linked to a [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities).


        '
      x-addedInVersion: '1'
      operationId: post-accountHolders
      x-groupName: Account holders
      x-sortIndex: 1
      x-methodName: createAccountHolder
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              createAccountHolder:
                $ref: '#/components/examples/post-accountHolders-createAccountHolder'
            schema:
              $ref: '#/components/schemas/AccountHolderInfo'
      responses:
        '200':
          content:
            application/json:
              examples:
                createAccountHolder:
                  $ref: '#/components/examples/post-accountHolders-createAccountHolder-200'
              schema:
                $ref: '#/components/schemas/AccountHolder'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /accountHolders/{id}:
    get:
      tags:
      - Account holders
      summary: Get an account holder
      description: Returns an account holder.
      x-addedInVersion: '1'
      operationId: get-accountHolders-id
      x-groupName: Account holders
      x-sortIndex: 3
      x-methodName: getAccountHolder
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the account holder.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-accountHolders-id-success-200'
              schema:
                $ref: '#/components/schemas/AccountHolder'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
    patch:
      tags:
      - Account holders
      summary: Update an account holder
      description: Updates an account holder. When updating an account holder resource,
        if a parameter is not provided in the request, it is left unchanged.
      x-addedInVersion: '1'
      operationId: patch-accountHolders-id
      x-groupName: Account holders
      x-sortIndex: 2
      x-methodName: updateAccountHolder
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              requestAccountHolderCapability:
                $ref: '#/components/examples/patch-accountHolders-id-requestAccountHolderCapability'
              updateAccountHolderStatus:
                $ref: '#/components/examples/patch-accountHolders-id-updateAccountHolderStatus'
            schema:
              $ref: '#/components/schemas/AccountHolderUpdateRequest'
      parameters:
      - description: The unique identifier of the account holder.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                requestAccountHolderCapability:
                  $ref: '#/components/examples/patch-accountHolders-id-requestAccountHolderCapability-200'
                updateAccountHolderStatus:
                  $ref: '#/components/examples/patch-accountHolders-id-updateAccountHolderStatus-200'
              schema:
                $ref: '#/components/schemas/AccountHolder'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /accountHolders/{id}/balanceAccounts:
    get:
      tags:
      - Account holders
      summary: Get all balance accounts of an account holder
      description: "Returns a paginated list of the balance accounts associated with\
        \ an account holder. To fetch multiple pages, use the query parameters. \n\
        \nFor example, to limit the page to 5 balance accounts and skip the first\
        \ 10, use `/accountHolders/{id}/balanceAccounts?limit=5&offset=10`."
      x-addedInVersion: '1'
      operationId: get-accountHolders-id-balanceAccounts
      x-groupName: Account holders
      x-sortIndex: 4
      x-methodName: getAllBalanceAccountsOfAccountHolder
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the account holder.
        name: id
        in: path
        required: true
        schema:
          type: string
      - description: The number of items that you want to skip.
        name: offset
        in: query
        required: false
        schema:
          format: int32
          type: integer
      - description: The number of items returned per page, maximum 100 items. By
          default, the response returns 10 items per page.
        name: limit
        in: query
        required: false
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-accountHolders-id-balanceAccounts-success-200'
              schema:
                $ref: '#/components/schemas/PaginatedBalanceAccountsResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /balanceAccounts:
    post:
      tags:
      - Balance accounts
      summary: Create a balance account
      description: Creates a balance account that holds the funds of the associated
        account holder.
      x-addedInVersion: '1'
      operationId: post-balanceAccounts
      x-groupName: Balance accounts
      x-sortIndex: 1
      x-methodName: createBalanceAccount
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              createBalanceAccount:
                $ref: '#/components/examples/post-balanceAccounts-createBalanceAccount'
            schema:
              $ref: '#/components/schemas/BalanceAccountInfo'
      responses:
        '200':
          content:
            application/json:
              examples:
                createBalanceAccount:
                  $ref: '#/components/examples/post-balanceAccounts-createBalanceAccount-200'
              schema:
                $ref: '#/components/schemas/BalanceAccount'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /balanceAccounts/{balanceAccountId}/sweeps:
    get:
      tags:
      - Balance accounts
      summary: Get all sweeps for a balance account
      description: 'Returns a list of the sweeps configured for a balance account.


        To fetch multiple pages, use the query parameters. For example, to limit the
        page to 5 sweeps and to skip the first 10, use `/balanceAccounts/{balanceAccountId}/sweeps?limit=5&offset=10`.'
      x-addedInVersion: '2'
      operationId: get-balanceAccounts-balanceAccountId-sweeps
      x-groupName: Balance accounts
      x-sortIndex: 7
      x-methodName: getAllSweepsForBalanceAccount
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the balance account.
        name: balanceAccountId
        in: path
        required: true
        schema:
          type: string
      - description: The number of items that you want to skip.
        name: offset
        in: query
        required: false
        schema:
          format: int32
          type: integer
      - description: The number of items returned per page, maximum 100 items. By
          default, the response returns 10 items per page.
        name: limit
        in: query
        required: false
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-balanceAccounts-balanceAccountId-sweeps-success-200'
              schema:
                $ref: '#/components/schemas/BalanceSweepConfigurationsResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
    post:
      tags:
      - Balance accounts
      summary: Create a sweep
      description: 'Creates a sweep that results in moving funds from or to a balance
        account.


        A sweep pulls in or pushes out funds based on a defined schedule, amount,
        currency, and a source or a destination.'
      x-addedInVersion: '2'
      operationId: post-balanceAccounts-balanceAccountId-sweeps
      x-groupName: Balance accounts
      x-sortIndex: 5
      x-methodName: createSweep
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              createSweep-pull:
                $ref: '#/components/examples/post-balanceAccounts-balanceAccountId-sweeps-createSweep-pull'
              createSweep-push:
                $ref: '#/components/examples/post-balanceAccounts-balanceAccountId-sweeps-createSweep-push'
              createSweep-push-priorities:
                $ref: '#/components/examples/post-balanceAccounts-balanceAccountId-sweeps-createSweep-push-priorities'
            schema:
              $ref: '#/components/schemas/CreateSweepConfigurationV2'
      parameters:
      - description: The unique identifier of the balance account.
        name: balanceAccountId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                createSweep-pull:
                  $ref: '#/components/examples/post-balanceAccounts-balanceAccountId-sweeps-createSweep-pull-200'
                createSweep-push:
                  $ref: '#/components/examples/post-balanceAccounts-balanceAccountId-sweeps-createSweep-push-200'
                createSweep-push-priorities:
                  $ref: '#/components/examples/post-balanceAccounts-balanceAccountId-sweeps-createSweep-push-priorities-200'
              schema:
                $ref: '#/components/schemas/SweepConfigurationV2'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /balanceAccounts/{balanceAccountId}/sweeps/{sweepId}:
    delete:
      tags:
      - Balance accounts
      summary: Delete a sweep
      description: Deletes a sweep for a balance account.
      x-addedInVersion: '2'
      operationId: delete-balanceAccounts-balanceAccountId-sweeps-sweepId
      x-groupName: Balance accounts
      x-sortIndex: 9
      x-methodName: deleteSweep
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the balance account.
        name: balanceAccountId
        in: path
        required: true
        schema:
          type: string
      - description: The unique identifier of the sweep.
        name: sweepId
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: 'No Content - look at the actual response code for the status
            of the request '
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
    get:
      tags:
      - Balance accounts
      summary: Get a sweep
      description: Returns a sweep.
      x-addedInVersion: '2'
      operationId: get-balanceAccounts-balanceAccountId-sweeps-sweepId
      x-groupName: Balance accounts
      x-sortIndex: 8
      x-methodName: getSweep
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the balance account.
        name: balanceAccountId
        in: path
        required: true
        schema:
          type: string
      - description: The unique identifier of the sweep.
        name: sweepId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-balanceAccounts-balanceAccountId-sweeps-sweepId-success-200'
              schema:
                $ref: '#/components/schemas/SweepConfigurationV2'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
    patch:
      tags:
      - Balance accounts
      summary: Update a sweep
      description: Updates a sweep. When updating a sweep resource, note that if a
        request parameter is not provided, the parameter is left unchanged.
      x-addedInVersion: '2'
      operationId: patch-balanceAccounts-balanceAccountId-sweeps-sweepId
      x-groupName: Balance accounts
      x-sortIndex: 6
      x-methodName: updateSweep
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              updateSweep-status:
                $ref: '#/components/examples/patch-balanceAccounts-balanceAccountId-sweeps-sweepId-updateSweep-status'
            schema:
              $ref: '#/components/schemas/UpdateSweepConfigurationV2'
      parameters:
      - description: The unique identifier of the balance account.
        name: balanceAccountId
        in: path
        required: true
        schema:
          type: string
      - description: The unique identifier of the sweep.
        name: sweepId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                updateSweep-status:
                  $ref: '#/components/examples/patch-balanceAccounts-balanceAccountId-sweeps-sweepId-updateSweep-status-200'
              schema:
                $ref: '#/components/schemas/SweepConfigurationV2'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /balanceAccounts/{id}:
    get:
      tags:
      - Balance accounts
      summary: Get a balance account
      description: Returns a balance account and its balances for the default currency
        and other currencies with a non-zero balance.
      x-addedInVersion: '1'
      operationId: get-balanceAccounts-id
      x-groupName: Balance accounts
      x-sortIndex: 3
      x-methodName: getBalanceAccount
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the balance account.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-balanceAccounts-id-success-200'
              schema:
                $ref: '#/components/schemas/BalanceAccount'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
    patch:
      tags:
      - Balance accounts
      summary: Update a balance account
      description: Updates a balance account.
      x-addedInVersion: '1'
      operationId: patch-balanceAccounts-id
      x-groupName: Balance accounts
      x-sortIndex: 2
      x-methodName: updateBalanceAccount
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              updateBalanceAccount:
                $ref: '#/components/examples/patch-balanceAccounts-id-updateBalanceAccount'
            schema:
              $ref: '#/components/schemas/BalanceAccountUpdateRequest'
      parameters:
      - description: The unique identifier of the balance account.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                updateBalanceAccount:
                  $ref: '#/components/examples/patch-balanceAccounts-id-updateBalanceAccount-200'
              schema:
                $ref: '#/components/schemas/BalanceAccount'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /balanceAccounts/{id}/paymentInstruments:
    get:
      tags:
      - Balance accounts
      summary: Get all payment instruments for a balance account
      description: "Returns a paginated list of the payment instruments associated\
        \ with a balance account. \n\nTo fetch multiple pages, use the query parameters.For\
        \ example, to limit the page to 3 payment instruments and to skip the first\
        \ 6, use `/balanceAccounts/{id}/paymentInstruments?limit=3&offset=6`."
      x-addedInVersion: '1'
      operationId: get-balanceAccounts-id-paymentInstruments
      x-groupName: Balance accounts
      x-sortIndex: 4
      x-methodName: getAllPaymentInstrumentsForBalanceAccount
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the balance account.
        name: id
        in: path
        required: true
        schema:
          type: string
      - description: The number of items that you want to skip.
        name: offset
        in: query
        required: false
        schema:
          format: int32
          type: integer
      - description: The number of items returned per page, maximum 100 items. By
          default, the response returns 10 items per page.
        name: limit
        in: query
        required: false
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-balanceAccounts-id-paymentInstruments-success-200'
              schema:
                $ref: '#/components/schemas/PaginatedPaymentInstrumentsResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /balancePlatforms/{id}:
    get:
      tags:
      - Platform
      summary: Get a balance platform
      description: Returns a balance platform.
      x-addedInVersion: '1'
      operationId: get-balancePlatforms-id
      x-groupName: Platform
      x-sortIndex: 1
      x-methodName: getBalancePlatform
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the balance platform.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-balancePlatforms-id-success-200'
              schema:
                $ref: '#/components/schemas/BalancePlatform'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /balancePlatforms/{id}/accountHolders:
    get:
      tags:
      - Platform
      summary: Get all account holders under a balance platform
      description: "Returns a paginated list of all the account holders that belong\
        \ to the balance platform. To fetch multiple pages, use the query parameters.\
        \ \n\nFor example, to limit the page to 5 account holders and to skip the\
        \ first 20, use `/balancePlatforms/{id}/accountHolders?limit=5&offset=20`."
      x-addedInVersion: '1'
      operationId: get-balancePlatforms-id-accountHolders
      x-groupName: Platform
      x-sortIndex: 2
      x-methodName: getAllAccountHoldersUnderBalancePlatform
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the balance platform.
        name: id
        in: path
        required: true
        schema:
          type: string
      - description: The number of items that you want to skip.
        name: offset
        in: query
        required: false
        schema:
          format: int32
          type: integer
      - description: The number of items returned per page, maximum 100 items. By
          default, the response returns 10 items per page.
        name: limit
        in: query
        required: false
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-balancePlatforms-id-accountHolders-success-200'
              schema:
                $ref: '#/components/schemas/PaginatedAccountHoldersResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /grantAccounts/{id}:
    get:
      tags:
      - Grant accounts
      summary: Get a grant account
      description: Returns the details of the [grant account](https://docs.adyen.com/marketplaces-and-platforms/capital#grant-account).
      x-addedInVersion: '1'
      operationId: get-grantAccounts-id
      x-groupName: Grant accounts
      x-sortIndex: 1
      x-methodName: getGrantAccount
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the grant account.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapitalGrantAccount'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /grantOffers:
    get:
      tags:
      - Grant offers
      summary: Get all available grant offers
      description: Returns a list of all [grant offers](https://docs.adyen.com/marketplaces-and-platforms/capital#grant-offers)
        available for `accountHolderId` specified as a query parameter.
      x-addedInVersion: '2'
      operationId: get-grantOffers
      x-groupName: Grant offers
      x-sortIndex: 1
      x-methodName: getAllAvailableGrantOffers
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the grant account.
        name: accountHolderId
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrantOffers'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /grantOffers/{grantOfferId}:
    get:
      tags:
      - Grant offers
      summary: Get a grant offer
      description: Returns the details of a single grant offer.
      x-addedInVersion: '2'
      operationId: get-grantOffers-grantOfferId
      x-groupName: Grant offers
      x-sortIndex: 1
      x-methodName: getGrantOffer
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the grant offer.
        name: grantOfferId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrantOffer'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /networkTokens/{networkTokenId}:
    get:
      tags:
      - Network tokens
      summary: Get a network token
      description: Returns the details of a network token.
      x-addedInVersion: '1'
      operationId: get-networkTokens-networkTokenId
      x-groupName: Network tokens
      x-sortIndex: 1
      x-methodName: getNetworkToken
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the network token.
        name: networkTokenId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNetworkTokenResponse'
          description: OK - the request has succeeded.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
    patch:
      tags:
      - Network tokens
      summary: Update a network token
      description: Updates the status of the network token.
      x-addedInVersion: '1'
      operationId: patch-networkTokens-networkTokenId
      x-groupName: Network tokens
      x-sortIndex: 2
      x-methodName: updateNetworkToken
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNetworkTokenRequest'
      parameters:
      - description: The unique identifier of the network token.
        name: networkTokenId
        in: path
        required: true
        schema:
          type: string
      responses:
        '202':
          description: 'No Content - look at the actual response code for the status
            of the request '
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /paymentInstrumentGroups:
    post:
      tags:
      - Payment instrument groups
      summary: Create a payment instrument group
      description: Creates a payment instrument group to associate and group payment
        instrument resources together. You can apply a transaction rule to a payment
        instrument group.
      x-addedInVersion: '1'
      operationId: post-paymentInstrumentGroups
      x-groupName: Payment instrument groups
      x-sortIndex: 1
      x-methodName: createPaymentInstrumentGroup
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              createPaymentInstrumentGroups:
                $ref: '#/components/examples/post-paymentInstrumentGroups-createPaymentInstrumentGroups'
            schema:
              $ref: '#/components/schemas/PaymentInstrumentGroupInfo'
      responses:
        '200':
          content:
            application/json:
              examples:
                createPaymentInstrumentGroups:
                  $ref: '#/components/examples/post-paymentInstrumentGroups-createPaymentInstrumentGroups-200'
              schema:
                $ref: '#/components/schemas/PaymentInstrumentGroup'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /paymentInstrumentGroups/{id}:
    get:
      tags:
      - Payment instrument groups
      summary: Get a payment instrument group
      description: Returns the details of a payment instrument group.
      x-addedInVersion: '1'
      operationId: get-paymentInstrumentGroups-id
      x-groupName: Payment instrument groups
      x-sortIndex: 2
      x-methodName: getPaymentInstrumentGroup
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the payment instrument group.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-paymentInstrumentGroups-id-success-200'
              schema:
                $ref: '#/components/schemas/PaymentInstrumentGroup'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /paymentInstrumentGroups/{id}/transactionRules:
    get:
      tags:
      - Payment instrument groups
      summary: Get all transaction rules for a payment instrument group
      description: Returns a list of all the transaction rules associated with a payment
        instrument group.
      x-addedInVersion: '1'
      operationId: get-paymentInstrumentGroups-id-transactionRules
      x-groupName: Payment instrument groups
      x-sortIndex: 3
      x-methodName: getAllTransactionRulesForPaymentInstrumentGroup
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the payment instrument group.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-paymentInstrumentGroups-id-transactionRules-success-200'
              schema:
                $ref: '#/components/schemas/TransactionRulesResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /paymentInstruments:
    post:
      tags:
      - Payment instruments
      summary: Create a payment instrument
      description: "Creates a payment instrument to issue a physical card, a virtual\
        \ card, or a business account to your user.\n\n For more information, refer\
        \ to [Issue cards](https://docs.adyen.com/issuing/create-cards) or [Issue\
        \ business accounts](https://docs.adyen.com/marketplaces-and-platforms/business-accounts)."
      x-addedInVersion: '1'
      operationId: post-paymentInstruments
      x-groupName: Payment instruments
      x-sortIndex: 11
      x-methodName: createPaymentInstrument
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              createBusinessAccountNL:
                $ref: '#/components/examples/post-paymentInstruments-createBusinessAccountNL'
              createBusinessAccountUS:
                $ref: '#/components/examples/post-paymentInstruments-createBusinessAccountUS'
              createPhysicalCard:
                $ref: '#/components/examples/post-paymentInstruments-createPhysicalCard'
              createVirtualCard:
                $ref: '#/components/examples/post-paymentInstruments-createVirtualCard'
            schema:
              $ref: '#/components/schemas/PaymentInstrumentInfo'
      responses:
        '200':
          content:
            application/json:
              examples:
                createBusinessAccountNL:
                  $ref: '#/components/examples/post-paymentInstruments-createBusinessAccountNL-200'
                createBusinessAccountUS:
                  $ref: '#/components/examples/post-paymentInstruments-createBusinessAccountUS-200'
                createPhysicalCard:
                  $ref: '#/components/examples/post-paymentInstruments-createPhysicalCard-200'
                createVirtualCard:
                  $ref: '#/components/examples/post-paymentInstruments-createVirtualCard-200'
              schema:
                $ref: '#/components/schemas/PaymentInstrument'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /paymentInstruments/{id}:
    get:
      tags:
      - Payment instruments
      summary: Get a payment instrument
      description: Returns the details of a payment instrument.
      x-addedInVersion: '1'
      operationId: get-paymentInstruments-id
      x-groupName: Payment instruments
      x-sortIndex: 13
      x-methodName: getPaymentInstrument
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the payment instrument.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-paymentInstruments-id-success-200'
              schema:
                $ref: '#/components/schemas/PaymentInstrument'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
    patch:
      tags:
      - Payment instruments
      summary: Update a payment instrument
      description: Updates a payment instrument. Once a payment instrument is already
        active, you can only update its status. However, for cards created with **inactive**
        status, you can still update the balance account associated with the card.
      x-addedInVersion: '1'
      operationId: patch-paymentInstruments-id
      x-groupName: Payment instruments
      x-sortIndex: 12
      x-methodName: updatePaymentInstrument
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              updatePaymentInstrumentBalanceAccount:
                $ref: '#/components/examples/patch-paymentInstruments-id-updatePaymentInstrumentBalanceAccount'
              updatePaymentInstrumentStatus:
                $ref: '#/components/examples/patch-paymentInstruments-id-updatePaymentInstrumentStatus'
            schema:
              $ref: '#/components/schemas/PaymentInstrumentUpdateRequest'
      parameters:
      - description: The unique identifier of the payment instrument.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                updatePaymentInstrumentBalanceAccount:
                  $ref: '#/components/examples/patch-paymentInstruments-id-updatePaymentInstrumentBalanceAccount-200'
                updatePaymentInstrumentStatus:
                  $ref: '#/components/examples/patch-paymentInstruments-id-updatePaymentInstrumentStatus-200'
              schema:
                $ref: '#/components/schemas/UpdatePaymentInstrument'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /paymentInstruments/{id}/networkTokens:
    get:
      tags:
      - Payment instruments
      summary: List network tokens
      description: List the network tokens connected to a payment instrument.
      x-addedInVersion: '1'
      operationId: get-paymentInstruments-id-networkTokens
      x-groupName: Payment instruments
      x-sortIndex: 15
      x-methodName: listNetworkTokens
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the payment instrument.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkTokensResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /paymentInstruments/{id}/reveal:
    get:
      tags:
      - Payment instruments
      summary: Get the PAN of a payment instrument
      description: 'Returns the primary account number (PAN) of a payment instrument.


        To make this request, your API credential must have the following [role](https://docs.adyen.com/issuing/manage-access/api-credentials-web-service#api-permissions):


        * Balance Platform BCL PCI role'
      x-addedInVersion: '1'
      operationId: get-paymentInstruments-id-reveal
      x-groupName: Payment instruments
      x-sortIndex: 14
      x-methodName: getPanOfPaymentInstrument
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the payment instrument.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-paymentInstruments-id-reveal-success-200'
              schema:
                $ref: '#/components/schemas/PaymentInstrumentRevealInfo'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /paymentInstruments/{id}/transactionRules:
    get:
      tags:
      - Payment instruments
      summary: Get all transaction rules for a payment instrument
      description: Returns a list of transaction rules associated with a payment instrument.
      x-addedInVersion: '1'
      operationId: get-paymentInstruments-id-transactionRules
      x-groupName: Payment instruments
      x-sortIndex: 14
      x-methodName: getAllTransactionRulesForPaymentInstrument
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the payment instrument.
        name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-paymentInstruments-id-transactionRules-success-200'
              schema:
                $ref: '#/components/schemas/TransactionRulesResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /transactionRules:
    post:
      tags:
      - Transaction rules
      summary: Create a transaction rule
      description: Creates a [transaction rule](https://docs.adyen.com/issuing/transaction-rules).
        When your user makes a transaction with their Adyen-issued card, the transaction
        is allowed or declined based on the conditions and outcome defined in the
        transaction rule. You can apply the transaction rule to several cards, such
        as all the cards in your platform, or to a specific card. For use cases, see
        [examples](https://docs.adyen.com/issuing/transaction-rules/examples).
      x-addedInVersion: '1'
      operationId: post-transactionRules
      x-groupName: Transaction rules
      x-sortIndex: 1
      x-methodName: createTransactionRule
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              createTransactionRuleAllowPos:
                $ref: '#/components/examples/post-transactionRules-createTransactionRuleAllowPos'
              createTransactionRuleIncreaseScore:
                $ref: '#/components/examples/post-transactionRules-createTransactionRuleIncreaseScore'
              createTransactionRuleLimitSliding:
                $ref: '#/components/examples/post-transactionRules-createTransactionRuleLimitSliding'
              createTransactionRuleLimitTransaction:
                $ref: '#/components/examples/post-transactionRules-createTransactionRuleLimitTransaction'
            schema:
              $ref: '#/components/schemas/TransactionRuleInfo'
      responses:
        '200':
          content:
            application/json:
              examples:
                createTransactionRuleAllowPos:
                  $ref: '#/components/examples/post-transactionRules-createTransactionRuleAllowPos-200'
                createTransactionRuleIncreaseScore:
                  $ref: '#/components/examples/post-transactionRules-createTransactionRuleIncreaseScore-200'
                createTransactionRuleLimitSliding:
                  $ref: '#/components/examples/post-transactionRules-createTransactionRuleLimitSliding-200'
                createTransactionRuleLimitTransaction:
                  $ref: '#/components/examples/post-transactionRules-createTransactionRuleLimitTransaction-200'
              schema:
                $ref: '#/components/schemas/TransactionRule'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /transactionRules/{transactionRuleId}:
    delete:
      tags:
      - Transaction rules
      summary: Delete a transaction rule
      description: Deletes a transaction rule.
      x-addedInVersion: '1'
      operationId: delete-transactionRules-transactionRuleId
      x-groupName: Transaction rules
      x-sortIndex: 5
      x-methodName: deleteTransactionRule
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the transaction rule.
        name: transactionRuleId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/delete-transactionRules-transactionRuleId-success-200'
              schema:
                $ref: '#/components/schemas/TransactionRule'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
    get:
      tags:
      - Transaction rules
      summary: Get a transaction rule
      description: Returns the details of a transaction rule.
      x-addedInVersion: '1'
      operationId: get-transactionRules-transactionRuleId
      x-groupName: Transaction rules
      x-sortIndex: 2
      x-methodName: getTransactionRule
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      parameters:
      - description: The unique identifier of the transaction rule.
        name: transactionRuleId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  $ref: '#/components/examples/get-transactionRules-transactionRuleId-success-200'
              schema:
                $ref: '#/components/schemas/TransactionRuleResponse'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
    patch:
      tags:
      - Transaction rules
      summary: Update a transaction rule
      description: "Updates a transaction rule. \n\n* To update only the status of\
        \ a transaction rule, send only the `status` parameter. All other parameters\
        \ not provided in the request are left unchanged.\n\n* When updating any other\
        \ parameter, you need to send all existing resource parameters. If you omit\
        \ a parameter in the request, that parameter is removed from the resource."
      x-addedInVersion: '1'
      operationId: patch-transactionRules-transactionRuleId
      x-groupName: Transaction rules
      x-sortIndex: 3
      x-methodName: updateTransactionRule
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              updateTransactionRuleStatus:
                $ref: '#/components/examples/patch-transactionRules-transactionRuleId-updateTransactionRuleStatus'
            schema:
              $ref: '#/components/schemas/TransactionRuleInfo'
      parameters:
      - description: The unique identifier of the transaction rule.
        name: transactionRuleId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                updateTransactionRuleStatus:
                  $ref: '#/components/examples/patch-transactionRules-transactionRuleId-updateTransactionRuleStatus-200'
              schema:
                $ref: '#/components/schemas/TransactionRule'
          description: OK - the request has succeeded.
        '400':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-400'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Bad Request - a problem reading or understanding the request.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /transferRoutes/calculate:
    post:
      tags:
      - Transfer routes
      summary: Calculate transfer routes
      description: Returns available transfer routes based on a combination of transfer
        `country`, `currency`, `counterparty`, and `priorities`. Use this endpoint
        to find optimal transfer priorities and associated requirements before you
        [make a transfer](https://docs.adyen.com/api-explorer/transfers/latest/post/transfers).
      x-addedInVersion: '1'
      operationId: post-transferRoutes-calculate
      x-groupName: Transfer routes
      x-sortIndex: 1
      x-methodName: calculateTransferRoutes
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              transferRoutesCalculate:
                $ref: '#/components/examples/post-transferRoutes-calculate-transferRoutesCalculate'
            schema:
              $ref: '#/components/schemas/TransferRouteRequest'
      responses:
        '200':
          content:
            application/json:
              examples:
                transferRoutesCalculate:
                  $ref: '#/components/examples/post-transferRoutes-calculate-transferRoutesCalculate-200'
              schema:
                $ref: '#/components/schemas/TransferRouteResponse'
          description: OK - the request has succeeded.
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
  /validateBankAccountIdentification:
    post:
      tags:
      - Bank account validation
      summary: Validate a bank account
      description: Validates bank account identification details. You can use this
        endpoint to validate bank account details before you [make a transfer](https://docs.adyen.com/api-explorer/transfers/latest/post/transfers)
        or [create a transfer instrument](https://docs.adyen.com/api-explorer/legalentity/latest/post/transferInstruments).
      x-addedInVersion: '1'
      operationId: post-validateBankAccountIdentification
      x-groupName: Bank account validation
      x-sortIndex: 1
      x-methodName: validateBankAccountIdentification
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            examples:
              validateBankAccountIdentificationIban:
                $ref: '#/components/examples/post-validateBankAccountIdentification-validateBankAccountIdentificationIban'
              validateBankAccountIdentificationUs:
                $ref: '#/components/examples/post-validateBankAccountIdentification-validateBankAccountIdentificationUs'
            schema:
              $ref: '#/components/schemas/BankAccountIdentificationValidationRequest'
      responses:
        '200':
          description: 'No Content - look at the actual response code for the status
            of the request '
        '401':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-401'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unauthorized - authentication required.
        '403':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-403'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Forbidden - insufficient permissions to process the request.
        '422':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-422'
                validateBankAccountIdentificationIban:
                  $ref: '#/components/examples/post-validateBankAccountIdentification-validateBankAccountIdentificationIban-422'
                validateBankAccountIdentificationUs:
                  $ref: '#/components/examples/post-validateBankAccountIdentification-validateBankAccountIdentificationUs-422'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Unprocessable Entity - a request validation error.
        '500':
          content:
            application/json:
              examples:
                generic:
                  $ref: '#/components/examples/generic-500'
              schema:
                $ref: '#/components/schemas/RestServiceError'
          description: Internal Server Error - the server could not process the request.
components:
  schemas:
    AULocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The bank account number, without separators or whitespace.
          maxLength: 9
          minLength: 5
          type: string
        bsbCode:
          description: The 6-digit [Bank State Branch (BSB) code](https://en.wikipedia.org/wiki/Bank_state_branch),
            without separators or whitespace.
          maxLength: 6
          minLength: 6
          type: string
        type:
          default: auLocal
          description: '**auLocal**'
          enum:
          - auLocal
          type: string
      required:
      - type
      - accountNumber
      - bsbCode
      type: object
    AccountHolder:
      properties:
        balancePlatform:
          description: The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id)
            to which the account holder belongs. Required in the request if your API
            credentials can be used for multiple balance platforms.
          type: string
        capabilities:
          additionalProperties:
            $ref: '#/components/schemas/AccountHolderCapability'
          description: Contains key-value pairs that specify the actions that an account
            holder can do in your platform. The key is a capability required for your
            integration. For example, **issueCard** for Issuing. The value is an object
            containing the settings for the capability.
          type: object
        contactDetails:
          deprecated: true
          description: Contact details of the account holder.
          $ref: '#/components/schemas/ContactDetails'
        description:
          description: Your description for the account holder, maximum 300 characters.
          maxLength: 300
          type: string
        id:
          description: The unique identifier of the account holder.
          readOnly: true
          type: string
        legalEntityId:
          description: The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id)
            associated with the account holder. Adyen performs a verification process
            against the legal entity of the account holder.
          type: string
        metadata:
          additionalProperties:
            type: string
          description: 'A set of key and value pairs for general use.

            The keys do not have specific names and may be used for storing miscellaneous
            data as desired.

            > Note that during an update of metadata, the omission of existing key-value
            pairs will result in the deletion of those key-value pairs.'
          type: object
        migratedAccountHolderCode:
          description: The unique identifier of the migrated account holder in the
            classic integration.
          readOnly: true
          type: string
        primaryBalanceAccount:
          description: The ID of the account holder's primary balance account. By
            default, this is set to the first balance account that you create for
            the account holder. To assign a different balance account, send a PATCH
            request.
          type: string
        reference:
          description: Your reference for the account holder, maximum 150 characters.
          maxLength: 150
          type: string
        status:
          description: "The status of the account holder.\n\nPossible values: \n\n\
            \ * **active**: The account holder is active. This is the default status\
            \ when creating an account holder. \n\n * **inactive (Deprecated)**: The\
            \ account holder is temporarily inactive due to missing KYC details. You\
            \ can set the account back to active by providing the missing KYC details.\
            \ \n\n * **suspended**: The account holder is permanently deactivated\
            \ by Adyen. This action cannot be undone. \n\n* **closed**: The account\
            \ holder is permanently deactivated by you. This action cannot be undone."
          enum:
          - active
          - closed
          - inactive
          - suspended
          type: string
        timeZone:
          description: 'The time zone of the account holder. For example, **Europe/Amsterdam**.

            Defaults to the time zone of the balance platform if no time zone is set.
            For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).'
          type: string
        verificationDeadlines:
          x-addedInVersion: '2'
          description: List of verification deadlines and the capabilities that will
            be disallowed if verification errors are not resolved.
          items:
            $ref: '#/components/schemas/VerificationDeadline'
          readOnly: true
          type: array
      required:
      - legalEntityId
      - id
      type: object
    AccountHolderCapability:
      properties:
        allowed:
          description: Indicates whether the capability is allowed. Adyen sets this
            to **true** if the verification is successful and the account holder is
            permitted to use the capability.
          readOnly: true
          type: boolean
        allowedLevel:
          description: 'The capability level that is allowed for the account holder.


            Possible values: **notApplicable**, **low**, **medium**, **high**.'
          enum:
          - high
          - low
          - medium
          - notApplicable
          readOnly: true
          type: string
        allowedSettings:
          description: A JSON object containing the settings that are allowed for
            the account holder.
          readOnly: true
          $ref: '#/components/schemas/CapabilitySettings'
        enabled:
          description: Indicates whether the capability is enabled. If **false**,
            the capability is temporarily disabled for the account holder.
          type: boolean
        problems:
          description: Contains verification errors and the actions that you can take
            to resolve them.
          items:
            $ref: '#/components/schemas/CapabilityProblem'
          readOnly: true
          type: array
        requested:
          description: Indicates whether the capability is requested. To check whether
            the account holder is permitted to use the capability, refer to the `allowed`
            field.
          type: boolean
        requestedLevel:
          description: 'The requested level of the capability. Some capabilities,
            such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels),
            have different levels. Levels increase the capability, but also require
            additional checks and increased monitoring.


            Possible values: **notApplicable**, **low**, **medium**, **high**.'
          enum:
          - high
          - low
          - medium
          - notApplicable
          type: string
        requestedSettings:
          description: A JSON object containing the settings that were requested for
            the account holder.
          readOnly: true
          $ref: '#/components/schemas/CapabilitySettings'
        transferInstruments:
          description: 'Contains the status of the transfer instruments associated
            with this capability. '
          items:
            $ref: '#/components/schemas/AccountSupportingEntityCapability'
          type: array
        verificationStatus:
          description: 'The status of the verification checks for the capability.


            Possible values:


            * **pending**: Adyen is running the verification.


            * **invalid**: The verification failed. Check if the `errors` array contains
            more information.


            * **valid**: The verification has been successfully completed.


            * **rejected**: Adyen has verified the information, but found reasons
            to not allow the capability.

            '
          enum:
          - invalid
          - pending
          - rejected
          - valid
          readOnly: true
          type: string
      type: object
    AccountHolderInfo:
      properties:
        balancePlatform:
          description: The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id)
            to which the account holder belongs. Required in the request if your API
            credentials can be used for multiple balance platforms.
          type: string
        capabilities:
          additionalProperties:
            $ref: '#/components/schemas/AccountHolderCapability'
          description: Contains key-value pairs that specify the actions that an account
            holder can do in your platform. The key is a capability required for your
            integration. For example, **issueCard** for Issuing. The value is an object
            containing the settings for the capability.
          type: object
        contactDetails:
          deprecated: true
          description: Contact details of the account holder.
          $ref: '#/components/schemas/ContactDetails'
        description:
          description: Your description for the account holder, maximum 300 characters.
          maxLength: 300
          type: string
        legalEntityId:
          description: The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id)
            associated with the account holder. Adyen performs a verification process
            against the legal entity of the account holder.
          type: string
        metadata:
          additionalProperties:
            type: string
          description: 'A set of key and value pairs for general use.

            The keys do not have specific names and may be used for storing miscellaneous
            data as desired.

            > Note that during an update of metadata, the omission of existing key-value
            pairs will result in the deletion of those key-value pairs.'
          type: object
        migratedAccountHolderCode:
          description: The unique identifier of the migrated account holder in the
            classic integration.
          readOnly: true
          type: string
        reference:
          description: Your reference for the account holder, maximum 150 characters.
          maxLength: 150
          type: string
        timeZone:
          description: 'The time zone of the account holder. For example, **Europe/Amsterdam**.

            Defaults to the time zone of the balance platform if no time zone is set.
            For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).'
          type: string
      required:
      - legalEntityId
      type: object
    AccountHolderUpdateRequest:
      properties:
        balancePlatform:
          description: The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id)
            to which the account holder belongs. Required in the request if your API
            credentials can be used for multiple balance platforms.
          type: string
        capabilities:
          additionalProperties:
            $ref: '#/components/schemas/AccountHolderCapability'
          description: Contains key-value pairs that specify the actions that an account
            holder can do in your platform. The key is a capability required for your
            integration. For example, **issueCard** for Issuing. The value is an object
            containing the settings for the capability.
          type: object
        contactDetails:
          deprecated: true
          description: Contact details of the account holder.
          $ref: '#/components/schemas/ContactDetails'
        description:
          description: Your description for the account holder, maximum 300 characters.
          maxLength: 300
          type: string
        metadata:
          additionalProperties:
            type: string
          description: 'A set of key and value pairs for general use.

            The keys do not have specific names and may be used for storing miscellaneous
            data as desired.

            > Note that during an update of metadata, the omission of existing key-value
            pairs will result in the deletion of those key-value pairs.'
          type: object
        migratedAccountHolderCode:
          description: The unique identifier of the migrated account holder in the
            classic integration.
          readOnly: true
          type: string
        primaryBalanceAccount:
          description: The ID of the account holder's primary balance account. By
            default, this is set to the first balance account that you create for
            the account holder. To assign a different balance account, send a PATCH
            request.
          type: string
        reference:
          description: Your reference for the account holder, maximum 150 characters.
          maxLength: 150
          type: string
        status:
          description: "The status of the account holder.\n\nPossible values: \n\n\
            \ * **active**: The account holder is active. This is the default status\
            \ when creating an account holder. \n\n * **inactive (Deprecated)**: The\
            \ account holder is temporarily inactive due to missing KYC details. You\
            \ can set the account back to active by providing the missing KYC details.\
            \ \n\n * **suspended**: The account holder is permanently deactivated\
            \ by Adyen. This action cannot be undone. \n\n* **closed**: The account\
            \ holder is permanently deactivated by you. This action cannot be undone."
          enum:
          - active
          - closed
          - inactive
          - suspended
          type: string
        timeZone:
          description: 'The time zone of the account holder. For example, **Europe/Amsterdam**.

            Defaults to the time zone of the balance platform if no time zone is set.
            For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).'
          type: string
        verificationDeadlines:
          x-addedInVersion: '2'
          description: List of verification deadlines and the capabilities that will
            be disallowed if verification errors are not resolved.
          items:
            $ref: '#/components/schemas/VerificationDeadline'
          readOnly: true
          type: array
      type: object
    AccountSupportingEntityCapability:
      properties:
        allowed:
          description: Indicates whether the supporting entity capability is allowed.
            Adyen sets this to **true** if the verification is successful and the
            account holder is permitted to use the capability.
          readOnly: true
          type: boolean
        allowedLevel:
          description: 'The capability level that is allowed for the account holder.


            Possible values: **notApplicable**, **low**, **medium**, **high**.'
          enum:
          - high
          - low
          - medium
          - notApplicable
          readOnly: true
          type: string
        enabled:
          description: Indicates whether the capability is enabled. If **false**,
            the capability is temporarily disabled for the account holder.
          type: boolean
        id:
          description: The ID of the supporting entity.
          readOnly: true
          type: string
        requested:
          description: Indicates whether the capability is requested. To check whether
            the account holder is permitted to use the capability, refer to the `allowed`
            field.
          type: boolean
        requestedLevel:
          description: 'The requested level of the capability. Some capabilities,
            such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels),
            have different levels. Levels increase the capability, but also require
            additional checks and increased monitoring.


            Possible values: **notApplicable**, **low**, **medium**, **high**.'
          enum:
          - high
          - low
          - medium
          - notApplicable
          type: string
        verificationStatus:
          description: 'The status of the verification checks for the supporting entity
            capability.


            Possible values:


            * **pending**: Adyen is running the verification.


            * **invalid**: The verification failed. Check if the `errors` array contains
            more information.


            * **valid**: The verification has been successfully completed.


            * **rejected**: Adyen has verified the information, but found reasons
            to not allow the capability.

            '
          enum:
          - invalid
          - pending
          - rejected
          - valid
          readOnly: true
          type: string
      type: object
    ActiveNetworkTokensRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: The number of tokens.
          format: int32
          type: integer
      required:
      - operation
      type: object
    AdditionalBankIdentification:
      properties:
        code:
          description: The value of the additional bank identification.
          type: string
        type:
          description: "The type of additional bank identification, depending on the\
            \ country.\n\nPossible values:\n\n * **gbSortCode**: The 6-digit [UK sort\
            \ code](https://en.wikipedia.org/wiki/Sort_code), without separators or\
            \ spaces\n * **usRoutingNumber**: The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number),\
            \ without separators or spaces."
          enum:
          - gbSortCode
          - usRoutingNumber
          type: string
      type: object
    Address:
      properties:
        city:
          description: 'The name of the city. Maximum length: 3000 characters.'
          maxLength: 3000
          type: string
        country:
          description: 'The two-character ISO-3166-1 alpha-2 country code. For example,
            **US**.

            > If you don''t know the country or are not collecting the country from
            the shopper, provide `country` as `ZZ`.'
          type: string
        houseNumberOrName:
          description: 'The number or name of the house. Maximum length: 3000 characters.'
          maxLength: 3000
          type: string
        postalCode:
          description: A maximum of five digits for an address in the US, or a maximum
            of ten characters for an address in all other countries.
          type: string
        stateOrProvince:
          description: 'The two-character ISO 3166-2 state or province code. For example,
            **CA** in the US or **ON** in Canada.

            > Required for the US and Canada.'
          type: string
        street:
          description: 'The name of the street. Maximum length: 3000 characters.

            > The house number should not be included in this field; it should be
            separately provided via `houseNumberOrName`.'
          maxLength: 3000
          type: string
      required:
      - street
      - houseNumberOrName
      - city
      - postalCode
      - country
      type: object
    AddressRequirement:
      additionalProperties: false
      properties:
        description:
          description: Specifies the required address related fields for a particular
            route.
          type: string
        requiredAddressFields:
          description: List of address fields.
          items:
            type: string
          type: array
        type:
          default: addressRequirement
          description: '**addressRequirement**'
          enum:
          - addressRequirement
          type: string
      required:
      - type
      type: object
    Amount:
      properties:
        currency:
          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).
          maxLength: 3
          minLength: 3
          type: string
        value:
          description: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
          format: int64
          type: integer
      required:
      - value
      - currency
      type: object
    AmountMinMaxRequirement:
      additionalProperties: false
      properties:
        description:
          description: Specifies the eligible amounts for a particular route.
          type: string
        max:
          description: Maximum amount.
          format: int64
          type: integer
        min:
          description: Minimum amount.
          format: int64
          type: integer
        type:
          default: amountMinMaxRequirement
          description: '**amountMinMaxRequirement**'
          enum:
          - amountMinMaxRequirement
          type: string
      required:
      - type
      type: object
    Authentication:
      properties:
        email:
          description: The email address where the one-time password (OTP) is sent.
          type: string
        password:
          description: "The password used for 3D Secure password-based authentication.\
            \ The value must be between 1 to 30 characters and must only contain the\
            \ following supported characters.\n\n* Characters between **a-z**, **A-Z**,\
            \ and **0-9**\n\n* Special characters: **\xE4\xF6\xFC\xDF\xC4\xD6\xDC\
            +-*/\xE7%()=?!~#'\",;:$&\xE0\xF9\xF2\xE2\xF4\xFB\xE1\xFA\xF3**"
          maxLength: 30
          minLength: 1
          type: string
        phone:
          description: 'The phone number where the one-time password (OTP) is sent.


            This object must have:


            * A `type` set to **mobile**.


            * A `number` with a valid country code.


            * A `number` with more than 4 digits, excluding the country code.


            >Make sure to verify that the card user owns the phone number.'
          $ref: '#/components/schemas/Phone'
      type: object
    BRLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The bank account number, without separators or whitespace.
          maxLength: 10
          minLength: 1
          type: string
        bankCode:
          description: The 3-digit bank code, with leading zeros.
          maxLength: 3
          minLength: 3
          type: string
        branchNumber:
          description: The bank account branch number, without separators or whitespace.
          maxLength: 4
          minLength: 1
          type: string
        type:
          default: brLocal
          description: '**brLocal**'
          enum:
          - brLocal
          type: string
      required:
      - type
      - branchNumber
      - accountNumber
      - bankCode
      type: object
    Balance:
      properties:
        available:
          description: The remaining amount available for spending.
          format: int64
          type: integer
        balance:
          description: The total amount in the balance.
          format: int64
          type: integer
        currency:
          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes)
            of the balance.
          type: string
        pending:
          description: The amount pending to be paid out but not yet available in
            the balance.
          format: int64
          type: integer
        reserved:
          description: The amount reserved for payments that have been authorised,
            but have not been captured yet.
          format: int64
          type: integer
      required:
      - currency
      - balance
      - reserved
      - available
      type: object
    BalanceAccount:
      properties:
        accountHolderId:
          description: The unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/accountHolders__resParam_id)
            associated with the balance account.
          type: string
        balances:
          description: List of balances with the amount and currency.
          items:
            $ref: '#/components/schemas/Balance'
          type: array
        defaultCurrencyCode:
          description: 'The default three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes)
            of the balance account.

            The default value is **EUR**.'
          type: string
        description:
          description: A human-readable description of the balance account, maximum
            300 characters. You can use this parameter to distinguish between multiple
            balance accounts under an account holder.
          maxLength: 300
          type: string
        id:
          description: The unique identifier of the balance account.
          type: string
        metadata:
          additionalProperties:
            type: string
          description: 'A set of key and value pairs for general use.

            The keys do not have specific names and may be used for storing miscellaneous
            data as desired.

            > Note that during an update of metadata, the omission of existing key-value
            pairs will result in the deletion of those key-value pairs.'
          type: object
        migratedAccountCode:
          description: The unique identifier of the account of the migrated account
            holder in the classic integration.
          readOnly: true
          type: string
        platformPaymentConfiguration:
          description: Contains key-value pairs to the configure the settlement model
            in a balance account.
          $ref: '#/components/schemas/PlatformPaymentConfiguration'
        reference:
          description: Your reference for the balance account, maximum 150 characters.
          maxLength: 150
          type: string
        status:
          description: "The status of the balance account, set to **active** by default.\
            \ \n"
          enum:
          - active
          - closed
          - inactive
          - suspended
          type: string
        timeZone:
          description: 'The time zone of the balance account. For example, **Europe/Amsterdam**.

            Defaults to the time zone of the account holder if no time zone is set.
            For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).'
          type: string
      required:
      - accountHolderId
      - id
      type: object
    BalanceAccountBase:
      properties:
        accountHolderId:
          description: The unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/accountHolders__resParam_id)
            associated with the balance account.
          type: string
        defaultCurrencyCode:
          description: 'The default three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes)
            of the balance account.

            The default value is **EUR**.'
          type: string
        description:
          description: A human-readable description of the balance account, maximum
            300 characters. You can use this parameter to distinguish between multiple
            balance accounts under an account holder.
          maxLength: 300
          type: string
        id:
          description: The unique identifier of the balance account.
          type: string
        metadata:
          additionalProperties:
            type: string
          description: 'A set of key and value pairs for general use.

            The keys do not have specific names and may be used for storing miscellaneous
            data as desired.

            > Note that during an update of metadata, the omission of existing key-value
            pairs will result in the deletion of those key-value pairs.'
          type: object
        migratedAccountCode:
          description: The unique identifier of the account of the migrated account
            holder in the classic integration.
          readOnly: true
          type: string
        platformPaymentConfiguration:
          description: Contains key-value pairs to the configure the settlement model
            in a balance account.
          $ref: '#/components/schemas/PlatformPaymentConfiguration'
        reference:
          description: Your reference for the balance account, maximum 150 characters.
          maxLength: 150
          type: string
        status:
          description: "The status of the balance account, set to **active** by default.\
            \ \n"
          enum:
          - active
          - closed
          - inactive
          - suspended
          type: string
        timeZone:
          description: 'The time zone of the balance account. For example, **Europe/Amsterdam**.

            Defaults to the time zone of the account holder if no time zone is set.
            For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).'
          type: string
      required:
      - accountHolderId
      - id
      type: object
    BalanceAccountInfo:
      properties:
        accountHolderId:
          description: The unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/accountHolders__resParam_id)
            associated with the balance account.
          type: string
        defaultCurrencyCode:
          description: 'The default three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes)
            of the balance account.

            The default value is **EUR**.'
          type: string
        description:
          description: A human-readable description of the balance account, maximum
            300 characters. You can use this parameter to distinguish between multiple
            balance accounts under an account holder.
          maxLength: 300
          type: string
        metadata:
          additionalProperties:
            type: string
          description: 'A set of key and value pairs for general use.

            The keys do not have specific names and may be used for storing miscellaneous
            data as desired.

            > Note that during an update of metadata, the omission of existing key-value
            pairs will result in the deletion of those key-value pairs.'
          type: object
        migratedAccountCode:
          description: The unique identifier of the account of the migrated account
            holder in the classic integration.
          readOnly: true
          type: string
        platformPaymentConfiguration:
          description: Contains key-value pairs to the configure the settlement model
            in a balance account.
          $ref: '#/components/schemas/PlatformPaymentConfiguration'
        reference:
          description: Your reference for the balance account, maximum 150 characters.
          maxLength: 150
          type: string
        timeZone:
          description: 'The time zone of the balance account. For example, **Europe/Amsterdam**.

            Defaults to the time zone of the account holder if no time zone is set.
            For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).'
          type: string
      required:
      - accountHolderId
      type: object
    BalanceAccountUpdateRequest:
      properties:
        accountHolderId:
          description: The unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/accountHolders__resParam_id)
            associated with the balance account.
          type: string
        defaultCurrencyCode:
          description: "The default currency code of this balance account, in three-character\
            \ [ISO currency code](https://docs.adyen.com/development-resources/currency-codes)\
            \ format. \nThe default value is **EUR**."
          type: string
        description:
          description: A human-readable description of the balance account, maximum
            300 characters. You can use this parameter to distinguish between multiple
            balance accounts under an account holder.
          maxLength: 300
          type: string
        metadata:
          additionalProperties:
            type: string
          description: 'A set of key and value pairs for general use.

            The keys do not have specific names and may be used for storing miscellaneous
            data as desired.

            > Note that during an update of metadata, the omission of existing key-value
            pairs will result in the deletion of those key-value pairs.'
          type: object
        platformPaymentConfiguration:
          description: Contains key-value pairs to the configure the settlement model
            in a balance account.
          $ref: '#/components/schemas/PlatformPaymentConfiguration'
        reference:
          description: Your reference to the balance account, maximum 150 characters.
          maxLength: 150
          type: string
        status:
          description: 'The status of the balance account. Payment instruments linked
            to the balance account can only be used if the balance account status
            is **active**.


            Possible values: **active**, **inactive**, **closed**, **suspended**.'
          enum:
          - active
          - closed
          - inactive
          - suspended
          type: string
        timeZone:
          description: 'The time zone of the balance account. For example, **Europe/Amsterdam**.

            Defaults to the time zone of the account holder if no time zone is set.
            For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).'
          type: string
      type: object
    BalancePlatform:
      properties:
        description:
          description: Your description of the balance platform, maximum 300 characters.
          maxLength: 300
          type: string
        id:
          description: The unique identifier of the balance platform.
          type: string
        status:
          description: 'The status of the balance platform.


            Possible values: **Active**, **Inactive**, **Closed**, **Suspended**.'
          type: string
      required:
      - id
      type: object
    BalanceSweepConfigurationsResponse:
      properties:
        hasNext:
          description: Indicates whether there are more items on the next page.
          type: boolean
        hasPrevious:
          description: Indicates whether there are more items on the previous page.
          type: boolean
        sweeps:
          description: List of sweeps associated with the balance account.
          items:
            $ref: '#/components/schemas/SweepConfigurationV2'
          type: array
      required:
      - sweeps
      - hasPrevious
      - hasNext
      type: object
    BankAccount:
      properties:
        accountIdentification:
          description: Contains the bank account details. The fields required in this
            object depend on the country of the bank account and the currency of the
            transfer.
          oneOf:
          - $ref: '#/components/schemas/AULocalAccountIdentification'
          - $ref: '#/components/schemas/BRLocalAccountIdentification'
          - $ref: '#/components/schemas/CALocalAccountIdentification'
          - $ref: '#/components/schemas/CZLocalAccountIdentification'
          - $ref: '#/components/schemas/DKLocalAccountIdentification'
          - $ref: '#/components/schemas/HKLocalAccountIdentification'
          - $ref: '#/components/schemas/HULocalAccountIdentification'
          - $ref: '#/components/schemas/IbanAccountIdentification'
          - $ref: '#/components/schemas/NOLocalAccountIdentification'
          - $ref: '#/components/schemas/NZLocalAccountIdentification'
          - $ref: '#/components/schemas/NumberAndBicAccountIdentification'
          - $ref: '#/components/schemas/PLLocalAccountIdentification'
          - $ref: '#/components/schemas/SELocalAccountIdentification'
          - $ref: '#/components/schemas/SGLocalAccountIdentification'
          - $ref: '#/components/schemas/UKLocalAccountIdentification'
          - $ref: '#/components/schemas/USLocalAccountIdentification'
      required:
      - accountIdentification
      type: object
    BankAccountIdentificationTypeRequirement:
      additionalProperties: false
      properties:
        bankAccountIdentificationTypes:
          description: 'List of bank account identification types: eg.; [iban , numberAndBic]'
          items:
            enum:
            - auLocal
            - brLocal
            - caLocal
            - czLocal
            - dkLocal
            - hkLocal
            - huLocal
            - iban
            - legacy
            - noLocal
            - numberAndBic
            - nzLocal
            - plLocal
            - seLocal
            - sgLocal
            - ukLocal
            - usLocal
            type: string
          type: array
        description:
          description: Specifies the bank account details for a particular route per
            required field in this object depending on the country of the bank account
            and the currency of the transfer.
          type: string
        type:
          default: bankAccountIdentificationTypeRequirement
          description: '**bankAccountIdentificationTypeRequirement**'
          enum:
          - bankAccountIdentificationTypeRequirement
          type: string
      required:
      - type
      type: object
    BankAccountIdentificationValidationRequest:
      properties:
        accountIdentification:
          description: Bank account identification.
          oneOf:
          - $ref: '#/components/schemas/AULocalAccountIdentification'
          - $ref: '#/components/schemas/BRLocalAccountIdentification'
          - $ref: '#/components/schemas/CALocalAccountIdentification'
          - $ref: '#/components/schemas/CZLocalAccountIdentification'
          - $ref: '#/components/schemas/DKLocalAccountIdentification'
          - $ref: '#/components/schemas/HKLocalAccountIdentification'
          - $ref: '#/components/schemas/HULocalAccountIdentification'
          - $ref: '#/components/schemas/IbanAccountIdentification'
          - $ref: '#/components/schemas/NOLocalAccountIdentification'
          - $ref: '#/components/schemas/NZLocalAccountIdentification'
          - $ref: '#/components/schemas/NumberAndBicAccountIdentification'
          - $ref: '#/components/schemas/PLLocalAccountIdentification'
          - $ref: '#/components/schemas/SELocalAccountIdentification'
          - $ref: '#/components/schemas/SGLocalAccountIdentification'
          - $ref: '#/components/schemas/UKLocalAccountIdentification'
          - $ref: '#/components/schemas/USLocalAccountIdentification'
      required:
      - accountIdentification
      type: object
    BrandVariantsRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: "List of card brand variants.\n\nPossible values: \n\n- **mc**,\
            \ **mccredit**, **mccommercialcredit_b2b**, **mcdebit**, **mcbusinessdebit**,\
            \ **mcbusinessworlddebit**, **mcprepaid**, **mcmaestro**\n\n - **visa**,\
            \ **visacredit**, **visadebit**, **visaprepaid**.\n\nYou can specify a\
            \ rule for a generic variant. For example, to create a rule for all Mastercard\
            \ payment instruments, use **mc**. The rule is applied to all payment\
            \ instruments under **mc**, such as **mcbusinessdebit** and **mcdebit**.\n\
            \n"
          items:
            type: string
          type: array
      required:
      - operation
      type: object
    BulkAddress:
      properties:
        city:
          description: The name of the city.
          type: string
        company:
          description: The name of the company.
          type: string
        country:
          description: The two-character ISO-3166-1 alpha-2 country code. For example,
            **US**.
          type: string
        email:
          description: The email address.
          type: string
        houseNumberOrName:
          description: The house number or name.
          type: string
        mobile:
          description: The full telephone number.
          type: string
        postalCode:
          description: 'The postal code.


            Maximum length:


            * 5 digits for addresses in the US.


            * 10 characters for all other countries.'
          type: string
        stateOrProvince:
          description: 'The two-letter ISO 3166-2 state or province code.


            Maximum length: 2 characters for addresses in the US.'
          type: string
        street:
          description: The streetname of the house.
          type: string
      required:
      - country
      type: object
    CALocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 5- to 12-digit bank account number, without separators
            or whitespace.
          maxLength: 12
          minLength: 5
          type: string
        accountType:
          default: checking
          description: 'The bank account type.


            Possible values: **checking** or **savings**. Defaults to **checking**.'
          enum:
          - checking
          - savings
          type: string
        institutionNumber:
          description: The 3-digit institution number, without separators or whitespace.
          maxLength: 3
          minLength: 3
          type: string
        transitNumber:
          description: The 5-digit transit number, without separators or whitespace.
          maxLength: 5
          minLength: 5
          type: string
        type:
          default: caLocal
          description: '**caLocal**'
          enum:
          - caLocal
          type: string
      required:
      - type
      - accountNumber
      - institutionNumber
      - transitNumber
      type: object
    CZLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: "The 2- to 16-digit bank account number (\u010C\xEDslo \xFA\
            \u010Dtu) in the following format:\n\n- The optional prefix (p\u0159ed\u010D\
            \xEDsl\xED).\n\n- The required second part (z\xE1kladn\xED \u010D\xE1\
            st) which must be at least two non-zero digits.\n\nExamples:\n\n- **19-123457**\
            \ (with prefix)\n\n- **123457** (without prefix)\n\n- **000019-0000123457**\
            \ (with prefix, normalized)\n\n- **000000-0000123457** (without prefix,\
            \ normalized)"
          maxLength: 17
          minLength: 2
          type: string
        bankCode:
          description: "The 4-digit bank code (K\xF3d banky), without separators or\
            \ whitespace."
          maxLength: 4
          minLength: 4
          type: string
        type:
          default: czLocal
          description: '**czLocal**'
          enum:
          - czLocal
          type: string
      required:
      - type
      - accountNumber
      - bankCode
      type: object
    CapabilityProblem:
      properties:
        entity:
          description: Contains the type of the entity and the corresponding ID.
          $ref: '#/components/schemas/CapabilityProblemEntity'
        verificationErrors:
          description: Contains information about the verification error.
          items:
            $ref: '#/components/schemas/VerificationError'
          type: array
      type: object
    CapabilityProblemEntity:
      properties:
        documents:
          description: List of document IDs to which the verification errors related
            to the capabilities correspond to.
          items:
            type: string
          type: array
        id:
          description: The ID of the entity.
          type: string
        owner:
          description: Contains details about the owner of the entity that has an
            error.
          $ref: '#/components/schemas/CapabilityProblemEntity-recursive'
        type:
          description: "Type of entity. \n\nPossible values: **LegalEntity**, **BankAccount**,\
            \ **Document**."
          enum:
          - BankAccount
          - Document
          - LegalEntity
          type: string
      type: object
    CapabilityProblemEntity-recursive:
      properties:
        documents:
          description: List of document IDs to which the verification errors related
            to the capabilities correspond to.
          items:
            type: string
          type: array
        id:
          description: The ID of the entity.
          type: string
        type:
          description: "Type of entity. \n\nPossible values: **LegalEntity**, **BankAccount**,\
            \ **Document**."
          enum:
          - BankAccount
          - Document
          - LegalEntity
          type: string
      required: []
      type: object
    CapabilitySettings:
      properties:
        amountPerIndustry:
          additionalProperties:
            $ref: '#/components/schemas/Amount'
          description: ''
          type: object
        authorizedCardUsers:
          description: ''
          type: boolean
        fundingSource:
          description: ''
          items:
            enum:
            - credit
            - debit
            - prepaid
            type: string
          type: array
        interval:
          description: ''
          enum:
          - daily
          - monthly
          - weekly
          type: string
        maxAmount:
          description: ''
          $ref: '#/components/schemas/Amount'
      type: object
    CapitalBalance:
      properties:
        currency:
          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).
          type: string
        fee:
          description: Fee amount.
          format: int64
          type: integer
        principal:
          description: Principal amount.
          format: int64
          type: integer
        total:
          description: Total amount. A sum of principal amount and fee amount.
          format: int64
          type: integer
      required:
      - principal
      - fee
      - total
      - currency
      type: object
    CapitalGrantAccount:
      properties:
        balances:
          description: The balances of the grant account.
          items:
            $ref: '#/components/schemas/CapitalBalance'
          type: array
        fundingBalanceAccountId:
          description: The unique identifier of the balance account used to fund the
            grant.
          type: string
        id:
          description: The identifier of the grant account.
          type: string
        limits:
          description: The limits of the grant account.
          items:
            $ref: '#/components/schemas/GrantLimit'
          type: array
      type: object
    Card:
      properties:
        authentication:
          description: Contains the card user's password and mobile phone number.
            This is required when you issue cards that can be used to make online
            payments within the EEA and the UK, or can be added to digital wallets.
            Refer to [3D Secure and digital wallets](https://docs.adyen.com/issuing/3d-secure-and-wallets)
            for more information.
          $ref: '#/components/schemas/Authentication'
        bin:
          description: The bank identification number (BIN) of the card number.
          type: string
        brand:
          description: 'The brand of the physical or the virtual card.

            Possible values: **visa**, **mc**.'
          type: string
        brandVariant:
          description: 'The brand variant of the physical or the virtual card. For
            example, **visadebit** or **mcprepaid**.

            >Reach out to your Adyen contact to get the values relevant for your integration.'
          type: string
        cardholderName:
          description: "The name of the cardholder.\n Maximum length: 26 characters."
          maxLength: 26
          type: string
        configuration:
          description: "Settings required when creating a physical or a virtual card.\
            \ \n\nReach out to your Adyen contact to get the values that you can send\
            \ in this object."
          $ref: '#/components/schemas/CardConfiguration'
        cvc:
          description: 'The CVC2 value of the card.

            > The CVC2 is not sent by default. This is only returned in the `POST`
            response for single-use virtual cards.'
          type: string
        deliveryContact:
          x-addedInVersion: '2'
          description: The delivery contact (name and address) for physical card delivery.
          $ref: '#/components/schemas/DeliveryContact'
        expiration:
          description: The expiration date of the card.
          $ref: '#/components/schemas/Expiry'
        formFactor:
          description: 'The form factor of the card.

            Possible values: **virtual**, **physical**.'
          enum:
          - physical
          - unknown
          - virtual
          type: string
        lastFour:
          description: Last last four digits of the card number.
          type: string
        number:
          description: 'The primary account number (PAN) of the card.

            > The PAN is masked by default and returned only for single-use virtual
            cards.'
          readOnly: true
          type: string
        threeDSecure:
          description: 'Allocates a specific product range for either a physical or
            a virtual card. Possible values: **fullySupported**, **secureCorporate**.

            >Reach out to your Adyen contact to get the values relevant for your integration.'
          type: string
      required:
      - formFactor
      - cardholderName
      - brand
      - brandVariant
      - number
      type: object
    CardConfiguration:
      properties:
        activation:
          description: Overrides the activation label design ID defined in the `configurationProfileId`.
            The activation label is attached to the card and contains the activation
            instructions.
          type: string
        activationUrl:
          description: "Your app's URL, if you want to activate cards through your\
            \ app. For example, **my-app://ref1236a7d**. A QR code is created based\
            \ on this URL, and is included in the carrier. Before you use this field,\
            \ reach out to your Adyen contact to set up the QR code process. \n\n\
            Maximum length: 255 characters."
          maxLength: 255
          type: string
        bulkAddress:
          description: Overrides the shipment bulk address defined in the `configurationProfileId`.
          $ref: '#/components/schemas/BulkAddress'
        cardImageId:
          description: The ID of the card image. This is the image that will be printed
            on the full front of the card.
          type: string
        carrier:
          description: Overrides the carrier design ID defined in the `configurationProfileId`.
            The carrier is the letter or packaging to which the card is attached.
          type: string
        carrierImageId:
          description: The ID of the carrier image. This is the image that will printed
            on the letter to which the card is attached.
          type: string
        configurationProfileId:
          description: 'The ID of the card configuration profile that contains the
            settings of the card. For example, the envelope and PIN mailer designs
            or the logistics company handling the shipment. All the settings in the
            profile are applied to the card, unless you provide other fields to override
            them.


            For example, send the `shipmentMethod` to override the logistics company
            defined in the card configuration profile.'
          type: string
        currency:
          description: The three-letter [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217)
            currency code of the card. For example, **EUR**.
          type: string
        envelope:
          description: 'Overrides the envelope design ID defined in the `configurationProfileId`. '
          type: string
        insert:
          description: Overrides the insert design ID defined in the `configurationProfileId`.
            An insert is any additional material, such as marketing materials, that
            are shipped together with the card.
          type: string
        language:
          description: The two-letter [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)
            language code of the card. For example, **en**.
          type: string
        logoImageId:
          description: The ID of the logo image. This is the image that will be printed
            on the partial front of the card, such as a logo on the upper right corner.
          type: string
        pinMailer:
          description: Overrides the PIN mailer design ID defined in the `configurationProfileId`.
            The PIN mailer is the letter on which the PIN is printed.
          type: string
        shipmentMethod:
          description: Overrides the logistics company defined in the `configurationProfileId`.
          type: string
      required:
      - configurationProfileId
      type: object
    CardInfo:
      properties:
        authentication:
          description: Contains the card user's password and mobile phone number.
            This is required when you issue cards that can be used to make online
            payments within the EEA and the UK, or can be added to digital wallets.
            Refer to [3D Secure and digital wallets](https://docs.adyen.com/issuing/3d-secure-and-wallets)
            for more information.
          $ref: '#/components/schemas/Authentication'
        brand:
          description: 'The brand of the physical or the virtual card.

            Possible values: **visa**, **mc**.'
          type: string
        brandVariant:
          description: 'The brand variant of the physical or the virtual card. For
            example, **visadebit** or **mcprepaid**.

            >Reach out to your Adyen contact to get the values relevant for your integration.'
          type: string
        cardholderName:
          description: "The name of the cardholder.\n Maximum length: 26 characters."
          maxLength: 26
          type: string
        configuration:
          description: "Settings required when creating a physical or a virtual card.\
            \ \n\nReach out to your Adyen contact to get the values that you can send\
            \ in this object."
          $ref: '#/components/schemas/CardConfiguration'
        deliveryContact:
          x-addedInVersion: '2'
          description: The delivery contact (name and address) for physical card delivery.
          $ref: '#/components/schemas/DeliveryContact'
        formFactor:
          description: 'The form factor of the card.

            Possible values: **virtual**, **physical**.'
          enum:
          - physical
          - unknown
          - virtual
          type: string
        threeDSecure:
          description: 'Allocates a specific product range for either a physical or
            a virtual card. Possible values: **fullySupported**, **secureCorporate**.

            >Reach out to your Adyen contact to get the values relevant for your integration.'
          type: string
      required:
      - formFactor
      - cardholderName
      - brand
      - brandVariant
      type: object
    ContactDetails:
      properties:
        address:
          description: The address of the account holder.
          $ref: '#/components/schemas/Address'
        email:
          description: The email address of the account holder.
          type: string
        phone:
          description: The phone number of the account holder.
          $ref: '#/components/schemas/Phone'
        webAddress:
          description: The URL of the account holder's website.
          type: string
      required:
      - email
      - phone
      - address
      type: object
    Counterparty:
      properties:
        bankAccount:
          description: Contains information about the bank account.
          $ref: '#/components/schemas/BankAccount'
        transferInstrumentId:
          description: Unique identifier of the [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id).
          type: string
      type: object
    CountriesRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: List of two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country codes.
          items:
            type: string
          type: array
      required:
      - operation
      type: object
    CreateSweepConfigurationV2:
      properties:
        category:
          x-addedInVersion: '2'
          description: "The type of transfer that results from the sweep.\n\nPossible\
            \ values:\n\n - **bank**: Sweep to a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id).\n\
            \n- **internal**: Transfer to another [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id)\
            \ within your platform.\n\nRequired when setting `priorities`."
          enum:
          - bank
          - internal
          - platformPayment
          type: string
        counterparty:
          description: 'The destination or the source of the funds, depending on the
            sweep `type`.


            Either a `balanceAccountId`, `transferInstrumentId`, or `merchantAccount`
            is required.'
          $ref: '#/components/schemas/SweepCounterparty'
        currency:
          description: 'The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes)
            in uppercase. For example, **EUR**.


            The sweep currency must match any of the [balances currencies](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balanceAccounts/{id}__resParam_balances).'
          type: string
        description:
          description: 'The message that will be used in the sweep transfer''s description
            body with a maximum length of 140 characters.


            If the message is longer after replacing placeholders, the message will
            be cut off at 140 characters.'
          type: string
        priorities:
          x-addedInVersion: '2'
          description: 'The list of priorities for the bank transfer. This sets the
            speed at which the transfer is sent and the fees that you have to pay.
            You can provide multiple priorities. Adyen will try to pay out using the
            priority listed first, and if that''s not possible, it moves on to the
            next option in the order of provided priorities.


            Possible values:


            * **regular**: For normal, low-value transactions.


            * **fast**: Faster way to transfer funds but has higher fees. Recommended
            for high-priority, low-value transactions.


            * **wire**: Fastest way to transfer funds but has the highest fees. Recommended
            for high-priority, high-value transactions.


            * **instant**: Instant way to transfer funds in [SEPA countries](https://www.ecb.europa.eu/paym/integration/retail/sepa/html/index.en.html).


            * **crossBorder**: High-value transfer to a recipient in a different country.


            * **internal**: Transfer to an Adyen-issued business bank account (by
            bank account number/IBAN).


            Set `category` to **bank**. For more details, see [optional priorities
            setup](https://docs.adyen.com/marketplaces-and-platforms/payout-to-users/scheduled-payouts#optional-priorities-setup).'
          items:
            enum:
            - crossBorder
            - directDebit
            - fast
            - instant
            - internal
            - regular
            - wire
            type: string
          type: array
        reason:
          description: The reason for disabling the sweep.
          enum:
          - amountLimitExceeded
          - approved
          - counterpartyAccountBlocked
          - counterpartyAccountClosed
          - counterpartyAccountNotFound
          - counterpartyAddressRequired
          - counterpartyBankTimedOut
          - counterpartyBankUnavailable
          - error
          - notEnoughBalance
          - refusedByCounterpartyBank
          - routeNotFound
          - unknown
          readOnly: true
          type: string
        schedule:
          description: The schedule when the `triggerAmount` is evaluated. If the
            balance meets the threshold, funds are pushed out of or pulled in to the
            balance account.
          $ref: '#/components/schemas/SweepSchedule'
        status:
          description: "The status of the sweep. If not provided, by default, this\
            \ is set to **active**.\n\nPossible values: \n\n * **active**:  the sweep\
            \ is enabled and funds will be pulled in or pushed out based on the defined\
            \ configuration. \n\n * **inactive**: the sweep is disabled and cannot\
            \ be triggered. \n\n"
          enum:
          - active
          - inactive
          type: string
        sweepAmount:
          description: The amount that must be pushed out or pulled in. You can configure
            either `sweepAmount` or `targetAmount`, not both.
          $ref: '#/components/schemas/Amount'
        targetAmount:
          description: The amount that must be available in the balance account after
            the sweep. You can configure either `sweepAmount` or `targetAmount`, not
            both.
          $ref: '#/components/schemas/Amount'
        triggerAmount:
          description: 'The threshold amount that triggers the sweep. If not provided,
            by default, the amount is set to zero. The `triggerAmount` is evaluated
            according to the specified `schedule.type`.


            * For `type` **pull**, if the balance is less than or equal to the `triggerAmount`,
            funds are pulled in to the balance account.


            * For `type` **push**, if the balance is more than or equal to the `triggerAmount`,
            funds are pushed out of the balance account.'
          $ref: '#/components/schemas/Amount'
        type:
          default: push
          description: "The direction of sweep, whether pushing out or pulling in\
            \ funds to the balance account. If not provided, by default, this is set\
            \ to **push**.\n\nPossible values:\n\n * **push**: _push out funds_ to\
            \ a destination balance account or transfer instrument.\n\n * **pull**:\
            \ _pull in funds_ from a source merchant account, transfer instrument,\
            \ or balance account."
          enum:
          - pull
          - push
          type: string
      required:
      - schedule
      - currency
      - counterparty
      type: object
    DKLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 4-10 digits bank account number (Kontonummer) (without
            separators or whitespace).
          maxLength: 10
          minLength: 4
          type: string
        bankCode:
          description: The 4-digit bank code (Registreringsnummer) (without separators
            or whitespace).
          maxLength: 4
          minLength: 4
          type: string
        type:
          default: dkLocal
          description: '**dkLocal**'
          enum:
          - dkLocal
          type: string
      required:
      - type
      - accountNumber
      - bankCode
      type: object
    DayOfWeekRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: 'List of days of the week.


            Possible values: **monday**, **tuesday**, **wednesday**, **thursday**,
            **friday**, **saturday**, **sunday**.


            '
          items:
            enum:
            - friday
            - monday
            - saturday
            - sunday
            - thursday
            - tuesday
            - wednesday
            type: string
          type: array
      required:
      - operation
      type: object
    DeliveryAddress:
      properties:
        city:
          description: The name of the city.
          type: string
        country:
          description: 'The two-character ISO-3166-1 alpha-2 country code. For example,
            **US**.

            >If you don''t know the country or are not collecting the country from
            the shopper, provide `country` as `ZZ`.'
          type: string
        line1:
          description: The street name. For example, if the address is "Rokin 49",
            provide "Rokin".
          type: string
        line2:
          description: The house number or name. For example, if the address is "Rokin
            49", provide "49".
          type: string
        line3:
          description: Optional information about the address.
          type: string
        postalCode:
          description: 'The postal code.

            Maximum length:

            * 5 digits for an address in the US.

            * 10 characters for an address in all other countries.'
          type: string
        stateOrProvince:
          description: 'The two-letterISO 3166-2 state or province code. For example,
            **CA** in the US or **ON** in Canada.

            > Required for the US and Canada.'
          type: string
      required:
      - country
      type: object
    DeliveryContact:
      properties:
        address:
          description: The address of the contact.
          $ref: '#/components/schemas/DeliveryAddress'
        email:
          description: The email address of the contact.
          type: string
        fullPhoneNumber:
          description: 'The full phone number of the contact provided as a single
            string. It will be handled as a landline phone.

            **Examples:** "0031 6 11 22 33 44", "+316/1122-3344", "(0031) 611223344"'
          type: string
        name:
          description: The name of the contact.
          $ref: '#/components/schemas/Name'
        phoneNumber:
          description: The phone number of the contact.
          $ref: '#/components/schemas/PhoneNumber'
        webAddress:
          description: The URL of the contact's website.
          type: string
      required:
      - name
      - address
      type: object
    DeviceInfo:
      properties:
        cardCaptureTechnology:
          description: The technology used to capture the card details.
          type: string
        deviceName:
          description: The name of the device.
          type: string
        formFactor:
          description: The form factor of the device to be provisioned.
          type: string
        imei:
          description: The IMEI number of the device being provisioned.
          type: string
        isoDeviceType:
          description: The 2-digit device type provided on the ISO messages that the
            token is being provisioned to.
          type: string
        msisdn:
          description: The MSISDN of the device being provisioned.
          type: string
        osName:
          description: The name of the device operating system.
          type: string
        osVersion:
          description: The version of the device operating system.
          type: string
        paymentTypes:
          description: Different types of payments supported for the network token.
          items:
            type: string
          type: array
        serialNumber:
          description: The serial number of the device.
          type: string
        storageTechnology:
          description: The architecture or technology used for network token storage.
          type: string
      type: object
    DifferentCurrenciesRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: 'Checks the currency of the payment against the currency of
            the payment instrument.


            Possible values:


            - **true**: The currency of the payment is different from the currency
            of the payment instrument.


            - **false**: The currencies are the same.


            '
          type: boolean
      required:
      - operation
      type: object
    Duration:
      properties:
        unit:
          description: 'The unit of time. You can only use **minutes** and **hours**
            if the `interval.type` is **sliding**.


            Possible values: **minutes**, **hours**, **days**, **weeks**, or **months**'
          enum:
          - days
          - hours
          - minutes
          - months
          - weeks
          type: string
        value:
          description: 'The length of time by the unit. For example, 5 days.


            The maximum duration is 90 days or an equivalent in other units. For example,
            3 months.'
          format: int32
          type: integer
      type: object
    EntryModesRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: 'List of point-of-sale entry modes.


            Possible values: **barcode**, **chip**, **cof**, **contactless**, **magstripe**,
            **manual**, **ocr**, **server**.


            '
          items:
            enum:
            - barcode
            - chip
            - cof
            - contactless
            - magstripe
            - manual
            - ocr
            - server
            - unknown
            type: string
          type: array
      required:
      - operation
      type: object
    Expiry:
      properties:
        month:
          description: The month in which the card will expire.
          type: string
        year:
          description: The year in which the card will expire.
          type: string
      type: object
    Fee:
      properties:
        amount:
          description: An object containing the fee amount.
          $ref: '#/components/schemas/Amount'
      required:
      - amount
      type: object
    GetNetworkTokenResponse:
      properties:
        token:
          description: The details of the network token.
          $ref: '#/components/schemas/NetworkToken'
      required:
      - token
      type: object
    GrantLimit:
      properties:
        amount:
          description: The amount available on the grant account.
          $ref: '#/components/schemas/Amount'
      type: object
    GrantOffer:
      properties:
        accountHolderId:
          description: The identifier of the account holder to which the grant is
            offered.
          type: string
        amount:
          description: The principal amount of the grant.
          $ref: '#/components/schemas/Amount'
        contractType:
          description: 'The contract type of the grant offer. Possible value: **cashAdvance**,
            **loan**.'
          enum:
          - cashAdvance
          - loan
          type: string
        expiresAt:
          description: The end date of the grant offer validity period.
          $ref: '#/components/schemas/LocalDateTime'
        fee:
          description: Details of the fee configuration.
          $ref: '#/components/schemas/Fee'
        id:
          description: The unique identifier of the grant offer.
          type: string
        repayment:
          description: Details of the repayment configuration.
          $ref: '#/components/schemas/Repayment'
        startsAt:
          description: The starting date of the grant offer validity period.
          $ref: '#/components/schemas/LocalDateTime'
      required:
      - accountHolderId
      type: object
    GrantOffers:
      properties:
        grantOffers:
          description: A list of available grant offers.
          items:
            $ref: '#/components/schemas/GrantOffer'
          type: array
      required:
      - grantOffers
      type: object
    HKLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 9- to 12-character bank account number (alphanumeric),
            without separators or whitespace. Starts with the 3-digit branch code.
          maxLength: 12
          minLength: 9
          type: string
        clearingCode:
          description: The 3-digit clearing code, without separators or whitespace.
          maxLength: 3
          minLength: 3
          type: string
        type:
          default: hkLocal
          description: '**hkLocal**'
          enum:
          - hkLocal
          type: string
      required:
      - type
      - accountNumber
      - clearingCode
      type: object
    HULocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 24-digit bank account number, without separators or whitespace.
          maxLength: 24
          minLength: 24
          type: string
        type:
          default: huLocal
          description: '**huLocal**'
          enum:
          - huLocal
          type: string
      required:
      - type
      - accountNumber
      type: object
    IbanAccountIdentification:
      additionalProperties: false
      properties:
        iban:
          description: The international bank account number as defined in the [ISO-13616](https://www.iso.org/standard/81090.html)
            standard.
          type: string
        type:
          default: iban
          description: '**iban**'
          enum:
          - iban
          type: string
      required:
      - type
      - iban
      type: object
    InternationalTransactionRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: 'Boolean indicating whether transaction is an international
            transaction.


            Possible values:


            - **true**: The transaction is an international transaction.


            - **false**: The transaction is a domestic transaction.


            '
          type: boolean
      required:
      - operation
      type: object
    InvalidField:
      properties:
        message:
          description: Description of the validation error.
          type: string
        name:
          description: The field that has an invalid value.
          type: string
        value:
          description: The invalid value.
          type: string
      required:
      - name
      - value
      - message
      type: object
    JSONObject:
      properties:
        paths:
          items:
            $ref: '#/components/schemas/JSONPath'
          type: array
        rootPath:
          $ref: '#/components/schemas/JSONPath'
      type: object
    JSONPath:
      properties:
        content:
          items:
            type: string
          type: array
      type: object
    ListNetworkTokensResponse:
      properties:
        networkTokens:
          description: List of network tokens.
          items:
            $ref: '#/components/schemas/NetworkToken'
          type: array
      type: object
    LocalDateTime:
      type: object
    MatchingTransactionsRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: The number of transactions.
          format: int32
          type: integer
      required:
      - operation
      type: object
    MccsRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: List of merchant category codes (MCCs).
          items:
            type: string
          type: array
      required:
      - operation
      type: object
    MerchantAcquirerPair:
      properties:
        acquirerId:
          description: The acquirer ID.
          type: string
        merchantId:
          description: The merchant identification number (MID).
          type: string
      type: object
    MerchantNamesRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          items:
            $ref: '#/components/schemas/StringMatch'
          type: array
      required:
      - operation
      type: object
    MerchantsRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: List of merchant ID and acquirer ID pairs.
          items:
            $ref: '#/components/schemas/MerchantAcquirerPair'
          type: array
      required:
      - operation
      type: object
    NOLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 11-digit bank account number, without separators or whitespace.
          maxLength: 11
          minLength: 11
          type: string
        type:
          default: noLocal
          description: '**noLocal**'
          enum:
          - noLocal
          type: string
      required:
      - type
      - accountNumber
      type: object
    NZLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 7-digit bank account number, without separators or whitespace.
          maxLength: 7
          minLength: 7
          type: string
        accountSuffix:
          description: The 2- to 3-digit account suffix, without separators or whitespace.
          maxLength: 3
          minLength: 2
          type: string
        bankCode:
          description: The 6-digit bank code including the 2-digit bank code and 4-digit
            branch code, without separators or whitespace.
          maxLength: 6
          minLength: 6
          type: string
        type:
          default: nzLocal
          description: '**nzLocal**'
          enum:
          - nzLocal
          type: string
      required:
      - type
      - accountNumber
      - accountSuffix
      - bankCode
      type: object
    Name:
      properties:
        firstName:
          description: The first name.
          type: string
        lastName:
          description: The last name.
          type: string
      required:
      - firstName
      - lastName
      type: object
    NetworkToken:
      properties:
        brandVariant:
          description: The card brand variant of the payment instrument associated
            with the network token. For example, **mc_prepaid_mrw**.
          type: string
        creationDate:
          description: Date and time when the network token was created, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            extended format. For example, **2020-12-18T10:15:30+01:00**..
          format: date-time
          type: string
        device:
          description: Device details.
          $ref: '#/components/schemas/DeviceInfo'
        id:
          description: The unique identifier of the network token.
          type: string
        paymentInstrumentId:
          description: The unique identifier of the payment instrument to which this
            network token belongs to.
          type: string
        status:
          description: 'The status of the network token. Possible values: **active**,
            **inactive**, **suspended**, **closed**.'
          enum:
          - active
          - inactive
          - suspended
          - closed
          type: string
        tokenLastFour:
          description: The last four digits of the network token `id`.
          type: string
        type:
          description: The type of wallet the network token is associated with. For
            example, **applePay**.
          type: string
      type: object
    NumberAndBicAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The bank account number, without separators or whitespace.
            The length and format depends on the bank or country.
          maxLength: 34
          type: string
        additionalBankIdentification:
          description: Additional identification codes of the bank. Some banks may
            require these identifiers for cross-border transfers.
          $ref: '#/components/schemas/AdditionalBankIdentification'
        bic:
          description: The bank's 8- or 11-character BIC or SWIFT code.
          maxLength: 11
          minLength: 8
          type: string
        type:
          default: numberAndBic
          description: '**numberAndBic**'
          enum:
          - numberAndBic
          type: string
      required:
      - type
      - accountNumber
      - bic
      type: object
    PLLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 26-digit bank account number ([Numer rachunku](https://pl.wikipedia.org/wiki/Numer_Rachunku_Bankowego)),
            without separators or whitespace.
          maxLength: 26
          minLength: 26
          type: string
        type:
          default: plLocal
          description: '**plLocal**'
          enum:
          - plLocal
          type: string
      required:
      - type
      - accountNumber
      type: object
    PaginatedAccountHoldersResponse:
      properties:
        accountHolders:
          description: List of account holders.
          items:
            $ref: '#/components/schemas/AccountHolder'
          type: array
        hasNext:
          description: Indicates whether there are more items on the next page.
          type: boolean
        hasPrevious:
          description: Indicates whether there are more items on the previous page.
          type: boolean
      required:
      - accountHolders
      - hasPrevious
      - hasNext
      type: object
    PaginatedBalanceAccountsResponse:
      properties:
        balanceAccounts:
          description: List of balance accounts.
          items:
            $ref: '#/components/schemas/BalanceAccountBase'
          type: array
        hasNext:
          description: Indicates whether there are more items on the next page.
          type: boolean
        hasPrevious:
          description: Indicates whether there are more items on the previous page.
          type: boolean
      required:
      - balanceAccounts
      - hasPrevious
      - hasNext
      type: object
    PaginatedPaymentInstrumentsResponse:
      properties:
        hasNext:
          description: Indicates whether there are more items on the next page.
          type: boolean
        hasPrevious:
          description: Indicates whether there are more items on the previous page.
          type: boolean
        paymentInstruments:
          description: List of payment instruments associated with the balance account.
          items:
            $ref: '#/components/schemas/PaymentInstrument'
          type: array
      required:
      - paymentInstruments
      - hasPrevious
      - hasNext
      type: object
    PaymentInstrument:
      properties:
        balanceAccountId:
          description: The unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/post/balanceAccounts__resParam_id)
            associated with the payment instrument.
          type: string
        bankAccount:
          description: Contains the business account details. Returned when you create
            a payment instrument with `type` **bankAccount**.
          oneOf:
          - $ref: '#/components/schemas/IbanAccountIdentification'
          - $ref: '#/components/schemas/USLocalAccountIdentification'
        card:
          description: Contains information about the card payment instrument. Returned
            when you create a payment instrument with `type` **card**.
          $ref: '#/components/schemas/Card'
        description:
          description: Your description for the payment instrument, maximum 300 characters.
          maxLength: 300
          type: string
        id:
          description: The unique identifier of the payment instrument.
          type: string
        issuingCountryCode:
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country code where the payment instrument is issued. For example, **NL**
            or **US**.
          type: string
        paymentInstrumentGroupId:
          description: The unique identifier of the [payment instrument group](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/post/paymentInstrumentGroups__resParam_id)
            to which the payment instrument belongs.
          type: string
        reference:
          description: Your reference for the payment instrument, maximum 150 characters.
          maxLength: 150
          type: string
        status:
          description: "The status of the payment instrument. If a status is not specified\
            \ when creating a payment instrument, it is set to **active** by default.\
            \ However, there can be exceptions for cards based on the `card.formFactor`\
            \ and the `issuingCountryCode`. For example, when issuing physical cards\
            \ in the US, the default status is **inactive**.\n\nPossible values: \n\
            \n * **active**:  The payment instrument is active and can be used to\
            \ make payments. \n\n * **inactive**: The payment instrument is inactive\
            \ and cannot be used to make payments. \n\n * **suspended**: The payment\
            \ instrument is suspended, either because it was stolen or lost. \n\n\
            \ * **closed**: The payment instrument is permanently closed. This action\
            \ cannot be undone. \n\n"
          enum:
          - active
          - closed
          - inactive
          - suspended
          type: string
        statusReason:
          x-addedInVersion: '2'
          description: 'The reason for the status of the payment instrument.


            Possible values: **accountClosure**, **damaged**, **endOfLife**, **expired**,
            **lost**, **stolen**, **suspectedFraud**, **transactionRule**, **other**.

            If the reason is **other**, you must also send the `statusComment` parameter
            describing the status change.'
          enum:
          - accountClosure
          - damaged
          - endOfLife
          - expired
          - lost
          - other
          - stolen
          - suspectedFraud
          - transactionRule
          type: string
        type:
          description: 'Type of payment instrument.


            Possible value: **card**, **bankAccount**. '
          enum:
          - bankAccount
          - card
          type: string
      required:
      - balanceAccountId
      - issuingCountryCode
      - type
      - id
      type: object
    PaymentInstrumentGroup:
      properties:
        balancePlatform:
          description: The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id)
            to which the payment instrument group belongs.
          type: string
        description:
          description: Your description for the payment instrument group, maximum
            300 characters.
          maxLength: 300
          type: string
        id:
          description: The unique identifier of the payment instrument group.
          type: string
        properties:
          additionalProperties:
            type: string
          description: Properties of the payment instrument group.
          type: object
        reference:
          description: Your reference for the payment instrument group, maximum 150
            characters.
          maxLength: 150
          type: string
        txVariant:
          description: The tx variant of the payment instrument group.
          type: string
      required:
      - balancePlatform
      - txVariant
      type: object
    PaymentInstrumentGroupInfo:
      properties:
        balancePlatform:
          description: The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id)
            to which the payment instrument group belongs.
          type: string
        description:
          description: Your description for the payment instrument group, maximum
            300 characters.
          maxLength: 300
          type: string
        properties:
          additionalProperties:
            type: string
          description: Properties of the payment instrument group.
          type: object
        reference:
          description: Your reference for the payment instrument group, maximum 150
            characters.
          maxLength: 150
          type: string
        txVariant:
          description: The tx variant of the payment instrument group.
          type: string
      required:
      - balancePlatform
      - txVariant
      type: object
    PaymentInstrumentInfo:
      properties:
        balanceAccountId:
          description: The unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/post/balanceAccounts__resParam_id)
            associated with the payment instrument.
          type: string
        card:
          description: Contains information about the card. Required when you create
            a payment instrument of `type` **card**.
          $ref: '#/components/schemas/CardInfo'
        description:
          description: Your description for the payment instrument, maximum 300 characters.
          maxLength: 300
          type: string
        issuingCountryCode:
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country code where the payment instrument is issued. For example, **NL**
            or **US**.
          type: string
        paymentInstrumentGroupId:
          description: The unique identifier of the [payment instrument group](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/post/paymentInstrumentGroups__resParam_id)
            to which the payment instrument belongs.
          type: string
        reference:
          description: Your reference for the payment instrument, maximum 150 characters.
          maxLength: 150
          type: string
        status:
          description: "The status of the payment instrument. If a status is not specified\
            \ when creating a payment instrument, it is set to **active** by default.\
            \ However, there can be exceptions for cards based on the `card.formFactor`\
            \ and the `issuingCountryCode`. For example, when issuing physical cards\
            \ in the US, the default status is **inactive**.\n\nPossible values: \n\
            \n * **active**:  The payment instrument is active and can be used to\
            \ make payments. \n\n * **inactive**: The payment instrument is inactive\
            \ and cannot be used to make payments. \n\n * **suspended**: The payment\
            \ instrument is suspended, either because it was stolen or lost. \n\n\
            \ * **closed**: The payment instrument is permanently closed. This action\
            \ cannot be undone. \n\n"
          enum:
          - active
          - closed
          - inactive
          - suspended
          type: string
        statusReason:
          x-addedInVersion: '2'
          description: 'The reason for the status of the payment instrument.


            Possible values: **accountClosure**, **damaged**, **endOfLife**, **expired**,
            **lost**, **stolen**, **suspectedFraud**, **transactionRule**, **other**.

            If the reason is **other**, you must also send the `statusComment` parameter
            describing the status change.'
          enum:
          - accountClosure
          - damaged
          - endOfLife
          - expired
          - lost
          - other
          - stolen
          - suspectedFraud
          - transactionRule
          type: string
        type:
          description: 'Type of payment instrument.


            Possible value: **card**, **bankAccount**. '
          enum:
          - bankAccount
          - card
          type: string
      required:
      - balanceAccountId
      - issuingCountryCode
      - type
      type: object
    PaymentInstrumentRequirement:
      additionalProperties: false
      properties:
        description:
          description: Specifies the requirements for the payment instrument that
            need to be included in the request for a particular route.
          type: string
        issuingCountryCode:
          description: The two-character ISO-3166-1 alpha-2 country code of the counterparty.
            For example, **US** or **NL**.
          type: string
        paymentInstrumentType:
          description: The type of the payment instrument. For example, "BankAccount"
            or "Card".
          enum:
          - BankAccount
          - Card
          type: string
        type:
          default: paymentInstrumentRequirement
          description: '**paymentInstrumentRequirement**'
          enum:
          - paymentInstrumentRequirement
          type: string
      required:
      - type
      type: object
    PaymentInstrumentRevealInfo:
      properties:
        cvc:
          description: The CVC2 value of the card.
          type: string
        expiration:
          description: The expiration date of the card.
          $ref: '#/components/schemas/Expiry'
        pan:
          description: The primary account number (PAN) of the card.
          type: string
      required:
      - pan
      - expiration
      - cvc
      type: object
    PaymentInstrumentUpdateRequest:
      properties:
        balanceAccountId:
          description: 'The unique identifier of the balance account associated with
            this payment instrument.

            >You can only change the balance account ID if the payment instrument
            has **inactive** status.'
          type: string
        card:
          description: Object that contains information about the card payment instrument.
          $ref: '#/components/schemas/CardInfo'
        status:
          description: "The status of the payment instrument. If a status is not specified\
            \ when creating a payment instrument, it is set to **active** by default.\
            \ However, there can be exceptions for cards based on the `card.formFactor`\
            \ and the `issuingCountryCode`. For example, when issuing physical cards\
            \ in the US, the default status is **inactive**.\n\nPossible values: \n\
            \n * **active**:  The payment instrument is active and can be used to\
            \ make payments. \n\n * **inactive**: The payment instrument is inactive\
            \ and cannot be used to make payments. \n\n * **suspended**: The payment\
            \ instrument is suspended, either because it was stolen or lost. \n\n\
            \ * **closed**: The payment instrument is permanently closed. This action\
            \ cannot be undone. \n\n"
          enum:
          - active
          - closed
          - inactive
          - suspended
          type: string
        statusComment:
          description: 'Comment for the status of the payment instrument.


            Required if `statusReason` is **other**.'
          type: string
        statusReason:
          x-addedInVersion: '2'
          description: 'The reason for updating the status of the payment instrument.


            Possible values: **lost**, **stolen**, **damaged**, **suspectedFraud**,
            **expired**, **endOfLife**, **accountClosure**, **other**.

            If the reason is **other**, you must also send the `statusComment` parameter
            describing the status change.'
          enum:
          - accountClosure
          - damaged
          - endOfLife
          - expired
          - lost
          - other
          - stolen
          - suspectedFraud
          - transactionRule
          type: string
      type: object
    Phone:
      properties:
        number:
          description: "The full phone number provided as a single string. \nFor example,\
            \ **\"0031 6 11 22 33 44\"**, **\"+316/1122-3344\"**, \n\n or **\"(0031)\
            \ 611223344\"**."
          type: string
        type:
          description: "Type of phone number.\nPossible values: \n**Landline**, **Mobile**.\n"
          enum:
          - landline
          - mobile
          type: string
      required:
      - number
      - type
      type: object
    PhoneNumber:
      properties:
        phoneCountryCode:
          description: 'The two-character ISO-3166-1 alpha-2 country code of the phone
            number.

            For example, **US** or **NL**.'
          type: string
        phoneNumber:
          description: 'The phone number.

            The inclusion of the phone number country code is not necessary.'
          type: string
        phoneType:
          description: 'The type of the phone number.

            Possible values: **Landline**, **Mobile**, **SIP**, **Fax**.'
          enum:
          - Fax
          - Landline
          - Mobile
          - SIP
          type: string
      type: object
    PlatformPaymentConfiguration:
      properties:
        salesDayClosingTime:
          description: 'Specifies at what time a [sales day](https://docs.adyen.com/marketplaces-and-platforms/receive-funds/sales-day-settlement#sales-day)
            ends.


            Possible values: Time in **"HH:MM"** format. **HH** ranges from **00**
            to **07**. **MM** must be **00**.


            Default value: **"00:00"**.'
          format: time
          type: string
        settlementDelayDays:
          description: 'Specifies after how many business days the funds in a [settlement
            batch](https://docs.adyen.com/marketplaces-and-platforms/receive-funds/sales-day-settlement#settlement-batch)
            are made available.


            Possible values: **0** to **10**, or **null**.

            * Setting this value to an integer enables [Sales day settlement](https://docs.adyen.com/marketplaces-and-platforms/receive-funds/sales-day-settlement).

            * Setting this value to **null** enables [Pass-through settlement](https://docs.adyen.com/marketplaces-and-platforms/receive-funds/pass-through-settlement).


            Default value: **null**.'
          format: int32
          type: integer
      type: object
    ProcessingTypesRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: 'List of processing types.


            Possible values: **atmWithdraw**, **balanceInquiry**, **ecommerce**, **moto**,
            **pos**, **recurring**, **token**.


            '
          items:
            enum:
            - atmWithdraw
            - balanceInquiry
            - ecommerce
            - moto
            - pos
            - recurring
            - token
            - unknown
            type: string
          type: array
      required:
      - operation
      type: object
    RemediatingAction:
      properties:
        code:
          description: The remediating action code.
          type: string
        message:
          description: A description of how you can resolve the verification error.
          type: string
      type: object
    Repayment:
      properties:
        basisPoints:
          description: The repayment that is deducted daily from incoming net volume,
            in [basis points](https://www.investopedia.com/terms/b/basispoint.asp).
          format: int32
          type: integer
        term:
          description: An object containing the details of the configuration for repayment
            term.
          $ref: '#/components/schemas/RepaymentTerm'
        threshold:
          description: An object containing the details of the 30-day repayment threshold.
          $ref: '#/components/schemas/ThresholdRepayment'
      required:
      - basisPoints
      type: object
    RepaymentTerm:
      properties:
        estimatedDays:
          description: The estimated term for repaying the grant, in days.
          format: int32
          type: integer
        maximumDays:
          description: The maximum term for repaying the grant, in days. Only applies
            when `contractType` is **loan**.
          format: int32
          type: integer
      required:
      - estimatedDays
      type: object
    RestServiceError:
      properties:
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        errorCode:
          description: A code that identifies the problem type.
          type: string
        instance:
          description: A unique URI that identifies the specific occurrence of the
            problem.
          type: string
        invalidFields:
          description: Detailed explanation of each validation error, when applicable.
          items:
            $ref: '#/components/schemas/InvalidField'
          type: array
        requestId:
          description: A unique reference for the request, essentially the same as
            `pspReference`.
          type: string
        response:
          description: JSON response payload.
          $ref: '#/components/schemas/JSONObject'
        status:
          description: The HTTP status code.
          format: int32
          type: integer
        title:
          description: A short, human-readable summary of the problem type.
          type: string
        type:
          description: A URI that identifies the problem type, pointing to human-readable
            documentation on this problem type.
          type: string
      required:
      - type
      - errorCode
      - title
      - detail
      - status
      type: object
    SELocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 7- to 10-digit bank account number ([Bankkontonummer](https://sv.wikipedia.org/wiki/Bankkonto)),
            without the clearing number, separators, or whitespace.
          maxLength: 10
          minLength: 7
          type: string
        clearingNumber:
          description: The 4- to 5-digit clearing number ([Clearingnummer](https://sv.wikipedia.org/wiki/Clearingnummer)),
            without separators or whitespace.
          maxLength: 5
          minLength: 4
          type: string
        type:
          default: seLocal
          description: '**seLocal**'
          enum:
          - seLocal
          type: string
      required:
      - type
      - accountNumber
      - clearingNumber
      type: object
    SGLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 4- to 19-digit bank account number, without separators
            or whitespace.
          maxLength: 19
          minLength: 4
          type: string
        bic:
          description: The bank's 8- or 11-character BIC or SWIFT code.
          maxLength: 11
          minLength: 8
          type: string
        type:
          default: sgLocal
          description: '**sgLocal**'
          enum:
          - sgLocal
          type: string
      required:
      - accountNumber
      - bic
      type: object
    StringMatch:
      properties:
        operation:
          description: 'The type of string matching operation. Possible values:  **startsWith**,
            **endsWith**, **isEqualTo**, **contains**,'
          enum:
          - contains
          - endsWith
          - isEqualTo
          - startsWith
          type: string
        value:
          description: The string to be matched.
          type: string
      type: object
    SweepConfigurationV2:
      properties:
        category:
          x-addedInVersion: '2'
          description: "The type of transfer that results from the sweep.\n\nPossible\
            \ values:\n\n - **bank**: Sweep to a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id).\n\
            \n- **internal**: Transfer to another [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id)\
            \ within your platform.\n\nRequired when setting `priorities`."
          enum:
          - bank
          - internal
          - platformPayment
          type: string
        counterparty:
          description: 'The destination or the source of the funds, depending on the
            sweep `type`.


            Either a `balanceAccountId`, `transferInstrumentId`, or `merchantAccount`
            is required.'
          $ref: '#/components/schemas/SweepCounterparty'
        currency:
          description: 'The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes)
            in uppercase. For example, **EUR**.


            The sweep currency must match any of the [balances currencies](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balanceAccounts/{id}__resParam_balances).'
          type: string
        description:
          description: 'The message that will be used in the sweep transfer''s description
            body with a maximum length of 140 characters.


            If the message is longer after replacing placeholders, the message will
            be cut off at 140 characters.'
          type: string
        id:
          description: The unique identifier of the sweep.
          readOnly: true
          type: string
        priorities:
          x-addedInVersion: '2'
          description: 'The list of priorities for the bank transfer. This sets the
            speed at which the transfer is sent and the fees that you have to pay.
            You can provide multiple priorities. Adyen will try to pay out using the
            priority listed first, and if that''s not possible, it moves on to the
            next option in the order of provided priorities.


            Possible values:


            * **regular**: For normal, low-value transactions.


            * **fast**: Faster way to transfer funds but has higher fees. Recommended
            for high-priority, low-value transactions.


            * **wire**: Fastest way to transfer funds but has the highest fees. Recommended
            for high-priority, high-value transactions.


            * **instant**: Instant way to transfer funds in [SEPA countries](https://www.ecb.europa.eu/paym/integration/retail/sepa/html/index.en.html).


            * **crossBorder**: High-value transfer to a recipient in a different country.


            * **internal**: Transfer to an Adyen-issued business bank account (by
            bank account number/IBAN).


            Set `category` to **bank**. For more details, see [optional priorities
            setup](https://docs.adyen.com/marketplaces-and-platforms/payout-to-users/scheduled-payouts#optional-priorities-setup).'
          items:
            enum:
            - crossBorder
            - directDebit
            - fast
            - instant
            - internal
            - regular
            - wire
            type: string
          type: array
        reason:
          description: The reason for disabling the sweep.
          enum:
          - amountLimitExceeded
          - approved
          - counterpartyAccountBlocked
          - counterpartyAccountClosed
          - counterpartyAccountNotFound
          - counterpartyAddressRequired
          - counterpartyBankTimedOut
          - counterpartyBankUnavailable
          - error
          - notEnoughBalance
          - refusedByCounterpartyBank
          - routeNotFound
          - unknown
          readOnly: true
          type: string
        schedule:
          description: The schedule when the `triggerAmount` is evaluated. If the
            balance meets the threshold, funds are pushed out of or pulled in to the
            balance account.
          $ref: '#/components/schemas/SweepSchedule'
        status:
          description: "The status of the sweep. If not provided, by default, this\
            \ is set to **active**.\n\nPossible values: \n\n * **active**:  the sweep\
            \ is enabled and funds will be pulled in or pushed out based on the defined\
            \ configuration. \n\n * **inactive**: the sweep is disabled and cannot\
            \ be triggered. \n\n"
          enum:
          - active
          - inactive
          type: string
        sweepAmount:
          description: The amount that must be pushed out or pulled in. You can configure
            either `sweepAmount` or `targetAmount`, not both.
          $ref: '#/components/schemas/Amount'
        targetAmount:
          description: The amount that must be available in the balance account after
            the sweep. You can configure either `sweepAmount` or `targetAmount`, not
            both.
          $ref: '#/components/schemas/Amount'
        triggerAmount:
          description: 'The threshold amount that triggers the sweep. If not provided,
            by default, the amount is set to zero. The `triggerAmount` is evaluated
            according to the specified `schedule.type`.


            * For `type` **pull**, if the balance is less than or equal to the `triggerAmount`,
            funds are pulled in to the balance account.


            * For `type` **push**, if the balance is more than or equal to the `triggerAmount`,
            funds are pushed out of the balance account.'
          $ref: '#/components/schemas/Amount'
        type:
          default: push
          description: "The direction of sweep, whether pushing out or pulling in\
            \ funds to the balance account. If not provided, by default, this is set\
            \ to **push**.\n\nPossible values:\n\n * **push**: _push out funds_ to\
            \ a destination balance account or transfer instrument.\n\n * **pull**:\
            \ _pull in funds_ from a source merchant account, transfer instrument,\
            \ or balance account."
          enum:
          - pull
          - push
          type: string
      required:
      - id
      - schedule
      - currency
      - counterparty
      type: object
    SweepCounterparty:
      properties:
        balanceAccountId:
          description: "The unique identifier of the destination or source [balance\
            \ account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id).\n\
            \n You can only use this for periodic sweep schedules such as `schedule.type`\
            \ **daily** or **monthly**."
          type: string
        merchantAccount:
          description: 'The merchant account that will be the source of funds.


            You can only use this parameter with sweeps of `type` **pull** and `schedule.type`
            **balance**, and if you are processing payments with Adyen.'
          type: string
        transferInstrumentId:
          description: 'The unique identifier of the destination or source [transfer
            instrument](https://docs.adyen.com/api-explorer/legalentity/latest/post/transferInstruments#responses-200-id)
            depending on the sweep `type`


            . To [set up automated top-up sweeps to balance accounts](https://docs.adyen.com/marketplaces-and-platforms/top-up-balance-account/#before-you-begin),
            use this parameter in combination with a `merchantAccount` and a sweep
            `type` of **pull**. Top-up sweeps start a direct debit request from the
            source transfer instrument. Contact Adyen Support to enable this feature.'
          type: string
      type: object
    SweepSchedule:
      properties:
        cronExpression:
          description: "A [cron expression](https://en.wikipedia.org/wiki/Cron#CRON_expression)\
            \ that is used to set the sweep schedule. The schedule uses the time zone\
            \ of the balance account. \nFor example, **30 17 * * MON** schedules a\
            \ sweep every Monday at 17:30.\n\nThe expression must have five values\
            \ separated by a single space in the following order:\n\n* Minute: **0-59**\n\
            \n* Hour: **0-23**\n\n* Day of the month: **1-31**\n\n* Month: **1-12**\
            \ or **JAN-DEC**\n\n* Day of the week: **0-7** (0 and 7 are Sunday) or\
            \ **MON-SUN**.\n\nThe following non-standard characters are supported:\
            \ **&ast;**, **L**, **#**, **W** and **/**. See [crontab guru](https://crontab.guru/)\
            \ for more examples.\n\nRequired when `type` is **cron**.\n"
          type: string
        type:
          description: 'The schedule type.


            Possible values:


            * **cron**: push out funds based on a `cronExpression`.


            * **daily**: push out funds daily at 07:00 AM CET.


            * **weekly**: push out funds every Monday at 07:00 AM CET.


            * **monthly**: push out funds every first of the month at 07:00 AM CET.


            * **balance**: pull in funds instantly if the balance is less than or
            equal to the `triggerAmount`.

            You can only use this for sweeps of `type` **pull** and when the source
            is a `merchantAccount` or `transferInstrument`.

            If the source is transferInstrument, merchant account identifier is still
            required, with which you want to process the transaction.

            '
          enum:
          - daily
          - weekly
          - monthly
          - balance
          - cron
          type: string
      required:
      - type
      type: object
    ThresholdRepayment:
      properties:
        amount:
          description: The amount to be repaid on a 30-day basis.
          $ref: '#/components/schemas/Amount'
      required:
      - amount
      type: object
    TimeOfDay:
      properties:
        endTime:
          description: 'The end time in a time-only ISO-8601 extended offset format.
            For example: **08:00:00+02:00**, **22:30:00-03:00**.


            '
          type: string
        startTime:
          description: 'The start time in a time-only ISO-8601 extended offset format.
            For example: **08:00:00+02:00**, **22:30:00-03:00**.


            '
          type: string
      type: object
    TimeOfDayRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          $ref: '#/components/schemas/TimeOfDay'
      required:
      - operation
      type: object
    TotalAmountRestriction:
      properties:
        operation:
          description: Defines how the condition must be evaluated.
          type: string
        value:
          description: The amount value and currency.
          $ref: '#/components/schemas/Amount'
      required:
      - operation
      type: object
    TransactionRule:
      properties:
        aggregationLevel:
          x-addedInVersion: '2'
          description: 'The level at which data must be accumulated, used in rules
            with `type` **velocity** or **maxUsage**. The level must be the [same
            or lower in hierarchy](https://docs.adyen.com/issuing/transaction-rules#accumulate-data)
            than the `entityKey`.


            If not provided, by default, the rule will accumulate data at the **paymentInstrument**
            level.


            Possible values: **paymentInstrument**, **paymentInstrumentGroup**, **balanceAccount**,
            **accountHolder**, **balancePlatform**.'
          type: string
        description:
          description: Your description for the transaction rule, maximum 300 characters.
          maxLength: 300
          type: string
        endDate:
          description: 'The date when the rule will stop being evaluated, in ISO 8601
            extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.


            If not provided, the rule will be evaluated until the rule status is set
            to **inactive**.'
          type: string
        entityKey:
          x-addedInVersion: '2'
          description: The type and unique identifier of the resource to which the
            rule applies.
          $ref: '#/components/schemas/TransactionRuleEntityKey'
        id:
          description: The unique identifier of the transaction rule.
          type: string
        interval:
          description: The [time interval](https://docs.adyen.com/issuing/transaction-rules#time-intervals)
            when the rule conditions apply.
          $ref: '#/components/schemas/TransactionRuleInterval'
        outcomeType:
          x-addedInVersion: '2'
          description: "The [outcome](https://docs.adyen.com/issuing/transaction-rules#outcome)\
            \ that will be applied when a transaction meets the conditions of the\
            \ rule. If not provided, by default, this is set to **hardBlock**.\n\n\
            Possible values:\n\n * **hardBlock**: the transaction is declined.\n\n\
            * **scoreBased**: the transaction is assigned the `score` you specified.\
            \ Adyen calculates the total score and if it exceeds 100, the transaction\
            \ is declined."
          enum:
          - enforceSCA
          - hardBlock
          - scoreBased
          type: string
        reference:
          description: Your reference for the transaction rule, maximum 150 characters.
          maxLength: 150
          type: string
        requestType:
          x-addedInVersion: '2'
          description: 'Indicates the type of request to which the rule applies. If
            not provided, by default, this is set to **authorization**.


            Possible values: **authorization**, **authentication**, **tokenization**,
            **bankTransfer**.'
          enum:
          - authentication
          - authorization
          - bankTransfer
          - tokenization
          type: string
        ruleRestrictions:
          x-addedInVersion: '2'
          description: 'Contains one or more objects that define the [rule conditions](https://docs.adyen.com/issuing/transaction-rules#conditions).
            Each object must have a value and an operation which determines how the
            values must be evaluated.


            For example, a `countries` object can have a list of country codes **["US",
            "CA"]** in the `value` field and **anyMatch** in the `operation` field.'
          $ref: '#/components/schemas/TransactionRuleRestrictions'
        score:
          x-addedInVersion: '2'
          description: A positive or negative score applied to the transaction if
            it meets the conditions of the rule. Required when `outcomeType` is **scoreBased**.  The
            value must be between **-100** and **100**.
          format: int32
          type: integer
        startDate:
          description: "The date when the rule will start to be evaluated, in ISO\
            \ 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.\n\
            \nIf not provided when creating a transaction rule, the `startDate` is\
            \ set to the date when the rule status is set to **active**. \n\n"
          type: string
        status:
          description: "The status of the transaction rule. If you provide a `startDate`\
            \ in the request, the rule is automatically created \nwith an **active**\
            \ status. \n\nPossible values: **active**, **inactive**."
          enum:
          - active
          - inactive
          type: string
        type:
          description: "The [type of rule](https://docs.adyen.com/issuing/transaction-rules#rule-types),\
            \ which defines if a rule blocks transactions based on individual characteristics\
            \ or accumulates data.\n\nPossible values:\n * **blockList**: decline\
            \ a transaction when the conditions are met.\n * **maxUsage**: add the\
            \ amount or number of transactions for the lifetime of a payment instrument,\
            \ and then decline a transaction when the specified limits are met.\n\
            \ * **velocity**: add the amount or number of transactions based on a\
            \ specified time interval, and then decline a transaction when the specified\
            \ limits are met.\n"
          enum:
          - allowList
          - blockList
          - maxUsage
          - velocity
          type: string
      required:
      - type
      - description
      - reference
      - entityKey
      - interval
      - ruleRestrictions
      type: object
    TransactionRuleEntityKey:
      properties:
        entityReference:
          description: The unique identifier of the resource.
          type: string
        entityType:
          description: 'The type of resource.


            Possible values: **balancePlatform**, **paymentInstrumentGroup**, **accountHolder**,
            **balanceAccount**, or **paymentInstrument**.'
          type: string
      type: object
    TransactionRuleInfo:
      properties:
        aggregationLevel:
          x-addedInVersion: '2'
          description: 'The level at which data must be accumulated, used in rules
            with `type` **velocity** or **maxUsage**. The level must be the [same
            or lower in hierarchy](https://docs.adyen.com/issuing/transaction-rules#accumulate-data)
            than the `entityKey`.


            If not provided, by default, the rule will accumulate data at the **paymentInstrument**
            level.


            Possible values: **paymentInstrument**, **paymentInstrumentGroup**, **balanceAccount**,
            **accountHolder**, **balancePlatform**.'
          type: string
        description:
          description: Your description for the transaction rule, maximum 300 characters.
          maxLength: 300
          type: string
        endDate:
          description: 'The date when the rule will stop being evaluated, in ISO 8601
            extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.


            If not provided, the rule will be evaluated until the rule status is set
            to **inactive**.'
          type: string
        entityKey:
          x-addedInVersion: '2'
          description: The type and unique identifier of the resource to which the
            rule applies.
          $ref: '#/components/schemas/TransactionRuleEntityKey'
        interval:
          description: The [time interval](https://docs.adyen.com/issuing/transaction-rules#time-intervals)
            when the rule conditions apply.
          $ref: '#/components/schemas/TransactionRuleInterval'
        outcomeType:
          x-addedInVersion: '2'
          description: "The [outcome](https://docs.adyen.com/issuing/transaction-rules#outcome)\
            \ that will be applied when a transaction meets the conditions of the\
            \ rule. If not provided, by default, this is set to **hardBlock**.\n\n\
            Possible values:\n\n * **hardBlock**: the transaction is declined.\n\n\
            * **scoreBased**: the transaction is assigned the `score` you specified.\
            \ Adyen calculates the total score and if it exceeds 100, the transaction\
            \ is declined."
          enum:
          - enforceSCA
          - hardBlock
          - scoreBased
          type: string
        reference:
          description: Your reference for the transaction rule, maximum 150 characters.
          maxLength: 150
          type: string
        requestType:
          x-addedInVersion: '2'
          description: 'Indicates the type of request to which the rule applies. If
            not provided, by default, this is set to **authorization**.


            Possible values: **authorization**, **authentication**, **tokenization**,
            **bankTransfer**.'
          enum:
          - authentication
          - authorization
          - bankTransfer
          - tokenization
          type: string
        ruleRestrictions:
          x-addedInVersion: '2'
          description: 'Contains one or more objects that define the [rule conditions](https://docs.adyen.com/issuing/transaction-rules#conditions).
            Each object must have a value and an operation which determines how the
            values must be evaluated.


            For example, a `countries` object can have a list of country codes **["US",
            "CA"]** in the `value` field and **anyMatch** in the `operation` field.'
          $ref: '#/components/schemas/TransactionRuleRestrictions'
        score:
          x-addedInVersion: '2'
          description: A positive or negative score applied to the transaction if
            it meets the conditions of the rule. Required when `outcomeType` is **scoreBased**.  The
            value must be between **-100** and **100**.
          format: int32
          type: integer
        startDate:
          description: "The date when the rule will start to be evaluated, in ISO\
            \ 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.\n\
            \nIf not provided when creating a transaction rule, the `startDate` is\
            \ set to the date when the rule status is set to **active**. \n\n"
          type: string
        status:
          description: "The status of the transaction rule. If you provide a `startDate`\
            \ in the request, the rule is automatically created \nwith an **active**\
            \ status. \n\nPossible values: **active**, **inactive**."
          enum:
          - active
          - inactive
          type: string
        type:
          description: "The [type of rule](https://docs.adyen.com/issuing/transaction-rules#rule-types),\
            \ which defines if a rule blocks transactions based on individual characteristics\
            \ or accumulates data.\n\nPossible values:\n * **blockList**: decline\
            \ a transaction when the conditions are met.\n * **maxUsage**: add the\
            \ amount or number of transactions for the lifetime of a payment instrument,\
            \ and then decline a transaction when the specified limits are met.\n\
            \ * **velocity**: add the amount or number of transactions based on a\
            \ specified time interval, and then decline a transaction when the specified\
            \ limits are met.\n"
          enum:
          - allowList
          - blockList
          - maxUsage
          - velocity
          type: string
      required:
      - type
      - description
      - reference
      - entityKey
      - interval
      - ruleRestrictions
      type: object
    TransactionRuleInterval:
      properties:
        dayOfMonth:
          x-addedInVersion: '2'
          description: The day of month, used when the `duration.unit` is **months**.
            If not provided, by default, this is set to **1**, the first day of the
            month.
          format: int32
          type: integer
        dayOfWeek:
          x-addedInVersion: '2'
          description: 'The day of week, used when the `duration.unit` is **weeks**.
            If not provided, by default, this is set to **monday**.


            Possible values: **sunday**, **monday**, **tuesday**, **wednesday**, **thursday**,
            **friday**.'
          enum:
          - friday
          - monday
          - saturday
          - sunday
          - thursday
          - tuesday
          - wednesday
          type: string
        duration:
          x-addedInVersion: '2'
          description: The duration, which you can specify in hours, days, weeks,
            or months. The maximum duration is 90 days or an equivalent in other units.
            Required when the `type` is **rolling** or **sliding**.
          $ref: '#/components/schemas/Duration'
        timeOfDay:
          x-addedInVersion: '2'
          description: The time of day, in **hh:mm:ss** format, used when the `duration.unit`
            is **hours**. If not provided, by default, this is set to **00:00:00**.
          type: string
        timeZone:
          x-addedInVersion: '2'
          description: The [time zone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
            For example, **Europe/Amsterdam**. By default, this is set to **UTC**.
          type: string
        type:
          description: "The [type of interval](https://docs.adyen.com/issuing/transaction-rules#time-intervals)\
            \ during which the rule conditions and limits apply, and how often counters\
            \ are reset.\n\nPossible values:\n  * **perTransaction**: conditions are\
            \ evaluated and the counters are reset for every transaction.\n * **daily**:\
            \ the counters are reset daily at 00:00:00 UTC.\n * **weekly**: the counters\
            \ are reset every Monday at 00:00:00 UTC. \n * **monthly**: the counters\
            \ reset every first day of the month at 00:00:00 UTC. \n * **lifetime**:\
            \ conditions are applied to the lifetime of the payment instrument.\n\
            \ * **rolling**: conditions are applied and the counters are reset based\
            \ on a `duration`. If the reset date and time are not provided, Adyen\
            \ applies the default reset time similar to fixed intervals. For example,\
            \ if the duration is every two weeks, the counter resets every third Monday\
            \ at 00:00:00 UTC.\n * **sliding**: conditions are applied and the counters\
            \ are reset based on the current time and a `duration` that you specify."
          enum:
          - daily
          - lifetime
          - monthly
          - perTransaction
          - rolling
          - sliding
          - weekly
          type: string
      required:
      - type
      type: object
    TransactionRuleResponse:
      properties:
        transactionRule:
          description: The transaction rule.
          $ref: '#/components/schemas/TransactionRule'
      type: object
    TransactionRuleRestrictions:
      properties:
        activeNetworkTokens:
          description: 'The total number of tokens that a card can have across different
            kinds of digital wallets on the user''s phones, watches, or other wearables.


            Supported operations: **equals**, **notEquals**, **greaterThanOrEqualTo**,
            **greaterThan**, **lessThanOrEqualTo**, **lessThan**.'
          $ref: '#/components/schemas/ActiveNetworkTokensRestriction'
        brandVariants:
          description: 'List of card brand variants and the operation.


            Supported operations: **anyMatch**, **noneMatch**.'
          $ref: '#/components/schemas/BrandVariantsRestriction'
        countries:
          description: 'List of countries and the operation.


            Supported operations: **anyMatch**, **noneMatch**.'
          $ref: '#/components/schemas/CountriesRestriction'
        dayOfWeek:
          description: 'List of week days and the operation. Supported operations:
            **anyMatch**, **noneMatch**.'
          $ref: '#/components/schemas/DayOfWeekRestriction'
        differentCurrencies:
          description: 'Compares the currency of the payment against the currency
            of the payment instrument, and specifies the operation.


            Supported operations: **equals**, **notEquals**.'
          $ref: '#/components/schemas/DifferentCurrenciesRestriction'
        entryModes:
          description: 'List of point-of-sale entry modes and the operation..


            Supported operations: **anyMatch**, **noneMatch**.'
          $ref: '#/components/schemas/EntryModesRestriction'
        internationalTransaction:
          description: 'Indicates whether transaction is an international transaction
            and specifies the operation.


            Supported operations: **equals**, **notEquals**.'
          $ref: '#/components/schemas/InternationalTransactionRestriction'
        matchingTransactions:
          description: 'The number of transactions and the operation.


            Supported operations: **equals**, **notEquals**, **greaterThanOrEqualTo**,
            **greaterThan**, **lessThanOrEqualTo**, **lessThan**.'
          $ref: '#/components/schemas/MatchingTransactionsRestriction'
        mccs:
          description: 'List of merchant category codes (MCCs) and the operation.


            Supported operations: **anyMatch**, **noneMatch**.'
          $ref: '#/components/schemas/MccsRestriction'
        merchantNames:
          description: 'List of names that will be compared to the merchant name according
            to the matching type.


            Supported operations: **anyMatch**, **noneMatch**.'
          $ref: '#/components/schemas/MerchantNamesRestriction'
        merchants:
          description: 'List of merchant ID and acquirer ID pairs, and the operation.


            Supported operations: **anyMatch**, **noneMatch**.'
          $ref: '#/components/schemas/MerchantsRestriction'
        processingTypes:
          description: 'List of processing types and the operation.


            Supported operations: **anyMatch**, **noneMatch**.'
          $ref: '#/components/schemas/ProcessingTypesRestriction'
        timeOfDay:
          description: 'A start and end time in a time-only ISO-8601 extended offset
            format. Supported operations: **equals**, **notEquals**.'
          $ref: '#/components/schemas/TimeOfDayRestriction'
        totalAmount:
          description: 'The total amount and the operation.


            Supported operations: **equals**, **notEquals**, **greaterThanOrEqualTo**,
            **greaterThan**, **lessThanOrEqualTo**, **lessThan**.'
          $ref: '#/components/schemas/TotalAmountRestriction'
      type: object
    TransactionRulesResponse:
      properties:
        transactionRules:
          description: List of transaction rules.
          items:
            $ref: '#/components/schemas/TransactionRule'
          type: array
      type: object
    TransferRoute:
      properties:
        balancePlatform:
          description: The unique identifier assigned to the balance platform associated
            with the account holder.
          type: string
        category:
          description: " The type of transfer.\n\n Possible values:\n\n  - **bank**:\
            \ Transfer to a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id)\
            \ or a bank account.\n"
          enum:
          - bank
          - card
          - grants
          - internal
          - issuedCard
          - migration
          - platformPayment
          type: string
        country:
          description: The two-character ISO-3166-1 alpha-2 country code of the counterparty.
            For example, **US** or **NL**.
          type: string
        currency:
          description: The three-character ISO currency code of transfer. For example,
            **USD** or **EUR**.
          type: string
        priority:
          description: 'The priority for the bank transfer. This sets the speed at
            which the transfer is sent and the fees that you have to pay. Possible
            values:


            * **regular**: For normal, low-value transactions.


            * **fast**: Faster way to transfer funds but has higher fees. Recommended
            for high-priority, low-value transactions.


            * **wire**: Fastest way to transfer funds but has the highest fees. Recommended
            for high-priority, high-value transactions.


            * **instant**: Instant way to transfer funds in [SEPA countries](https://www.ecb.europa.eu/paym/integration/retail/sepa/html/index.en.html).


            * **crossBorder**: High-value transfer to a recipient in a different country.


            * **internal**: Transfer to an Adyen-issued business bank account (by
            bank account number/IBAN).'
          enum:
          - crossBorder
          - fast
          - instant
          - internal
          - regular
          - wire
          type: string
        requirements:
          description: A set of rules defined by clearing houses and banking partners.
            Your transfer request must adhere to these rules to ensure successful
            initiation of transfer. Based on the priority, one or more requirements
            may be returned. Each requirement is defined with a `type` and `description`.
          oneOf:
          - $ref: '#/components/schemas/AddressRequirement'
          - $ref: '#/components/schemas/AmountMinMaxRequirement'
          - $ref: '#/components/schemas/BankAccountIdentificationTypeRequirement'
          - $ref: '#/components/schemas/PaymentInstrumentRequirement'
      type: object
    TransferRouteRequest:
      properties:
        balanceAccountId:
          description: 'The unique identifier of the source [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id).

            Required if `counterparty` is **transferInstrumentId**.'
          type: string
        balancePlatform:
          description: The unique identifier assigned to the balance platform associated
            with the account holder.
          type: string
        category:
          description: " The type of transfer. Possible values:\n\n  - **bank**: Transfer\
            \ to a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id)\
            \ or a bank account.\n"
          enum:
          - bank
          type: string
        counterparty:
          description: The recipient of the funds transfer. A bank account or a transfer
            instrument.
          $ref: '#/components/schemas/Counterparty'
        country:
          description: "The two-character ISO-3166-1 alpha-2 country code of the counterparty.\
            \ For example, **US** or **NL**.\n > Either `counterparty` or `country`\
            \ field must be provided in a transfer route request."
          type: string
        currency:
          description: The three-character ISO currency code of transfer. For example,
            **USD** or **EUR**.
          type: string
        priorities:
          description: 'The list of priorities for the bank transfer. Priorities set
            the speed at which the transfer is sent and the fees that you have to
            pay. Multiple values can be provided.

            Possible values:


            * **regular**: For normal, low-value transactions.


            * **fast**: Faster way to transfer funds but has higher fees. Recommended
            for high-priority, low-value transactions.


            * **wire**: Fastest way to transfer funds but has the highest fees. Recommended
            for high-priority, high-value transactions.


            * **instant**: Instant way to transfer funds in [SEPA countries](https://www.ecb.europa.eu/paym/integration/retail/sepa/html/index.en.html).


            * **crossBorder**: High-value transfer to a recipient in a different country.


            * **internal**: Transfer to an Adyen-issued business bank account (by
            bank account number/IBAN).'
          items:
            enum:
            - crossBorder
            - fast
            - instant
            - internal
            - regular
            - wire
            type: string
          type: array
      required:
      - balancePlatform
      - currency
      - category
      type: object
    TransferRouteResponse:
      properties:
        transferRoutes:
          description: List of available priorities for a transfer, along with requirements.
            Use this information to initiate a transfer.
          items:
            $ref: '#/components/schemas/TransferRoute'
          type: array
      type: object
    UKLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 8-digit bank account number, without separators or whitespace.
          maxLength: 8
          minLength: 8
          type: string
        sortCode:
          description: The 6-digit [sort code](https://en.wikipedia.org/wiki/Sort_code),
            without separators or whitespace.
          maxLength: 6
          minLength: 6
          type: string
        type:
          default: ukLocal
          description: '**ukLocal**'
          enum:
          - ukLocal
          type: string
      required:
      - type
      - accountNumber
      - sortCode
      type: object
    USLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The bank account number, without separators or whitespace.
          maxLength: 18
          minLength: 2
          type: string
        accountType:
          default: checking
          description: 'The bank account type.


            Possible values: **checking** or **savings**. Defaults to **checking**.'
          enum:
          - checking
          - savings
          type: string
        routingNumber:
          description: The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number),
            without separators or whitespace.
          maxLength: 9
          minLength: 9
          type: string
        type:
          default: usLocal
          description: '**usLocal**'
          enum:
          - usLocal
          type: string
      required:
      - type
      - accountNumber
      - routingNumber
      type: object
    UpdateNetworkTokenRequest:
      properties:
        status:
          description: 'The new status of the network token. Possible values: **active**,
            **suspended**, **closed**. The **closed** status is final and cannot be
            changed.'
          enum:
          - active
          - suspended
          - closed
          type: string
      type: object
    UpdatePaymentInstrument:
      properties:
        balanceAccountId:
          description: The unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/post/balanceAccounts__resParam_id)
            associated with the payment instrument.
          type: string
        bankAccount:
          description: Contains the business account details. Returned when you create
            a payment instrument with `type` **bankAccount**.
          oneOf:
          - $ref: '#/components/schemas/IbanAccountIdentification'
          - $ref: '#/components/schemas/USLocalAccountIdentification'
        card:
          description: Contains information about the card payment instrument. Returned
            when you create a payment instrument with `type` **card**.
          $ref: '#/components/schemas/Card'
        description:
          description: Your description for the payment instrument, maximum 300 characters.
          maxLength: 300
          type: string
        id:
          description: The unique identifier of the payment instrument.
          type: string
        issuingCountryCode:
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            country code where the payment instrument is issued. For example, **NL**
            or **US**.
          type: string
        paymentInstrumentGroupId:
          description: The unique identifier of the [payment instrument group](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/post/paymentInstrumentGroups__resParam_id)
            to which the payment instrument belongs.
          type: string
        reference:
          description: Your reference for the payment instrument, maximum 150 characters.
          maxLength: 150
          type: string
        status:
          description: "The status of the payment instrument. If a status is not specified\
            \ when creating a payment instrument, it is set to **active** by default.\
            \ However, there can be exceptions for cards based on the `card.formFactor`\
            \ and the `issuingCountryCode`. For example, when issuing physical cards\
            \ in the US, the default status is **inactive**.\n\nPossible values: \n\
            \n * **active**:  The payment instrument is active and can be used to\
            \ make payments. \n\n * **inactive**: The payment instrument is inactive\
            \ and cannot be used to make payments. \n\n * **suspended**: The payment\
            \ instrument is suspended, either because it was stolen or lost. \n\n\
            \ * **closed**: The payment instrument is permanently closed. This action\
            \ cannot be undone. \n\n"
          enum:
          - active
          - closed
          - inactive
          - suspended
          type: string
        statusComment:
          description: 'Comment for the status of the payment instrument.


            Required if `statusReason` is **other**.'
          type: string
        statusReason:
          x-addedInVersion: '2'
          description: 'The reason for the status of the payment instrument.


            Possible values: **accountClosure**, **damaged**, **endOfLife**, **expired**,
            **lost**, **stolen**, **suspectedFraud**, **transactionRule**, **other**.

            If the reason is **other**, you must also send the `statusComment` parameter
            describing the status change.'
          enum:
          - accountClosure
          - damaged
          - endOfLife
          - expired
          - lost
          - other
          - stolen
          - suspectedFraud
          - transactionRule
          type: string
        type:
          description: 'Type of payment instrument.


            Possible value: **card**, **bankAccount**. '
          enum:
          - bankAccount
          - card
          type: string
      required:
      - balanceAccountId
      - issuingCountryCode
      - type
      - id
      type: object
    UpdateSweepConfigurationV2:
      properties:
        category:
          x-addedInVersion: '2'
          description: "The type of transfer that results from the sweep.\n\nPossible\
            \ values:\n\n - **bank**: Sweep to a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id).\n\
            \n- **internal**: Transfer to another [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id)\
            \ within your platform.\n\nRequired when setting `priorities`."
          enum:
          - bank
          - internal
          - platformPayment
          type: string
        counterparty:
          description: 'The destination or the source of the funds, depending on the
            sweep `type`.


            Either a `balanceAccountId`, `transferInstrumentId`, or `merchantAccount`
            is required.'
          $ref: '#/components/schemas/SweepCounterparty'
        currency:
          description: 'The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes)
            in uppercase. For example, **EUR**.


            The sweep currency must match any of the [balances currencies](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balanceAccounts/{id}__resParam_balances).'
          type: string
        description:
          description: 'The message that will be used in the sweep transfer''s description
            body with a maximum length of 140 characters.


            If the message is longer after replacing placeholders, the message will
            be cut off at 140 characters.'
          type: string
        id:
          description: The unique identifier of the sweep.
          readOnly: true
          type: string
        priorities:
          x-addedInVersion: '2'
          description: 'The list of priorities for the bank transfer. This sets the
            speed at which the transfer is sent and the fees that you have to pay.
            You can provide multiple priorities. Adyen will try to pay out using the
            priority listed first, and if that''s not possible, it moves on to the
            next option in the order of provided priorities.


            Possible values:


            * **regular**: For normal, low-value transactions.


            * **fast**: Faster way to transfer funds but has higher fees. Recommended
            for high-priority, low-value transactions.


            * **wire**: Fastest way to transfer funds but has the highest fees. Recommended
            for high-priority, high-value transactions.


            * **instant**: Instant way to transfer funds in [SEPA countries](https://www.ecb.europa.eu/paym/integration/retail/sepa/html/index.en.html).


            * **crossBorder**: High-value transfer to a recipient in a different country.


            * **internal**: Transfer to an Adyen-issued business bank account (by
            bank account number/IBAN).


            Set `category` to **bank**. For more details, see [optional priorities
            setup](https://docs.adyen.com/marketplaces-and-platforms/payout-to-users/scheduled-payouts#optional-priorities-setup).'
          items:
            enum:
            - crossBorder
            - directDebit
            - fast
            - instant
            - internal
            - regular
            - wire
            type: string
          type: array
        reason:
          description: The reason for disabling the sweep.
          enum:
          - amountLimitExceeded
          - approved
          - counterpartyAccountBlocked
          - counterpartyAccountClosed
          - counterpartyAccountNotFound
          - counterpartyAddressRequired
          - counterpartyBankTimedOut
          - counterpartyBankUnavailable
          - error
          - notEnoughBalance
          - refusedByCounterpartyBank
          - routeNotFound
          - unknown
          readOnly: true
          type: string
        schedule:
          description: The schedule when the `triggerAmount` is evaluated. If the
            balance meets the threshold, funds are pushed out of or pulled in to the
            balance account.
          $ref: '#/components/schemas/SweepSchedule'
        status:
          description: "The status of the sweep. If not provided, by default, this\
            \ is set to **active**.\n\nPossible values: \n\n * **active**:  the sweep\
            \ is enabled and funds will be pulled in or pushed out based on the defined\
            \ configuration. \n\n * **inactive**: the sweep is disabled and cannot\
            \ be triggered. \n\n"
          enum:
          - active
          - inactive
          type: string
        sweepAmount:
          description: The amount that must be pushed out or pulled in. You can configure
            either `sweepAmount` or `targetAmount`, not both.
          $ref: '#/components/schemas/Amount'
        targetAmount:
          description: The amount that must be available in the balance account after
            the sweep. You can configure either `sweepAmount` or `targetAmount`, not
            both.
          $ref: '#/components/schemas/Amount'
        triggerAmount:
          description: 'The threshold amount that triggers the sweep. If not provided,
            by default, the amount is set to zero. The `triggerAmount` is evaluated
            according to the specified `schedule.type`.


            * For `type` **pull**, if the balance is less than or equal to the `triggerAmount`,
            funds are pulled in to the balance account.


            * For `type` **push**, if the balance is more than or equal to the `triggerAmount`,
            funds are pushed out of the balance account.'
          $ref: '#/components/schemas/Amount'
        type:
          default: push
          description: "The direction of sweep, whether pushing out or pulling in\
            \ funds to the balance account. If not provided, by default, this is set\
            \ to **push**.\n\nPossible values:\n\n * **push**: _push out funds_ to\
            \ a destination balance account or transfer instrument.\n\n * **pull**:\
            \ _pull in funds_ from a source merchant account, transfer instrument,\
            \ or balance account."
          enum:
          - pull
          - push
          type: string
      type: object
    VerificationDeadline:
      properties:
        capabilities:
          description: The names of the capabilities to be disallowed.
          items:
            enum:
            - acceptExternalFunding
            - acceptPspFunding
            - acceptTransactionInRestrictedCountries
            - acceptTransactionInRestrictedCountriesCommercial
            - acceptTransactionInRestrictedCountriesConsumer
            - acceptTransactionInRestrictedIndustries
            - acceptTransactionInRestrictedIndustriesCommercial
            - acceptTransactionInRestrictedIndustriesConsumer
            - acquiring
            - atmWithdrawal
            - atmWithdrawalCommercial
            - atmWithdrawalConsumer
            - atmWithdrawalInRestrictedCountries
            - atmWithdrawalInRestrictedCountriesCommercial
            - atmWithdrawalInRestrictedCountriesConsumer
            - authorisedPaymentInstrumentUser
            - getGrantOffers
            - issueBankAccount
            - issueCard
            - issueCardCommercial
            - issueCardConsumer
            - localAcceptance
            - payout
            - payoutToTransferInstrument
            - processing
            - receiveFromBalanceAccount
            - receiveFromPlatformPayments
            - receiveFromThirdParty
            - receiveFromTransferInstrument
            - receiveGrants
            - receivePayments
            - sendToBalanceAccount
            - sendToThirdParty
            - sendToTransferInstrument
            - thirdPartyFunding
            - useCard
            - useCardCommercial
            - useCardConsumer
            - useCardInRestrictedCountries
            - useCardInRestrictedCountriesCommercial
            - useCardInRestrictedCountriesConsumer
            - useCardInRestrictedIndustries
            - useCardInRestrictedIndustriesCommercial
            - useCardInRestrictedIndustriesConsumer
            - withdrawFromAtm
            - withdrawFromAtmCommercial
            - withdrawFromAtmConsumer
            - withdrawFromAtmInRestrictedCountries
            - withdrawFromAtmInRestrictedCountriesCommercial
            - withdrawFromAtmInRestrictedCountriesConsumer
            type: string
          readOnly: true
          type: array
        entityIds:
          description: The unique identifiers of the bank account(s) that the deadline
            applies to
          items:
            type: string
          readOnly: true
          type: array
        expiresAt:
          description: The date that verification is due by before capabilities are
            disallowed.
          format: date-time
          readOnly: true
          type: string
      required:
      - expiresAt
      - capabilities
      type: object
    VerificationError:
      properties:
        capabilities:
          description: Contains the capabilities that the verification error applies
            to.
          items:
            enum:
            - acceptExternalFunding
            - acceptPspFunding
            - acceptTransactionInRestrictedCountries
            - acceptTransactionInRestrictedCountriesCommercial
            - acceptTransactionInRestrictedCountriesConsumer
            - acceptTransactionInRestrictedIndustries
            - acceptTransactionInRestrictedIndustriesCommercial
            - acceptTransactionInRestrictedIndustriesConsumer
            - acquiring
            - atmWithdrawal
            - atmWithdrawalCommercial
            - atmWithdrawalConsumer
            - atmWithdrawalInRestrictedCountries
            - atmWithdrawalInRestrictedCountriesCommercial
            - atmWithdrawalInRestrictedCountriesConsumer
            - authorisedPaymentInstrumentUser
            - getGrantOffers
            - issueBankAccount
            - issueCard
            - issueCardCommercial
            - issueCardConsumer
            - localAcceptance
            - payout
            - payoutToTransferInstrument
            - processing
            - receiveFromBalanceAccount
            - receiveFromPlatformPayments
            - receiveFromThirdParty
            - receiveFromTransferInstrument
            - receiveGrants
            - receivePayments
            - sendToBalanceAccount
            - sendToThirdParty
            - sendToTransferInstrument
            - thirdPartyFunding
            - useCard
            - useCardCommercial
            - useCardConsumer
            - useCardInRestrictedCountries
            - useCardInRestrictedCountriesCommercial
            - useCardInRestrictedCountriesConsumer
            - useCardInRestrictedIndustries
            - useCardInRestrictedIndustriesCommercial
            - useCardInRestrictedIndustriesConsumer
            - withdrawFromAtm
            - withdrawFromAtmCommercial
            - withdrawFromAtmConsumer
            - withdrawFromAtmInRestrictedCountries
            - withdrawFromAtmInRestrictedCountriesCommercial
            - withdrawFromAtmInRestrictedCountriesConsumer
            type: string
          type: array
        code:
          description: The verification error code.
          type: string
        message:
          description: A description of the error.
          type: string
        remediatingActions:
          description: Contains the actions that you can take to resolve the verification
            error.
          items:
            $ref: '#/components/schemas/RemediatingAction'
          type: array
        subErrors:
          description: Contains more granular information about the verification error.
          items:
            $ref: '#/components/schemas/VerificationError-recursive'
          type: array
        type:
          description: "The type of error.\n\n Possible values: **invalidInput**,\
            \ **dataMissing**."
          enum:
          - dataMissing
          - invalidInput
          - pendingStatus
          type: string
      type: object
    VerificationError-recursive:
      properties:
        capabilities:
          description: Contains the capabilities that the verification error applies
            to.
          items:
            enum:
            - acceptExternalFunding
            - acceptPspFunding
            - acceptTransactionInRestrictedCountries
            - acceptTransactionInRestrictedCountriesCommercial
            - acceptTransactionInRestrictedCountriesConsumer
            - acceptTransactionInRestrictedIndustries
            - acceptTransactionInRestrictedIndustriesCommercial
            - acceptTransactionInRestrictedIndustriesConsumer
            - acquiring
            - atmWithdrawal
            - atmWithdrawalCommercial
            - atmWithdrawalConsumer
            - atmWithdrawalInRestrictedCountries
            - atmWithdrawalInRestrictedCountriesCommercial
            - atmWithdrawalInRestrictedCountriesConsumer
            - authorisedPaymentInstrumentUser
            - getGrantOffers
            - issueBankAccount
            - issueCard
            - issueCardCommercial
            - issueCardConsumer
            - localAcceptance
            - payout
            - payoutToTransferInstrument
            - processing
            - receiveFromBalanceAccount
            - receiveFromPlatformPayments
            - receiveFromThirdParty
            - receiveFromTransferInstrument
            - receiveGrants
            - receivePayments
            - sendToBalanceAccount
            - sendToThirdParty
            - sendToTransferInstrument
            - thirdPartyFunding
            - useCard
            - useCardCommercial
            - useCardConsumer
            - useCardInRestrictedCountries
            - useCardInRestrictedCountriesCommercial
            - useCardInRestrictedCountriesConsumer
            - useCardInRestrictedIndustries
            - useCardInRestrictedIndustriesCommercial
            - useCardInRestrictedIndustriesConsumer
            - withdrawFromAtm
            - withdrawFromAtmCommercial
            - withdrawFromAtmConsumer
            - withdrawFromAtmInRestrictedCountries
            - withdrawFromAtmInRestrictedCountriesCommercial
            - withdrawFromAtmInRestrictedCountriesConsumer
            type: string
          type: array
        code:
          description: The verification error code.
          type: string
        message:
          description: A description of the error.
          type: string
        type:
          description: "The type of error.\n\n Possible values: **invalidInput**,\
            \ **dataMissing**."
          enum:
          - dataMissing
          - invalidInput
          - pendingStatus
          type: string
        remediatingActions:
          description: Contains the actions that you can take to resolve the verification
            error.
          items:
            $ref: '#/components/schemas/RemediatingAction'
          type: array
      required: []
      type: object
    void:
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
    BasicAuth:
      scheme: basic
      type: http
  examples:
    delete-transactionRules-transactionRuleId-success-200:
      summary: Transaction rule deleted
      description: Example response for successfully deleting a transaction rule
      value:
        aggregationLevel: paymentInstrument
        description: Up to 1000 EUR per card for the last 12 hours
        entityKey:
          entityReference: PG3227C223222C5GXR3M5592Q
          entityType: paymentInstrumentGroup
        interval:
          duration:
            unit: hours
            value: 12
          timeZone: UTC
          type: sliding
        outcomeType: hardBlock
        reference: myRule12345
        requestType: authorization
        ruleRestrictions:
          totalAmount:
            operation: greaterThan
            value:
              currency: EUR
              value: 100000
        type: velocity
        id: TR3227C223222C5GXT3DD5VCF
    generic-400:
      summary: Response code - 400 Bad request
      value:
        type: https://docs.adyen.com/errors/general/bad-request
        title: Bad request
        status: 400
        detail: Empty input which would have resulted in a null result.
        errorCode: '00_400'
    generic-401:
      summary: Response code - 401 Unauthorized
      value:
        type: https://docs.adyen.com/errors/security/unauthorized
        title: Unauthorized
        status: 401
        detail: Not authorized to access this service.
        errorCode: '00_401'
    generic-403:
      summary: Response code - 403 Forbidden.
      value:
        type: https://docs.adyen.com/errors/security/unauthorized
        title: Forbidden
        status: 403
        detail: Not the right permission to access this service.
        errorCode: '00_403'
    generic-404:
      summary: Response code 404 - Not found
      value:
        type: https://docs.adyen.com/errors/general/not-found
        title: Not found
        status: 404
        detail: Service not found.
        errorCode: '00_404'
    generic-422:
      summary: Response code - 422 Unprocessable Entity.
      value:
        type: https://docs.adyen.com/errors/general/invalid-field-value
        title: Invalid Payment Instrument information provided
        status: 422
        detail: The balanceAccountId can only be changed when the status is Inactive
          or Requested
        requestId: 1W1UI15PLVGC9V8O
        errorCode: '30_031'
    generic-500:
      summary: Response code - 500 Internal Server Error
      value:
        type: https://docs.adyen.com/errors/general/internal
        title: An internal error happened
        status: 500
        detail: Unrecoverable error while trying to create payment instrument
        requestId: 1WAF555PLWNTLYOQ
        errorCode: '00_500'
    generic-503:
      summary: Response code - 503 Internal Server Error
      value:
        type: https://docs.adyen.com/errors/general/processing-error
        title: Error processing request
        status: 500
        detail: Error while determining the payment instrument workflow
        requestId: 1W1UHY5O2CONU4R7
        errorCode: '99_500'
    get-accountHolders-id-balanceAccounts-success-200:
      summary: List of balance accounts retrieved
      description: Example response when retrieving a list of balance accounts under
        an account holder
      value:
        balanceAccounts:
        - accountHolderId: AH32272223222B5CTBMZT6W2V
          defaultCurrencyCode: EUR
          description: S. Hopper - Main Account
          reference: YOUR_REFERENCE-X173L
          timeZone: Europe/Amsterdam
          id: BA32272223222B5CTDNB66W2Z
          status: active
        - accountHolderId: AH32272223222B5CTBMZT6W2V
          defaultCurrencyCode: EUR
          description: S. Hopper - Main Account
          reference: YOUR_REFERENCE-X173L
          timeZone: Europe/Amsterdam
          id: BA32272223222B5CTDQPM6W2H
          status: active
        - accountHolderId: AH32272223222B5CTBMZT6W2V
          defaultCurrencyCode: EUR
          description: S. Hopper - Main Account
          reference: YOUR_REFERENCE-X173L
          timeZone: Europe/Amsterdam
          id: BA32272223222B5CVF5J63LMW
          status: active
        hasNext: true
        hasPrevious: false
    get-accountHolders-id-success-200:
      summary: Account holder retrieved
      description: Example response when retrieving an account holder
      value:
        balancePlatform: YOUR_BALANCE_PLATFORM
        description: Liable account holder used for international payments and payouts
        legalEntityId: LE322JV223222D5GG42KN6869
        reference: S.Eller-001
        capabilities:
          receiveFromPlatformPayments:
            enabled: true
            requested: true
            allowed: false
            verificationStatus: pending
          receiveFromBalanceAccount:
            enabled: true
            requested: true
            allowed: false
            verificationStatus: pending
          sendToBalanceAccount:
            enabled: true
            requested: true
            allowed: false
            verificationStatus: pending
          sendToTransferInstrument:
            enabled: true
            requested: true
            allowed: false
            verificationStatus: pending
        id: AH3227C223222C5GXQXF658WB
        status: active
    get-balanceAccounts-balanceAccountId-sweeps-success-200:
      summary: Sweeps under a balance account retrieved
      description: Example response when retrieving sweeps under a balance account
      value:
        hasNext: false
        hasPrevious: false
        sweeps:
        - id: SWPC4227C224555B5FTD2NT2JV4WN5
          schedule:
            type: daily
          status: active
          targetAmount:
            currency: EUR
            value: 0
          triggerAmount:
            currency: EUR
            value: 0
          type: push
          counterparty:
            balanceAccountId: BA32272223222B5FTD2KR6TJD
          currency: EUR
    get-balanceAccounts-balanceAccountId-sweeps-sweepId-success-200:
      summary: Sweep retrieved
      description: Example response when retrieving a sweep
      value:
        id: SWPC4227C224555B5FTD2NT2JV4WN5
        schedule:
          type: daily
        status: active
        targetAmount:
          currency: EUR
          value: 0
        triggerAmount:
          currency: EUR
          value: 0
        type: push
        counterparty:
          balanceAccountId: BA32272223222B5FTD2KR6TJD
        currency: EUR
    get-balanceAccounts-id-paymentInstruments-success-200:
      summary: List of payment instruments retrieved
      description: Example response when retrieving a list of payment instruments
        under a balance account
      value:
        hasNext: true
        hasPrevious: false
        paymentInstruments:
        - balanceAccountId: BA32272223222B59CZ3T52DKZ
          issuingCountryCode: GB
          status: active
          type: card
          card:
            brand: mc
            brandVariant: mc
            cardholderName: name
            formFactor: virtual
            bin: '555544'
            expiration:
              month: '12'
              year: '2022'
            lastFour: '2357'
            number: '************2357'
          id: PI32272223222B59M5TM658DT
        - balanceAccountId: BA32272223222B59CZ3T52DKZ
          issuingCountryCode: GB
          status: active
          type: card
          card:
            brand: mc
            brandVariant: mc
            cardholderName: name
            formFactor: virtual
            bin: '555544'
            expiration:
              month: '01'
              year: '2023'
            lastFour: '8331'
            number: '************8331'
          id: PI32272223222B59PXDGQDLSF
    get-balanceAccounts-id-success-200:
      summary: Balance account details retrieved
      description: Example response for retrieving a balance account
      value:
        accountHolderId: AH32272223222B59K6RTQBFNZ
        defaultCurrencyCode: EUR
        timeZone: Europe/Amsterdam
        balances:
        - available: 0
          balance: 0
          currency: EUR
          reserved: 0
          pending: 0
        id: BA3227C223222B5BLP6JQC3FD
        status: active
    get-balancePlatforms-id-accountHolders-success-200:
      summary: List of account holders retrieved
      description: Example response when retrieving a list of account holders under
        a balance platform
      value:
        accountHolders:
        - description: Test-305
          legalEntityId: LE3227C223222D5D8S5S33M4M
          reference: LegalEntity internal error test
          id: AH32272223222B5GFSNSXFFL9
          status: active
        - description: Test-751
          legalEntityId: LE3227C223222D5D8S5TT3SRX
          reference: LegalEntity internal error test
          id: AH32272223222B5GFSNVGFFM7
          status: active
        - description: Explorer Holder
          legalEntityId: LE3227C223222D5D8S5TT3SRX
          reference: Account from the Explorer Holder
          id: AH32272223222B5GFWNRFFVR6
          status: active
        hasNext: true
        hasPrevious: true
    get-balancePlatforms-id-success-200:
      summary: Balance platform retrieved
      description: Example response when retrieving a balance platform
      value:
        id: YOUR_BALANCE_PLATFORM
        status: Active
    get-paymentInstrumentGroups-id-success-200:
      summary: Payment instrument group retrieved
      description: Example response when retrieving a payment instrument group
      value:
        balancePlatform: YOUR_BALANCE_PLATFORM
        txVariant: mc
        id: PG3227C223222B5CMD3FJFKGZ
    get-paymentInstrumentGroups-id-transactionRules-success-200:
      summary: Transaction rules for a payment instrument group retrieved
      description: Example response when retrieving a list of transaction rules applied
        to a payment instrument group
      value:
        transactionRules:
        - aggregationLevel: paymentInstrument
          description: Up to 1000 EUR per card for the last 12 hours
          entityKey:
            entityReference: PG3227C223222C5GXR3M5592Q
            entityType: paymentInstrumentGroup
          interval:
            duration:
              unit: hours
              value: 12
            timeZone: UTC
            type: sliding
          outcomeType: hardBlock
          reference: YOUR_REFERENCE_2918A
          requestType: authorization
          ruleRestrictions:
            totalAmount:
              operation: greaterThan
              value:
                currency: EUR
                value: 100000
          status: inactive
          type: velocity
          id: TR3227C223222C5GXR3XP596N
        - aggregationLevel: paymentInstrument
          description: NL only
          entityKey:
            entityReference: PG3227C223222C5GXR3M5592Q
            entityType: paymentInstrumentGroup
          interval:
            duration:
              unit: hours
              value: 12
            timeZone: UTC
            type: sliding
          outcomeType: hardBlock
          reference: myRule12345
          requestType: authorization
          ruleRestrictions:
            totalAmount:
              operation: greaterThan
              value:
                currency: EUR
                value: 100000
          status: inactive
          type: velocity
          id: TR3227C223222C5GXR3WC595H
    get-paymentInstruments-id-reveal-success-200:
      summary: Get the card's primary account number (PAN)
      description: Example response for getting the card PAN
      value:
        cvc: '123'
        expiration:
          month: '02'
          year: '2026'
        pan: '5555444411209883'
    get-paymentInstruments-id-success-200:
      summary: Payment instruments retrieved
      description: Example response for retrieving payment instruments associated
        with a balance account
      value:
        balanceAccountId: BA32272223222B59CZ3T52DKZ
        description: S. Hopper - Main card
        issuingCountryCode: GB
        status: active
        type: card
        card:
          brand: mc
          brandVariant: mcdebit
          cardholderName: Simon Hopper
          formFactor: virtual
          bin: '555544'
          expiration:
            month: '01'
            year: '2024'
          lastFour: '3548'
          number: '************3548'
        id: PI32272223222B5CMD3MQ3HXX
    get-paymentInstruments-id-transactionRules-success-200:
      summary: Transaction rules for a payment instrument retrieved
      description: Example response when retrieving a list of transaction rules applied
        to a payment instrument
      value:
        transactionRules:
        - description: Only allow point-of-sale transactions
          entityKey:
            entityReference: PI3227C223222B5FN65FN5NS9
            entityType: paymentInstrument
          interval:
            timeZone: UTC
            type: perTransaction
          outcomeType: hardBlock
          reference: YOUR_REFERENCE_4F7346
          requestType: authorization
          ruleRestrictions:
            processingTypes:
              operation: noneMatch
              value:
              - pos
          startDate: '2022-08-02T16:07:00.851374+02:00'
          status: active
          type: blockList
          id: TR32272223222B5GFSGFLFCHM
        - description: Set the maximum number of active network tokens to one for
            this card
          entityKey:
            entityReference: PI3227C223222B5FN65FN5NS9
            entityType: paymentInstrument
          interval:
            timeZone: UTC
            type: perTransaction
          outcomeType: hardBlock
          reference: myRule123
          requestType: authorization
          ruleRestrictions:
            activeNetworkTokens:
              operation: greaterThanOrEqualTo
              value: 1
          startDate: '2022-10-03T14:48:28.999314+02:00'
          status: active
          type: blockList
          id: TR32272223222C5GQJ93L7J8Z
    get-transactionRules-transactionRuleId-success-200:
      summary: Transaction rules retrieved
      description: Example response when retrieving a transaction rule
      value:
        transactionRule:
          description: Only allow point-of-sale transactions
          entityKey:
            entityReference: PI3227C223222B5FN65FN5NS9
            entityType: paymentInstrument
          interval:
            timeZone: UTC
            type: perTransaction
          outcomeType: hardBlock
          reference: YOUR_REFERENCE_4F7346
          requestType: authorization
          ruleRestrictions:
            processingTypes:
              operation: noneMatch
              value:
              - pos
          startDate: '2022-08-02T16:07:00.851374+02:00'
          status: active
          type: blockList
          id: TR32272223222B5GFSGFLFCHM
    patch-accountHolders-id-requestAccountHolderCapability:
      summary: Request account holder capability
      description: Example request for the `receivePayments` capability for an account
        holder
      value:
        description: Liable account holder used for international payments and payouts
        reference: S.Eller-001
        capabilities:
          receivePayments:
            requested: true
    patch-accountHolders-id-requestAccountHolderCapability-200:
      summary: Account holder capability requested
      description: Example response for requesting the `receivePayments` capability
        for an account holder
      value:
        balancePlatform: YOUR_BALANCE_PLATFORM
        description: Liable account holder used for international payments and payouts
        legalEntityId: LE322JV223222F5GKQZZ9DS99
        reference: S.Eller-001
        capabilities:
          receivePayments:
            enabled: false
            requested: true
            allowed: false
            verificationStatus: pending
        id: AH3227C223222C5GKR23686TF
        status: active
    patch-accountHolders-id-updateAccountHolderStatus:
      summary: Deactivate an account holder
      description: Example request for permanently deactivating an account holder
      value:
        status: closed
    patch-accountHolders-id-updateAccountHolderStatus-200:
      summary: Account holder deactivated
      description: Example response for permanently deactivating an account holder
      value:
        balancePlatform: YOUR_BALANCE_PLATFORM
        description: Liable account holder used for international payments and payouts
        legalEntityId: LE322JV223222F5GKQZZ9DS99
        reference: S.Eller-001
        id: AH3227C223222C5GKR23686TF
        status: closed
    patch-balanceAccounts-balanceAccountId-sweeps-sweepId-updateSweep-status:
      summary: Update the status of a sweep
      description: Example request for updating a sweep
      value:
        status: inactive
    patch-balanceAccounts-balanceAccountId-sweeps-sweepId-updateSweep-status-200:
      summary: Sweep status updated
      description: Example response for updating a sweep
      value:
        id: SWPC4227C224555B5FTD2NT2JV4WN5
        counterparty:
          merchantAccount: YOUR_MERCHANT_ACCOUNT
        triggerAmount:
          currency: EUR
          value: 50000
        currency: EUR
        schedule:
          type: balance
        type: pull
        status: inactive
    patch-balanceAccounts-id-updateBalanceAccount:
      summary: Update the time zone of a balance account
      description: Example request for updating a balance account
      value:
        timeZone: Europe/Amsterdam
    patch-balanceAccounts-id-updateBalanceAccount-200:
      summary: Time zone of a balance account updated
      description: Example response for updating a balance account
      value:
        accountHolderId: AH32272223222B5GFSNVGFFM7
        defaultCurrencyCode: EUR
        timeZone: Europe/Amsterdam
        balances:
        - available: 0
          balance: 0
          currency: EUR
          reserved: 0
        id: BA32272223222B59K6ZXHBFN6
        status: active
    patch-paymentInstruments-id-updatePaymentInstrumentBalanceAccount:
      summary: Update the balance account linked to a payment instrument
      description: Example request for updating the balance account of a payment instrument
      value:
        balanceAccountId: BA32272223222B5CM82WL892M
    patch-paymentInstruments-id-updatePaymentInstrumentBalanceAccount-200:
      summary: Balance account updated
      description: Example response for updating the balance account linked to a payment
        instrument
      value:
        balanceAccountId: BA32272223222B5CM82WL892M
        description: S. Hopper - Main card
        issuingCountryCode: GB
        status: inactive
        type: card
        card:
          brand: mc
          brandVariant: mcdebit
          cardholderName: Simon Hopper
          formFactor: virtual
          bin: '555544'
          expiration:
            month: '01'
            year: '2024'
          lastFour: '5785'
          number: '************5785'
        id: PI3227C223222B5CMD278FKGS
    patch-paymentInstruments-id-updatePaymentInstrumentStatus:
      summary: Update the status of a payment instrument
      description: Example request for updating the status of a payment instrument
      value:
        status: suspended
    patch-paymentInstruments-id-updatePaymentInstrumentStatus-200:
      summary: Payment instrument status updated
      description: Example response for updating the status of a payment instrument
      value:
        balanceAccountId: BA32272223222B59CZ3T52DKZ
        description: S. Hopper - Main card
        issuingCountryCode: GB
        status: suspended
        type: card
        card:
          brand: mc
          brandVariant: mcdebit
          cardholderName: Simon Hopper
          formFactor: virtual
          bin: '555544'
          expiration:
            month: '01'
            year: '2024'
          lastFour: '5785'
          number: '************5785'
        id: PI3227C223222B5CMD278FKGS
    patch-transactionRules-transactionRuleId-updateTransactionRuleStatus:
      summary: Update the interval of transaction rule
      description: Example request for updating the interval of a transaction rule
      value:
        description: Allow only point-of-sale transactions
        reference: YOUR_REFERENCE_4F7346
        entityKey:
          entityType: paymentInstrument
          entityReference: PI3227C223222B5FG88SB8BHR
        status: inactive
        interval:
          type: weekly
        ruleRestrictions:
          processingTypes:
            operation: noneMatch
            value:
            - pos
        type: blockList
    patch-transactionRules-transactionRuleId-updateTransactionRuleStatus-200:
      summary: Transaction rule status updated
      description: Example response for successfully updating the status of a transaction
        rule
      value:
        aggregationLevel: paymentInstrument
        description: Up to 1000 EUR per card for the last 12 hours
        entityKey:
          entityReference: PG3227C223222C5GXR3M5592Q
          entityType: paymentInstrumentGroup
        interval:
          duration:
            unit: hours
            value: 12
          timeZone: UTC
          type: sliding
        outcomeType: hardBlock
        reference: YOUR_REFERENCE_2918A
        requestType: authorization
        ruleRestrictions:
          totalAmount:
            operation: greaterThan
            value:
              currency: EUR
              value: 100000
        startDate: '2022-11-17T00:07:09.10057663+01:00'
        status: inactive
        type: velocity
        id: TR3227C223222C5GXR3XP596N
    post-accountHolders-createAccountHolder:
      summary: Create an account holder
      description: Example request for creating an account holder
      value:
        description: Liable account holder used for international payments and payouts
        reference: S.Eller-001
        legalEntityId: LE322JV223222D5GG42KN6869
    post-accountHolders-createAccountHolder-200:
      summary: Response for creating an account holder
      description: Example response for creating an account holder
      value:
        balancePlatform: YOUR_BALANCE_PLATFORM
        description: Liable account holder used for international payments and payouts
        legalEntityId: LE322JV223222D5GG42KN6869
        reference: S.Eller-001
        capabilities:
          receiveFromPlatformPayments:
            enabled: true
            requested: true
            allowed: false
            verificationStatus: pending
          receiveFromBalanceAccount:
            enabled: true
            requested: true
            allowed: false
            verificationStatus: pending
          sendToBalanceAccount:
            enabled: true
            requested: true
            allowed: false
            verificationStatus: pending
          sendToTransferInstrument:
            enabled: true
            requested: true
            allowed: false
            requestedSettings:
              interval: daily
              maxAmount:
                currency: EUR
                value: 0
            verificationStatus: pending
        id: AH3227C223222H5J4DCLW9VBV
        status: active
    post-balanceAccounts-balanceAccountId-sweeps-createSweep-pull:
      summary: Create a sweep to pull funds in to a balance account
      description: Example request for creating a pull sweep
      value:
        counterparty:
          merchantAccount: YOUR_MERCHANT_ACCOUNT
        triggerAmount:
          currency: EUR
          value: 50000
        currency: EUR
        schedule:
          type: balance
        type: pull
        status: active
    post-balanceAccounts-balanceAccountId-sweeps-createSweep-pull-200:
      summary: Sweep of pull type created
      description: Example response for creating a pull sweep
      value:
        id: SWPC4227C224555B5FTD2NT2JV4WN5
        counterparty:
          merchantAccount: YOUR_MERCHANT_ACCOUNT
        triggerAmount:
          currency: EUR
          value: 50000
        currency: EUR
        schedule:
          type: balance
        type: pull
        status: active
    post-balanceAccounts-balanceAccountId-sweeps-createSweep-push:
      summary: Create a sweep to push funds out of a balance account
      description: Example request for creating a push sweep
      value:
        counterparty:
          balanceAccountId: BA32278887611B5FTD2KR6TJD
        triggerAmount:
          currency: EUR
          value: 50000
        currency: EUR
        schedule:
          type: weekly
        type: push
        status: active
    post-balanceAccounts-balanceAccountId-sweeps-createSweep-push-200:
      summary: Sweep of push type created
      description: Example response for creating a push sweep
      value:
        id: SWPC4227C224555B5FTD2NT2JV4WN5
        counterparty:
          balanceAccountId: BA32278887611B5FTD2KR6TJD
        triggerAmount:
          currency: EUR
          value: 50000
        currency: EUR
        schedule:
          type: weekly
        type: push
        status: active
    post-balanceAccounts-balanceAccountId-sweeps-createSweep-push-priorities:
      summary: Create a sweep to push funds out of a balance account with set priorities
      description: Example request for creating a push sweep with priorities
      value:
        counterparty:
          transferInstrumentId: SE322JV223222J5HGLCGF2WDV
        triggerAmount:
          currency: EUR
          value: 50000
        currency: EUR
        priorities:
        - fast
        - instant
        category: bank
        schedule:
          type: weekly
        type: push
        status: active
    post-balanceAccounts-balanceAccountId-sweeps-createSweep-push-priorities-200:
      summary: Sweep of push type with priorities created
      description: Example response for creating a push sweep with priorities
      value:
        id: SWPC4227C224555B5FTD2NT2JV4WN9
        counterparty:
          transferInstrumentId: SE322JV223222J5HGLCGF2WDV
        triggerAmount:
          currency: EUR
          value: 50000
        currency: EUR
        priorities:
        - fast
        - instant
        category: bank
        schedule:
          type: weekly
        type: push
        status: active
    post-balanceAccounts-createBalanceAccount:
      summary: Create a balance account
      description: Example request for creating a balance account
      value:
        accountHolderId: AH32272223222C5GXTD343TKP
        description: S.Hopper - Main balance account
    post-balanceAccounts-createBalanceAccount-200:
      summary: Create a balance account
      description: Example request for creating a balance account
      value:
        accountHolderId: AH32272223222C5GXTD343TKP
        defaultCurrencyCode: EUR
        description: S.Hopper - Main balance account
        timeZone: Europe/Amsterdam
        balances:
        - available: 0
          balance: 0
          currency: EUR
          reserved: 0
        id: BA3227C223222H5J4DCGQ9V9L
        status: active
    post-paymentInstrumentGroups-createPaymentInstrumentGroups:
      summary: Create a payment instrument group
      description: Example request for creating a payment instrument group
      value:
        balancePlatform: YOUR_BALANCE_PLATFORM
        txVariant: mc
    post-paymentInstrumentGroups-createPaymentInstrumentGroups-200:
      summary: Create a payment instrument group
      description: Example request for creating a payment instrument group
      value:
        balancePlatform: YOUR_BALANCE_PLATFORM
        txVariant: mc
        id: PG32272223222H5J4DCRVC9DH
    post-paymentInstruments-createBusinessAccountNL:
      summary: Create a business account in NL
      description: Example request for creating a business account in NL
      value:
        type: bankAccount
        description: YOUR_DESCRIPTION
        balanceAccountId: BA3227C223222B5CTBLR8BWJB
        issuingCountryCode: NL
    post-paymentInstruments-createBusinessAccountNL-200:
      summary: Business account in NL created
      description: Example response for creating a business account in NL
      value:
        balanceAccountId: BA3227C223222B5CTBLR8BWJB
        issuingCountryCode: NL
        status: active
        type: bankAccount
        description: YOUR_DESCRIPTION
        bankAccount:
          type: iban
          iban: NL20ADYB2017000035
        id: PI322LJ223222B5DJS7CD9LWL
    post-paymentInstruments-createBusinessAccountUS:
      summary: Create a business account in the US
      description: Example request for creating a business account in the US
      value:
        type: bankAccount
        description: YOUR_DESCRIPTION
        balanceAccountId: BA3227C223222B5CTBLR8BWJB
        issuingCountryCode: US
    post-paymentInstruments-createBusinessAccountUS-200:
      summary: Business account in the US created
      description: Example response for creating a business account in the US
      value:
        balanceAccountId: BA3227C223222B5CTBLR8BWJB
        issuingCountryCode: US
        status: active
        type: bankAccount
        description: YOUR_DESCRIPTION
        bankAccount:
          type: usLocal
          accountNumber: '333720756'
          routingNumber: '210000210'
          accountType: checking
        id: PI322LJ223222B5DJS7CD9LWL
    post-paymentInstruments-createPhysicalCard:
      summary: Create a physical card
      description: Example request for creating a physical card
      value:
        type: card
        issuingCountryCode: NL
        balanceAccountId: BA32272223222B59CZ3T52DKZ
        description: S.Hopper - Main card
        status: inactive
        card:
          formFactor: physical
          brand: mc
          brandVariant: mcdebit
          cardholderName: Sam Hopper
          deliveryContact:
            address:
              city: Amsterdam
              country: NL
              stateOrProvince: NH
              line1: Brannan Street
              line2: '274'
              postalCode: 1020CD
            name:
              firstName: Sam
              lastName: Hopper
          configuration:
            configurationProfileId: CP123AB45678C91ABCD2ABCDE
    post-paymentInstruments-createPhysicalCard-200:
      summary: Physical card created
      description: Example response for creating a physical card
      value:
        balanceAccountId: BA32272223222B59CZ3T52DKZ
        description: S. Hopper - Main card
        issuingCountryCode: NL
        status: inactive
        type: card
        card:
          brand: mc
          brandVariant: mcdebit
          cardholderName: Sam Hopper
          formFactor: physical
          number: '************5785'
          bin: '555544'
          expiration:
            month: 08
            year: '2024'
          lastFour: '2765'
          authentication:
            password: '******'
            phone:
              number: '+123456789'
              type: mobile
          deliveryContact:
            address:
              city: Amsterdam
              country: NL
              stateOrProvince: NH
              line1: Brannan Street
              line2: '274'
              postalCode: 1020CD
            name:
              firstName: Sam
              lastName: Hopper
          configuration:
            configurationProfileId: CP123AB45678C91ABCD2ABCDE
        id: PI3227C223222B5BPCMFXD2XG
    post-paymentInstruments-createVirtualCard:
      summary: Create a virtual card
      description: Example request for creating a virtual card
      value:
        type: card
        description: My test card
        balanceAccountId: BA3227C223222B5FG88S28BGN
        issuingCountryCode: NL
        card:
          cardholderName: Simon Hopper
          brand: mc
          brandVariant: mcdebit
          formFactor: virtual
    post-paymentInstruments-createVirtualCard-200:
      summary: Virtual card created
      description: Example response for creating a virtual card
      value:
        balanceAccountId: BA3227C223222B5FG88S28BGN
        description: My test card
        issuingCountryCode: NL
        status: active
        type: card
        card:
          brand: mc
          brandVariant: mcdebit
          cardholderName: Simon Hopper
          formFactor: virtual
          bin: '555544'
          cvc: '136'
          expiration:
            month: '11'
            year: '2025'
          lastFour: '3703'
          number: '5555444411213703'
        id: PI32272223222C5GXTDWH3TTN
    post-transactionRules-createTransactionRuleAllowPos:
      summary: Allow only point-of-sale transactions
      description: Example request to allow only point-of-sale transactions
      value:
        description: Allow only point-of-sale transactions
        reference: YOUR_REFERENCE_4F7346
        entityKey:
          entityType: paymentInstrument
          entityReference: PI3227C223222B5FG88SB8BHR
        status: active
        interval:
          type: perTransaction
        ruleRestrictions:
          processingTypes:
            operation: noneMatch
            value:
            - pos
        type: blockList
    post-transactionRules-createTransactionRuleAllowPos-200:
      summary: Transaction rule to allow only point-of-sale transactions
      description: Example response for allowing only point-of-sale transactions
      value:
        description: Allow only point-of-sale transactions
        entityKey:
          entityReference: PI3227C223222B5FG88SB8BHR
          entityType: paymentInstrument
        interval:
          timeZone: UTC
          type: perTransaction
        outcomeType: hardBlock
        reference: YOUR_REFERENCE_4F7346
        requestType: authorization
        ruleRestrictions:
          processingTypes:
            operation: noneMatch
            value:
            - pos
        startDate: '2023-06-29T22:34:36.173226192+02:00'
        status: active
        type: blockList
        id: TR3227C223222H5J4D9ML9V4D
    post-transactionRules-createTransactionRuleIncreaseScore:
      summary: Increase the score of a card
      description: Example request to increase the score of a card
      value:
        description: Assign score if more than 500 EUR in 2 hours
        entityKey:
          entityType: paymentInstrument
          entityReference: PI3227C223222B5FG88SB8BHR
        interval:
          type: sliding
          duration:
            value: 2
            unit: hours
        outcomeType: scoreBased
        reference: myRule11789
        ruleRestrictions:
          totalAmount:
            operation: greaterThan
            value:
              currency: EUR
              value: 50000
        score: 20
        type: velocity
    post-transactionRules-createTransactionRuleIncreaseScore-200:
      summary: Transaction rule for increasing the score of a card
      description: Example response to increase the score of a card
      value:
        description: Assign score if more than 500 EUR in 2 hours
        entityKey:
          entityReference: PI3227C223222B5FG88SB8BHR
          entityType: paymentInstrument
        interval:
          duration:
            unit: hours
            value: 2
          timeZone: UTC
          type: sliding
        outcomeType: scoreBased
        reference: myRule11789
        requestType: authorization
        ruleRestrictions:
          totalAmount:
            operation: greaterThan
            value:
              currency: EUR
              value: 50000
        score: 20
        status: inactive
        type: velocity
        id: TR3227C223222H5J4D9S39V59
    post-transactionRules-createTransactionRuleLimitSliding:
      summary: Limit total amount in the last 12 hours
      description: Example request to limit the total amount in a sliding interval
      value:
        description: Up to 1000 EUR per card for the last 12 hours
        reference: YOUR_REFERENCE_2918A
        status: active
        entityKey:
          entityReference: BA3227C223222B5FN65355NR3
          entityType: balanceAccount
        aggregationLevel: paymentInstrument
        interval:
          type: sliding
          duration:
            value: 12
            unit: hours
        outcomeType: hardBlock
        ruleRestrictions:
          totalAmount:
            operation: greaterThan
            value:
              value: 100000
              currency: EUR
        type: velocity
    post-transactionRules-createTransactionRuleLimitSliding-200:
      summary: Transaction rule for limiting total amount in the last 12 hours
      description: Example response to limit the total amount in a sliding interval
      value:
        aggregationLevel: paymentInstrument
        description: Up to 1000 EUR per card for the last 12 hours
        entityKey:
          entityReference: BA3227C223222B5FN65355NR3
          entityType: balanceAccount
        interval:
          duration:
            unit: hours
            value: 12
          timeZone: UTC
          type: sliding
        outcomeType: hardBlock
        reference: YOUR_REFERENCE_2918A
        requestType: authorization
        ruleRestrictions:
          totalAmount:
            operation: greaterThan
            value:
              currency: EUR
              value: 100000
        startDate: '2023-06-29T22:39:06.887628679+02:00'
        status: active
        type: velocity
        id: TR32272223222H5J4D9Z8C97H
    post-transactionRules-createTransactionRuleLimitTransaction:
      summary: Limit international payments
      description: Example request to limit total amount of international transations
      value:
        description: Up to 50 EUR international transactions
        reference: YOUR_REFERENCE_B2634
        status: active
        entityKey:
          entityType: balanceAccount
          entityReference: BA3227C223222B5FN65355NR3
        interval:
          type: daily
        outcomeType: hardBlock
        ruleRestrictions:
          totalAmount:
            operation: greaterThan
            value:
              currency: EUR
              value: 5000
          internationalTransaction:
            operation: equals
            value: true
        type: velocity
    post-transactionRules-createTransactionRuleLimitTransaction-200:
      summary: Transaction rule for limiting international payments
      description: Example response to limit total amount of international transations
      value:
        description: Up to 50 EUR international transactions
        entityKey:
          entityReference: BA3227C223222B5FN65355NR3
          entityType: balanceAccount
        interval:
          timeOfDay: 00:00:00
          timeZone: UTC
          type: daily
        outcomeType: hardBlock
        reference: YOUR_REFERENCE_B2634
        requestType: authorization
        ruleRestrictions:
          internationalTransaction:
            operation: equals
            value: true
          totalAmount:
            operation: greaterThan
            value:
              currency: EUR
              value: 5000
        startDate: '2023-06-29T22:39:54.068487152+02:00'
        status: active
        type: velocity
        id: TR3227C223222H5J4DB2X9V65
    post-transferRoutes-calculate-transferRoutesCalculate:
      summary: Calculate transfer routes
      description: Example request for calculating transfer routes
      value:
        balancePlatform: YOUR_BALANCE_PLATFORM
        currency: USD
        category: bank
        counterparty:
          bankAccount:
            accountIdentification:
              type: iban
              iban: NL91ABNA0417164300
    post-transferRoutes-calculate-transferRoutesCalculate-200:
      summary: Response for calculating transfer routes
      description: Example response for calculating transfer routes
      value:
        transferRoutes:
        - country: NL
          currency: USD
          priority: crossBorder
          requirements:
          - description: Amount of transfer must be at least 100, and no greater than
              99999999999
            max: 99999999999
            min: 100
            type: amountMinMaxRequirement
          - description: Country, street and city is required.
            requiredAddressFields:
            - STREET
            - CITY
            type: addressRequirement
          - description: Bank account identification type must be iban or numberAndBic
            bankAccountIdentificationTypes:
            - iban
            - numberAndBic
            type: bankAccountIdentificationTypeRequirement
          - issuingCountryCode: NL
            paymentInstrumentType: BankAccount
            type: paymentInstrumentRequirement
        - country: NL
          currency: USD
          priority: wire
          requirements:
          - description: Amount of transfer must be at least 100, and no greater than
              99999999999
            max: 99999999999
            min: 100
            type: amountMinMaxRequirement
          - description: Country, street and city is required.
            requiredAddressFields:
            - STREET
            - CITY
            type: addressRequirement
          - description: Bank account identification type must be iban or numberAndBic
            bankAccountIdentificationTypes:
            - iban
            - numberAndBic
            type: bankAccountIdentificationTypeRequirement
          - issuingCountryCode: NL
            paymentInstrumentType: BankAccount
            type: paymentInstrumentRequirement
    post-validateBankAccountIdentification-validateBankAccountIdentificationIban:
      summary: Validate an IBAN
      value:
        accountIdentification:
          type: iban
          iban: '1001001234'
    post-validateBankAccountIdentification-validateBankAccountIdentificationIban-422:
      summary: Invalid IBAN details
      value:
        type: https://docs.adyen.com/errors/validation
        title: Invalid bank account identification details provided
        detail: Provided IBAN is incorrect
        status: 422
        invalidFields:
        - name: iban
          value: '1001001234'
          message: Invalid IBAN.
        errorCode: '33_01'
    post-validateBankAccountIdentification-validateBankAccountIdentificationUs:
      summary: Validate a US bank account
      value:
        accountIdentification:
          type: usLocal
          accountNumber: 12345JHDhjkf67890
          accountType: checking
          routingNumber: '121000567'
    post-validateBankAccountIdentification-validateBankAccountIdentificationUs-422:
      summary: Invalid US bank account details
      value:
        type: https://docs.adyen.com/errors/validation
        title: Invalid bank account identification details provided
        detail: Provided account number and the routing number are incorrect
        status: 422
        invalidFields:
        - name: accountNumber
          value: 12345JHDhjkf67890
          message: Invalid account number.
        - name: routingNumber
          value: '121000567'
          message: Invalid routing number.
        errorCode: '33_01'
