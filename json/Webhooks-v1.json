{
   "openapi" : "3.1.0",
   "info" : {
      "version" : "1",
      "x-publicVersion" : true,
      "title" : "Webhooks",
      "description" : "We use webhooks to send you updates about payment status updates, newly available reports, and other events that you can subscribe to. For more information, refer to our [documentation](https://docs.adyen.com/development-resources/webhooks).",
      "x-timestamp" : "2023-04-11T21:25:15Z",
      "termsOfService" : "https://www.adyen.com/legal/terms-and-conditions",
      "contact" : {
         "name" : "Adyen Developer Experience team",
         "url" : "https://www.adyen.help/hc/en-us/community/topics",
         "email" : "developer-experience@adyen.com"
      }
   },
   "x-groups" : [
      "Standard",
      "Additional configuration",
      "Dispute",
      "Payout"
   ],
   "tags" : [
      ],
   "x-staticResponse" : "response.json",
   "webhooks" : {
      "/AUTHORISATION" : {
         "post" : {
            "tags" : [
               "Standard"
            ],
            "summary" : "Result of authorisation request",
            "description" : "The result of the [authorisation request](https://docs.adyen.com/api-explorer/#/Payment/latest/post/authorise).",
            "operationId" : "post-AUTHORISATION",
            "x-groupName" : "Standard",
            "x-sortIndex" : 1,
            "x-methodName" : "resultOfAuthorisationRequest",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "authorisation" : {
                           "$ref" : "#/components/examples/post-AUTHORISATION-authorisation"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/AuthorisationNotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "authorisation" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/AUTHORISATION_ADJUSTMENT" : {
         "post" : {
            "tags" : [
               "Standard"
            ],
            "summary" : "Result of payment authorisation adjustment request",
            "description" : "The result of the request to [adjust the authorised amount](https://docs.adyen.com/online-payments/adjust-authorisation) sent through the [/adjustAuthorisation](https://docs.adyen.com/api-explorer/#/Payment/latest/post/adjustAuthorisation) endpoint.",
            "operationId" : "post-AUTHORISATION_ADJUSTMENT",
            "x-groupName" : "Standard",
            "x-sortIndex" : 1,
            "x-methodName" : "resultOfPaymentAuthorisationAdjustmentRequest",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "authorisation_adjustment" : {
                           "$ref" : "#/components/examples/post-AUTHORISATION_ADJUSTMENT-authorisation_adjustment"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "authorisation_adjustment" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/AUTORESCUE" : {
         "post" : {
            "tags" : [
               "Additional configuration"
            ],
            "summary" : "Auto Rescue process ended",
            "description" : "The [Auto Rescue process](https://docs.adyen.com/online-payments/auto-rescue#rescue-process-ended) ended.",
            "operationId" : "post-AUTORESCUE",
            "x-groupName" : "Additional configuration",
            "x-sortIndex" : 4,
            "x-methodName" : "autoRescueProcessEnded",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "autorescue" : {
                           "$ref" : "#/components/examples/post-AUTORESCUE-autorescue"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "autorescue" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/CANCELLATION" : {
         "post" : {
            "tags" : [
               "Standard"
            ],
            "summary" : "Result of cancel request",
            "description" : "The result of the request to [cancel a payment](https://docs.adyen.com/online-payments/cancel).",
            "operationId" : "post-CANCELLATION",
            "x-groupName" : "Standard",
            "x-sortIndex" : 1,
            "x-methodName" : "resultOfCancelRequest",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "cancellation" : {
                           "$ref" : "#/components/examples/post-CANCELLATION-cancellation"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "cancellation" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/CANCEL_AUTORESCUE" : {
         "post" : {
            "tags" : [
               "Additional configuration"
            ],
            "summary" : "Auto Rescue process canceled",
            "description" : "The [Auto Rescue process](https://docs.adyen.com/online-payments/auto-rescue) was canceled.",
            "operationId" : "post-CANCEL_AUTORESCUE",
            "x-groupName" : "Additional configuration",
            "x-sortIndex" : 4,
            "x-methodName" : "autoRescueProcessCanceled",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "cancel_autorescue" : {
                           "$ref" : "#/components/examples/post-CANCEL_AUTORESCUE-cancel_autorescue"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "cancel_autorescue" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/CANCEL_OR_REFUND" : {
         "post" : {
            "tags" : [
               "Standard"
            ],
            "summary" : "Result of cancel or refund request",
            "description" : "The result of the request to [cancel or refund a payment](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).",
            "operationId" : "post-CANCEL_OR_REFUND",
            "x-groupName" : "Standard",
            "x-sortIndex" : 1,
            "x-methodName" : "resultOfCancelOrRefundRequest",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "cancel_or_refund" : {
                           "$ref" : "#/components/examples/post-CANCEL_OR_REFUND-cancel_or_refund"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "cancel_or_refund" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/CAPTURE" : {
         "post" : {
            "tags" : [
               "Standard"
            ],
            "summary" : "Result of capture request",
            "description" : "The result of the request to [capture a payment](https://docs.adyen.com/online-payments/capture).",
            "operationId" : "post-CAPTURE",
            "x-groupName" : "Standard",
            "x-sortIndex" : 1,
            "x-methodName" : "resultOfCaptureRequest",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "capture" : {
                           "$ref" : "#/components/examples/post-CAPTURE-capture"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "capture" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/CAPTURE_FAILED" : {
         "post" : {
            "tags" : [
               "Standard"
            ],
            "summary" : "Capture request failed due to scheme rejection",
            "description" : "The capture request [failed due to rejection by the card scheme](https://docs.adyen.com/online-payments/capture#failed-capture).",
            "operationId" : "post-CAPTURE_FAILED",
            "x-groupName" : "Standard",
            "x-sortIndex" : 1,
            "x-methodName" : "captureRequestFailedDueToSchemeRejection",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "capture_failed" : {
                           "$ref" : "#/components/examples/post-CAPTURE_FAILED-capture_failed"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "capture_failed" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/CHARGEBACK" : {
         "post" : {
            "tags" : [
               "Dispute"
            ],
            "summary" : "Payment charged back",
            "description" : "The payment was [charged back](https://docs.adyen.com/risk-management/disputes-api/dispute-notifications#chargeback), and the funds were deducted from your account.",
            "operationId" : "post-CHARGEBACK",
            "x-groupName" : "Dispute",
            "x-sortIndex" : 2,
            "x-methodName" : "paymentChargedBack",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "chargeback" : {
                           "$ref" : "#/components/examples/post-CHARGEBACK-chargeback"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "chargeback" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/CHARGEBACK_REVERSED" : {
         "post" : {
            "tags" : [
               "Dispute"
            ],
            "summary" : "Chargeback successfully defended",
            "description" : "The chargeback was successfully [defended](https://docs.adyen.com/risk-management/understanding-disputes/defense-requirements) towards the issuing bank. This stage is not final. If the issuing bank presents a second chargeback, you can still lose the chargeback case.",
            "operationId" : "post-CHARGEBACK_REVERSED",
            "x-groupName" : "Dispute",
            "x-sortIndex" : 2,
            "x-methodName" : "chargebackSuccessfullyDefended",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "chargeback_reversed" : {
                           "$ref" : "#/components/examples/post-CHARGEBACK_REVERSED-chargeback_reversed"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "chargeback_reversed" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/MANUAL_REVIEW_ACCEPT" : {
         "post" : {
            "tags" : [
               "Additional configuration"
            ],
            "summary" : "Manual review accepted",
            "description" : "The [manual review](https://docs.adyen.com/risk-management/case-management) was accepted.",
            "operationId" : "post-MANUAL_REVIEW_ACCEPT",
            "x-groupName" : "Additional configuration",
            "x-sortIndex" : 4,
            "x-methodName" : "manualReviewAccepted",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "manual_review_accept" : {
                           "$ref" : "#/components/examples/post-MANUAL_REVIEW_ACCEPT-manual_review_accept"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "manual_review_accept" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/MANUAL_REVIEW_REJECT" : {
         "post" : {
            "tags" : [
               "Additional configuration"
            ],
            "summary" : "Manual review rejected",
            "description" : "The [manual review](https://docs.adyen.com/risk-management/case-management) was rejected.",
            "operationId" : "post-MANUAL_REVIEW_REJECT",
            "x-groupName" : "Additional configuration",
            "x-sortIndex" : 4,
            "x-methodName" : "manualReviewRejected",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "manual_review_reject" : {
                           "$ref" : "#/components/examples/post-MANUAL_REVIEW_REJECT-manual_review_reject"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "manual_review_reject" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/NOTIFICATION_OF_CHARGEBACK" : {
         "post" : {
            "tags" : [
               "Dispute"
            ],
            "summary" : "Dispute process opened",
            "description" : "The [dispute process](https://docs.adyen.com/risk-management/understanding-disputes/dispute-process-and-flow#dispute-process) was opened. You should investigate the dispute and [supply the defense documents](https://docs.adyen.com/risk-management/disputes-api#supply-dispute-defense-documents).",
            "operationId" : "post-NOTIFICATION_OF_CHARGEBACK",
            "x-groupName" : "Dispute",
            "x-sortIndex" : 2,
            "x-methodName" : "disputeProcessOpened",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "notification_of_chargeback" : {
                           "$ref" : "#/components/examples/post-NOTIFICATION_OF_CHARGEBACK-notification_of_chargeback"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "notification_of_chargeback" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/NOTIFICATION_OF_FRAUD" : {
         "post" : {
            "tags" : [
               "Dispute"
            ],
            "summary" : "Issuer sent fraud alert notification",
            "description" : "The issuer sent a [fraud alert notification](https://docs.adyen.com/risk-management/understanding-disputes/dispute-process-and-flow#dispute-process) to schemes and to processors. Visa calls them TC40 and Mastercard calls them System to Avoid Fraud Effectively (SAFE). These are informational notifications from Adyen, providing you the opportunity to take action, such as blocking a shopper or issuing a refund before a chargeback happens.",
            "operationId" : "post-NOTIFICATION_OF_FRAUD",
            "x-groupName" : "Dispute",
            "x-sortIndex" : 2,
            "x-methodName" : "issuerSentFraudAlertNotification",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "notification_of_fraud" : {
                           "$ref" : "#/components/examples/post-NOTIFICATION_OF_FRAUD-notification_of_fraud"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "notification_of_fraud" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/OFFER_CLOSED" : {
         "post" : {
            "tags" : [
               "Additional configuration"
            ],
            "summary" : "Offer expired",
            "description" : "The offer expired, for example, because the shopper abandoned the session. For cards, offers expire after 12 hours by default.",
            "operationId" : "post-OFFER_CLOSED",
            "x-groupName" : "Additional configuration",
            "x-sortIndex" : 4,
            "x-methodName" : "offerExpired",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "offer_closed" : {
                           "$ref" : "#/components/examples/post-OFFER_CLOSED-offer_closed"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "offer_closed" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/ORDER_CLOSED" : {
         "post" : {
            "tags" : [
               "Standard"
            ],
            "summary" : "Result of last partial payment for order",
            "description" : "The result of the last [partial payment](https://docs.adyen.com/online-payments/partial-payments) for the order.",
            "operationId" : "post-ORDER_CLOSED",
            "x-groupName" : "Standard",
            "x-sortIndex" : 1,
            "x-methodName" : "resultOfLastPartialPaymentForOrder",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "order_closed" : {
                           "$ref" : "#/components/examples/post-ORDER_CLOSED-order_closed"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "order_closed" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/ORDER_OPENED" : {
         "post" : {
            "tags" : [
               "Standard"
            ],
            "summary" : "First partial payment request for order",
            "description" : "The first [partial payment](https://docs.adyen.com/online-payments/partial-payments) was made, and the order was created.",
            "operationId" : "post-ORDER_OPENED",
            "x-groupName" : "Standard",
            "x-sortIndex" : 1,
            "x-methodName" : "firstPartialPaymentRequestForOrder",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "order_opened" : {
                           "$ref" : "#/components/examples/post-ORDER_OPENED-order_opened"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "order_opened" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/PAIDOUT_REVERSED" : {
         "post" : {
            "tags" : [
               "Payout"
            ],
            "summary" : "Financial institution rejected payout",
            "description" : "The financial institution [rejected the payout](https://docs.adyen.com/online-payments/online-payouts/payout-notifications). We will return the funds back to your account. \nThe reason field contains the bank statement description if present.",
            "operationId" : "post-PAIDOUT_REVERSED",
            "x-groupName" : "Payout",
            "x-sortIndex" : 3,
            "x-methodName" : "financialInstitutionRejectedPayout",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "paidout_reversed" : {
                           "$ref" : "#/components/examples/post-PAIDOUT_REVERSED-paidout_reversed"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/PaidoutReversedNotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "paidout_reversed" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/PAYOUT_DECLINE" : {
         "post" : {
            "tags" : [
               "Payout"
            ],
            "summary" : "Payout declined",
            "description" : "The [payout was declined](https://docs.adyen.com/online-payments/online-payouts/confirm-or-decline-payout).",
            "operationId" : "post-PAYOUT_DECLINE",
            "x-groupName" : "Payout",
            "x-sortIndex" : 3,
            "x-methodName" : "payoutDeclined",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "payout_decline" : {
                           "$ref" : "#/components/examples/post-PAYOUT_DECLINE-payout_decline"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "payout_decline" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/PAYOUT_EXPIRE" : {
         "post" : {
            "tags" : [
               "Payout"
            ],
            "summary" : "Payout expired",
            "description" : "The [payout expired](https://docs.adyen.com/online-payments/online-payouts/payout-notifications).",
            "operationId" : "post-PAYOUT_EXPIRE",
            "x-groupName" : "Payout",
            "x-sortIndex" : 3,
            "x-methodName" : "payoutExpired",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "payout_expire" : {
                           "$ref" : "#/components/examples/post-PAYOUT_EXPIRE-payout_expire"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "payout_expire" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/PAYOUT_THIRDPARTY" : {
         "post" : {
            "tags" : [
               "Payout"
            ],
            "summary" : "Result of payout request",
            "description" : "The result of the [payout request](https://docs.adyen.com/online-payments/online-payouts).",
            "operationId" : "post-PAYOUT_THIRDPARTY",
            "x-groupName" : "Payout",
            "x-sortIndex" : 3,
            "x-methodName" : "resultOfPayoutRequest",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "payout_thirdparty" : {
                           "$ref" : "#/components/examples/post-PAYOUT_THIRDPARTY-payout_thirdparty"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "payout_thirdparty" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/POSTPONED_REFUND" : {
         "post" : {
            "tags" : [
               "Additional configuration"
            ],
            "summary" : "Refund postponed until after payment capture",
            "description" : "The refund was postponed until after [payment capture](https://docs.adyen.com/online-payments/capture). To enable this notification, contact our [Support Team](https://www.adyen.help/hc/en-us/requests/new).",
            "operationId" : "post-POSTPONED_REFUND",
            "x-groupName" : "Additional configuration",
            "x-sortIndex" : 4,
            "x-methodName" : "refundPostponedUntilAfterPaymentCapture",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "postponed_refund" : {
                           "$ref" : "#/components/examples/post-POSTPONED_REFUND-postponed_refund"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "postponed_refund" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/PREARBITRATION_LOST" : {
         "post" : {
            "tags" : [
               "Dispute"
            ],
            "summary" : "Cardholder's bank declined pre-arbitration case",
            "description" : "The cardholder's bank declined the [pre-arbitration](https://docs.adyen.com/risk-management/understanding-disputes/dispute-process-and-flow#dispute-process) case.",
            "operationId" : "post-PREARBITRATION_LOST",
            "x-groupName" : "Dispute",
            "x-sortIndex" : 2,
            "x-methodName" : "cardholdersBankDeclinedPrearbitrationCase",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "prearbitration_lost" : {
                           "$ref" : "#/components/examples/post-PREARBITRATION_LOST-prearbitration_lost"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "prearbitration_lost" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/PREARBITRATION_WON" : {
         "post" : {
            "tags" : [
               "Dispute"
            ],
            "summary" : "Cardholder's bank accepted pre-arbitration case",
            "description" : "The cardholder's bank accepted the [pre-arbitration](https://docs.adyen.com/risk-management/understanding-disputes/dispute-process-and-flow#dispute-process) case.",
            "operationId" : "post-PREARBITRATION_WON",
            "x-groupName" : "Dispute",
            "x-sortIndex" : 2,
            "x-methodName" : "cardholdersBankAcceptedPrearbitrationCase",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "prearbitration_won" : {
                           "$ref" : "#/components/examples/post-PREARBITRATION_WON-prearbitration_won"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "prearbitration_won" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/RECURRING_CONTRACT" : {
         "post" : {
            "tags" : [
               "Additional configuration"
            ],
            "summary" : "Recurring contract created",
            "description" : "A recurring contract has been created. [Enable this notification](https://docs.adyen.com/development-resources/webhooks/understand-notifications#webhook-settings-page) in your Customer Area.",
            "operationId" : "post-RECURRING_CONTRACT",
            "x-groupName" : "Additional configuration",
            "x-sortIndex" : 4,
            "x-methodName" : "recurringContractCreated",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "recurring_contract" : {
                           "$ref" : "#/components/examples/post-RECURRING_CONTRACT-recurring_contract"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/RecurringContractNotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "recurring_contract" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/REFUND" : {
         "post" : {
            "tags" : [
               "Standard"
            ],
            "summary" : "Result of refund request",
            "description" : "The result of the request to [refund a payment](https://docs.adyen.com/online-payments/refund).",
            "operationId" : "post-REFUND",
            "x-groupName" : "Standard",
            "x-sortIndex" : 1,
            "x-methodName" : "resultOfRefundRequest",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "refund" : {
                           "$ref" : "#/components/examples/post-REFUND-refund"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "refund" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/REFUNDED_REVERSED" : {
         "post" : {
            "tags" : [
               "Standard"
            ],
            "summary" : "Refunded amount reversed",
            "description" : "The refunded amount was [reversed](https://docs.adyen.com/online-payments/refund#refunded-reversed) and returned to your bank account.",
            "operationId" : "post-REFUNDED_REVERSED",
            "x-groupName" : "Standard",
            "x-sortIndex" : 1,
            "x-methodName" : "refundedAmountReversed",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "refunded_reversed" : {
                           "$ref" : "#/components/examples/post-REFUNDED_REVERSED-refunded_reversed"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "refunded_reversed" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/REFUND_FAILED" : {
         "post" : {
            "tags" : [
               "Standard"
            ],
            "summary" : "Refund failed due to scheme rejection",
            "description" : "The refund [failed due to rejection by the card scheme](https://docs.adyen.com/online-payments/refund#refund-failed).",
            "operationId" : "post-REFUND_FAILED",
            "x-groupName" : "Standard",
            "x-sortIndex" : 1,
            "x-methodName" : "refundFailedDueToSchemeRejection",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "refund_failed" : {
                           "$ref" : "#/components/examples/post-REFUND_FAILED-refund_failed"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "refund_failed" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/REFUND_WITH_DATA" : {
         "post" : {
            "tags" : [
               "Standard"
            ],
            "summary" : "Result of refund request with data",
            "description" : "The result of the request to [refund with data](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund#unreferenced-refund).",
            "operationId" : "post-REFUND_WITH_DATA",
            "x-groupName" : "Standard",
            "x-sortIndex" : 1,
            "x-methodName" : "resultOfRefundRequestWithData",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "refund_with_data" : {
                           "$ref" : "#/components/examples/post-REFUND_WITH_DATA-refund_with_data"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "refund_with_data" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/REPORT_AVAILABLE" : {
         "post" : {
            "tags" : [
               "Standard"
            ],
            "summary" : "Report available",
            "description" : "The report is generated and ready to be downloaded.",
            "operationId" : "post-REPORT_AVAILABLE",
            "x-groupName" : "Standard",
            "x-sortIndex" : 1,
            "x-methodName" : "reportAvailable",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "report_available" : {
                           "$ref" : "#/components/examples/post-REPORT_AVAILABLE-report_available"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/ReportAvailableNotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "report_available" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/REQUEST_FOR_INFORMATION" : {
         "post" : {
            "tags" : [
               "Dispute"
            ],
            "summary" : "Issuer opened Request for Information (RFI)",
            "description" : "The issuer opened a [Request for Information (RFI)](https://docs.adyen.com/risk-management/understanding-disputes/dispute-process-and-flow#dispute-process). You should [supply defense documents](https://docs.adyen.com/risk-management/disputes-api#supply-dispute-defense-documents) to help shopper understand the charge.",
            "operationId" : "post-REQUEST_FOR_INFORMATION",
            "x-groupName" : "Dispute",
            "x-sortIndex" : 2,
            "x-methodName" : "issuerOpenedRequestForInformationrfi",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "request_for_information" : {
                           "$ref" : "#/components/examples/post-REQUEST_FOR_INFORMATION-request_for_information"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "request_for_information" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/SECOND_CHARGEBACK" : {
         "post" : {
            "tags" : [
               "Dispute"
            ],
            "summary" : "Issuing bank declined chargeback defense",
            "description" : "The issuing bank declined the material submitted during [defense of the original chargeback](https://docs.adyen.com/risk-management/understanding-disputes/defense-requirements). The disputed amount is deducted from your account.",
            "operationId" : "post-SECOND_CHARGEBACK",
            "x-groupName" : "Dispute",
            "x-sortIndex" : 2,
            "x-methodName" : "issuingBankDeclinedChargebackDefense",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "second_chargeback" : {
                           "$ref" : "#/components/examples/post-SECOND_CHARGEBACK-second_chargeback"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "second_chargeback" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/TECHNICAL_CANCEL" : {
         "post" : {
            "tags" : [
               "Standard"
            ],
            "summary" : "Result of technical cancel request",
            "description" : "The result of the [technical cancel](https://docs.adyen.com/online-payments/cancel#technical-cancel-webhook) request.",
            "operationId" : "post-TECHNICAL_CANCEL",
            "x-groupName" : "Standard",
            "x-sortIndex" : 1,
            "x-methodName" : "resultOfTechnicalCancelRequest",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "technical_cancel" : {
                           "$ref" : "#/components/examples/post-TECHNICAL_CANCEL-technical_cancel"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "technical_cancel" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/VOID_PENDING_REFUND" : {
         "post" : {
            "tags" : [
               "Standard"
            ],
            "summary" : "Result of request to cancel POS refund",
            "description" : "The result of the request to [cancel a POS refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-a-pos-refund-request).",
            "operationId" : "post-VOID_PENDING_REFUND",
            "x-groupName" : "Standard",
            "x-sortIndex" : 1,
            "x-methodName" : "resultOfRequestToCancelPosRefund",
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "void_pending_refund" : {
                           "$ref" : "#/components/examples/post-VOID_PENDING_REFUND-void_pending_refund"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "void_pending_refund" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      }
   },
   "components" : {
      "schemas" : {
         "Amount" : {
            "properties" : {
               "currency" : {
                  "description" : "The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).",
                  "maxLength" : 3,
                  "minLength" : 3,
                  "type" : "string"
               },
               "value" : {
                  "description" : "The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
                  "format" : "int64",
                  "type" : "integer"
               }
            },
            "required" : [
               "value",
               "currency"
            ],
            "type" : "object"
         },
         "AuthorisationNotificationAdditionalData" : {
            "properties" : {
               "PaymentAccountReference" : {
                  "description" : "Reference of the payment account.",
                  "type" : "string"
               },
               "acquirerAccountCode" : {
                  "description" : "The acquirer account code.",
                  "type" : "string"
               },
               "acquirerCode" : {
                  "description" : "The acquirer code.",
                  "type" : "string"
               },
               "acquirerReference" : {
                  "description" : "The acquirer reference.",
                  "type" : "string"
               },
               "acsRenderingType.acsInterface" : {
                  "description" : "ACS interface. Related to 3DS.",
                  "type" : "string"
               },
               "acsRenderingType.acsUiTemplate" : {
                  "description" : "ACS UI template.",
                  "type" : "string"
               },
               "alias" : {
                  "description" : "Alias for this card.",
                  "type" : "string"
               },
               "aliasType" : {
                  "description" : "Alias type.",
                  "type" : "string"
               },
               "arn" : {
                  "description" : "Acquirer Reference Number of the dispute.",
                  "type" : "string"
               },
               "authCode" : {
                  "description" : "Authcode of the scheme.",
                  "type" : "string"
               },
               "authenticationType" : {
                  "description" : "3DS authentication type",
                  "type" : "string"
               },
               "authorisationMid" : {
                  "description" : "Authorisation MID of the acquirer.",
                  "type" : "string"
               },
               "authorisedAmountCurrency" : {
                  "description" : "The currency authorised for a dynamic zero auth request.",
                  "type" : "string"
               },
               "authorisedAmountValue" : {
                  "description" : "The amount authorised for a dynamic zero auth request.",
                  "type" : "string"
               },
               "avsResult" : {
                  "description" : "Address Verification Service result.",
                  "type" : "string"
               },
               "avsResultRaw" : {
                  "description" : "Address Verification Service result raw.",
                  "type" : "string"
               },
               "bankAccountNumber" : {
                  "description" : "The bank account number.",
                  "type" : "string"
               },
               "bankLocation" : {
                  "description" : "The bank location.",
                  "type" : "string"
               },
               "bankLocationId" : {
                  "description" : "The bank location ID.",
                  "type" : "string"
               },
               "bankName" : {
                  "description" : "The bank name.",
                  "type" : "string"
               },
               "bankVerificationResult" : {
                  "description" : "The bank verificaiton result.",
                  "type" : "string"
               },
               "bankVerificationResultRaw" : {
                  "description" : "The bank verification result raw.",
                  "type" : "string"
               },
               "bic" : {
                  "description" : "Business Identifier Code.",
                  "type" : "string"
               },
               "billingAddress.city" : {
                  "description" : "BillingAddress: county.",
                  "type" : "string"
               },
               "billingAddress.houseNumberOrName" : {
                  "description" : "BillingAddress: house number or name.",
                  "type" : "string"
               },
               "billingAddress.postalCode" : {
                  "description" : "BillingAddress: postal code.",
                  "type" : "string"
               },
               "billingAddress.stateOrProvince" : {
                  "description" : "BillingAddress: state or province",
                  "type" : "string"
               },
               "billingAddress.street" : {
                  "description" : "BillingAddress: street",
                  "type" : "string"
               },
               "browserCode" : {
                  "description" : "Browser code.",
                  "type" : "string"
               },
               "captureDelayHours" : {
                  "description" : "The amount of delay after authorisation.",
                  "type" : "string"
               },
               "captureMerchantReference" : {
                  "description" : "The merchant reference of the capture.",
                  "type" : "string"
               },
               "capturePspReference" : {
                  "description" : "The PSP reference of the capture.",
                  "type" : "string"
               },
               "cardBin" : {
                  "description" : "Card Bank Identification number.",
                  "type" : "string"
               },
               "cardIssuingBank" : {
                  "description" : "Card issuing bank.",
                  "type" : "string"
               },
               "cardIssuingCountry" : {
                  "description" : "Card issuing country.",
                  "type" : "string"
               },
               "cardIssuingCurrency" : {
                  "description" : "Card issuing currency.",
                  "type" : "string"
               },
               "cardPaymentMethod" : {
                  "description" : "Card payment method.",
                  "type" : "string"
               },
               "cardSchemeEnhancedDataLevel" : {
                  "description" : "Card scheme enhanced data level.",
                  "type" : "string"
               },
               "cardSummary" : {
                  "description" : "Card summary",
                  "type" : "string"
               },
               "cavv" : {
                  "description" : "Secure Cardholder Authentication Verification Value.",
                  "type" : "string"
               },
               "cavvAlgorithm" : {
                  "description" : "CAVV algorithm.",
                  "type" : "string"
               },
               "challengeCancel" : {
                  "description" : "Information about the 3DS challenge being canceled.",
                  "type" : "string"
               },
               "checkoutSessionId" : {
                  "description" : "ID of the Checkout Session.",
                  "type" : "string"
               },
               "cvcResult" : {
                  "description" : "Card Verification Code result.",
                  "type" : "string"
               },
               "cvcResultRaw" : {
                  "description" : "Card Verification Code result raw.",
                  "type" : "string"
               },
               "deliveryAddress.city" : {
                  "description" : "Delivery address: city.",
                  "type" : "string"
               },
               "deliveryAddress.country" : {
                  "description" : "Delivery address: country.",
                  "type" : "string"
               },
               "deliveryAddress.houseNumberOrName" : {
                  "description" : "Delivery address: house number or name.",
                  "type" : "string"
               },
               "deliveryAddress.postalCode" : {
                  "description" : "Delivery address: postal code.",
                  "type" : "string"
               },
               "deliveryAddress.stateOrProvince" : {
                  "description" : "Delivery address: state or province.",
                  "type" : "string"
               },
               "deliveryAddress.street" : {
                  "description" : "Delivery address: street.",
                  "type" : "string"
               },
               "deviceType" : {
                  "description" : "Type of device the request was made from.",
                  "type" : "string"
               },
               "directdebit_GB.dateOfSignature" : {
                  "description" : "Direct debit GB: date of signature.",
                  "type" : "string"
               },
               "directdebit_GB.mandateId" : {
                  "description" : "Direct debit GB: mandate ID.",
                  "type" : "string"
               },
               "directdebit_GB.sequenceType" : {
                  "description" : "Direct debit GB: sequence type.",
                  "type" : "string"
               },
               "directdebit_GB.serviceUserName" : {
                  "description" : "Direct debit GB: service user name.",
                  "type" : "string"
               },
               "directdebit_GB.serviceUserNumber" : {
                  "description" : "Direct debit GB: service user number.",
                  "type" : "string"
               },
               "eci" : {
                  "description" : "3DS: Electronic Commerce Indicator.",
                  "type" : "string"
               },
               "expiryDate" : {
                  "description" : "Expiry date of the card.",
                  "type" : "string"
               },
               "extraCostsCurrency" : {
                  "description" : "Additional cost used in [BIN or card verification](https://docs.adyen.com/payment-methods/cards/bin-data-and-card-verification).",
                  "type" : "string"
               },
               "extraCostsValue" : {
                  "description" : "Related additional cost value.",
                  "type" : "string"
               },
               "extraCostsValueGratuity" : {
                  "description" : "Gratuity related additional cost value.",
                  "type" : "string"
               },
               "extraCostsValueSurcharge" : {
                  "description" : "Surcharge related additional cost value.",
                  "type" : "string"
               },
               "fraudCheck-<check ID>-<name>" : {
                  "description" : "Information on the fraud check in a dynamic format.",
                  "type" : "string"
               },
               "fraudManualReview" : {
                  "description" : "Indicates if the risk check was done manually.",
                  "type" : "string"
               },
               "fraudOffset" : {
                  "description" : "The fraud offset.",
                  "type" : "string"
               },
               "fraudResultType" : {
                  "description" : "Result type of the fraud check.",
                  "type" : "string"
               },
               "fundingSource" : {
                  "description" : "Funding source.",
                  "type" : "string"
               },
               "grossCurrency" : {
                  "description" : "Chargeback gross currency.",
                  "type" : "string"
               },
               "grossValue" : {
                  "description" : "Chargeback gross value.",
                  "type" : "string"
               },
               "iDealConsumerAccountNumber" : {
                  "description" : "Only included for iDeal payments.",
                  "type" : "string"
               },
               "iDealConsumerBIC" : {
                  "description" : "Only included for iDeal payments.",
                  "type" : "string"
               },
               "iDealConsumerCity" : {
                  "description" : "Only included for iDeal payments.",
                  "type" : "string"
               },
               "iDealConsumerIBAN" : {
                  "description" : "Only included for iDeal payments.",
                  "type" : "string"
               },
               "iDealConsumerIban" : {
                  "description" : "Only included for iDeal payments.",
                  "type" : "string"
               },
               "iDealConsumerName" : {
                  "description" : "Only included for iDeal payments.",
                  "type" : "string"
               },
               "iDealTransactionId" : {
                  "description" : "Only included for iDeal payments.",
                  "type" : "string"
               },
               "iban" : {
                  "description" : "International Bank Account Number.",
                  "type" : "string"
               },
               "installments.value" : {
                  "description" : "The number of installments that the payment amount should be charged with.\n\nExample: 5\n> Only relevant for card payments in countries that support installments.",
                  "type" : "string"
               },
               "interactionCounter" : {
                  "description" : "3DS interaction counter.",
                  "type" : "string"
               },
               "issuerComments.cardholderName" : {
                  "description" : "Card holder name.",
                  "type" : "string"
               },
               "issuerCountry" : {
                  "description" : "Country of the card issuer.",
                  "type" : "string"
               },
               "latestCard.bin" : {
                  "description" : "Recurring: Latest card BIN.",
                  "type" : "string"
               },
               "latestCard.expiryDate" : {
                  "description" : "Recurring: Latest card expiry date.",
                  "type" : "string"
               },
               "latestCard.summary" : {
                  "description" : "Recurring: Latest card summary.",
                  "type" : "string"
               },
               "liabilityShift" : {
                  "description" : "Risk liability shift.",
                  "type" : "string"
               },
               "metadata" : {
                  "additionalProperties" : {
                     "type" : "string"
                  },
                  "description" : "A set of key-value pairs provided in the request, prefixed with 'metadata.'. For example, 'metadata.myField: myValue'",
                  "type" : "object"
               },
               "networkToken.available" : {
                  "description" : "Recurring related.",
                  "type" : "string"
               },
               "networkToken.bin" : {
                  "description" : "Recurring related.",
                  "type" : "string"
               },
               "networkToken.tokenSummary" : {
                  "description" : "Recurring related.",
                  "type" : "string"
               },
               "nfc.expire" : {
                  "description" : "NFC related.",
                  "type" : "string"
               },
               "nfc.issue" : {
                  "description" : "NFC related.",
                  "type" : "string"
               },
               "nfc.pin.provided" : {
                  "description" : "NFC related.",
                  "type" : "string"
               },
               "nfc.uid" : {
                  "description" : "NFC related.",
                  "type" : "string"
               },
               "opi.transToken" : {
                  "description" : "The transaction token to be used in your Oracle Opera integration.",
                  "type" : "string"
               },
               "ownerCity" : {
                  "description" : "Owner city.",
                  "type" : "string"
               },
               "ownerName" : {
                  "description" : "Owner name.",
                  "type" : "string"
               },
               "payULatamTrazabilityCode" : {
                  "description" : "Related to PayU in LATAM.",
                  "type" : "string"
               },
               "paymentLinkId" : {
                  "description" : "ID of the Checkout payment link.",
                  "type" : "string"
               },
               "paypalAddressStatus" : {
                  "description" : "Related to PayPal.",
                  "type" : "string"
               },
               "paypalBillingName" : {
                  "description" : "Related to PayPal.",
                  "type" : "string"
               },
               "paypalEmail" : {
                  "description" : "The buyer's PayPal account email address.\n\nExample: paypaltest@adyen.com",
                  "type" : "string"
               },
               "paypalErrorCode" : {
                  "description" : "Related to PayPal.",
                  "type" : "string"
               },
               "paypalErrorDescription" : {
                  "description" : "Related to PayPal.",
                  "type" : "string"
               },
               "paypalPairingId" : {
                  "description" : "Related to PayPal.",
                  "type" : "string"
               },
               "paypalPayerId" : {
                  "description" : "The buyer's PayPal ID.\n\nExample: LF5HCWWBRV2KL",
                  "type" : "string"
               },
               "paypalPayerResidenceCountry" : {
                  "description" : "The buyer's country of residence.\n\nExample: NL",
                  "type" : "string"
               },
               "paypalPayerStatus" : {
                  "description" : "The status of the buyer's PayPal account.\n\nExample: unverified",
                  "type" : "string"
               },
               "paypalPhone" : {
                  "description" : "Related to PayPal.",
                  "type" : "string"
               },
               "paypalProtectionEligibility" : {
                  "description" : "The eligibility for PayPal Seller Protection for this payment.\n\nExample: Ineligible",
                  "type" : "string"
               },
               "paypalRisk" : {
                  "description" : "Related to PayPal.",
                  "type" : "string"
               },
               "realtimeAccountUpdaterStatus" : {
                  "description" : "Real time Account Update status.",
                  "type" : "string"
               },
               "recurring.contractTypes" : {
                  "description" : "Recurring contract types.",
                  "type" : "string"
               },
               "recurring.firstPspReference" : {
                  "description" : "Recurring first PSP reference.",
                  "type" : "string"
               },
               "recurring.recurringDetailReference" : {
                  "description" : "recurring detail reference.",
                  "type" : "string"
               },
               "referred" : {
                  "description" : "If the payment is referred, this field is set to true.\n\nThis field is unavailable if the payment is referred and is usually not returned with ecommerce transactions.\n\nExample: true",
                  "type" : "string"
               },
               "refusalReasonRaw" : {
                  "description" : "Raw refusal reason received from the acquirer, where available.\n\nExample: AUTHORISED",
                  "type" : "string"
               },
               "retry.rescueScheduled" : {
                  "description" : "Indicates if an auto rescue for a pyment is scheduled.",
                  "type" : "string"
               },
               "riskProfile" : {
                  "description" : "Related to Risk.",
                  "type" : "string"
               },
               "riskProfileReference" : {
                  "description" : "Related to Risk.",
                  "type" : "string"
               },
               "sepadirectdebit.dateOfSignature" : {
                  "description" : "The transaction signature date.\n\nFormat: yyyy-MM-dd",
                  "type" : "string"
               },
               "sepadirectdebit.mandateId" : {
                  "description" : "Its value corresponds to the pspReference value of the transaction.",
                  "type" : "string"
               },
               "sepadirectdebit.sequenceType" : {
                  "description" : "This field can take one of the following values:\n* OneOff: (OOFF) Direct debit instruction to initiate exactly one direct debit transaction.\n\n* First: (FRST) Initial/first collection in a series of direct debit instructions.\n* Recurring: (RCUR) Direct debit instruction to carry out regular direct debit transactions initiated by the creditor.\n* Final: (FNAL) Last/final collection in a series of direct debit instructions.\n\nExample: OOFF",
                  "type" : "string"
               },
               "shopperCountry" : {
                  "description" : "Country of the shopper.",
                  "type" : "string"
               },
               "shopperIP" : {
                  "description" : "IP of the shopper.",
                  "type" : "string"
               },
               "shopperInteraction" : {
                  "description" : "The shopper interaction type of the payment request.\n\nExample: Ecommerce",
                  "type" : "string"
               },
               "shopperLocale" : {
                  "description" : "The locale of the shopper.",
                  "type" : "string"
               },
               "shopperSocialSecurityNumber" : {
                  "description" : "The social security number of the shopper.",
                  "type" : "string"
               },
               "shopperStatement" : {
                  "description" : "The text to be shown on the shopper's bank statement.",
                  "type" : "string"
               },
               "shopperTelephone" : {
                  "description" : "The telephone number of the shopper.",
                  "type" : "string"
               },
               "store" : {
                  "description" : "Identifier of the store processing the transaction.",
                  "type" : "string"
               },
               "tenderReference" : {
                  "description" : "Tender reference. For point-of-sale integrations only.",
                  "type" : "string"
               },
               "terminalId" : {
                  "description" : "Terminal ID. For point-of-sale integrations only.",
                  "type" : "string"
               },
               "threeDAuthenticated" : {
                  "description" : "A Boolean value indicating whether 3DS authentication was completed on this payment.\n\nExample: true",
                  "type" : "string"
               },
               "threeDAuthenticatedResponse" : {
                  "description" : "The raw 3DS authentication result from the card issuer.\n\nExample: N",
                  "type" : "string"
               },
               "threeDOffered" : {
                  "description" : "A Boolean value indicating whether 3DS was offered for this payment.\n\nExample: true",
                  "type" : "string"
               },
               "threeDOfferedResponse" : {
                  "description" : "The raw enrollment result from the 3DS directory services of the card schemes.\n\nExample: Y",
                  "type" : "string"
               },
               "threeDSVersion" : {
                  "description" : "The 3D Secure 2 version.",
                  "type" : "string"
               },
               "tokenTxVariant" : {
                  "description" : "Payment method variant of the token/wallet payment method.",
                  "type" : "string"
               },
               "totalFraudScore" : {
                  "description" : "Total fraud score from risk.",
                  "type" : "string"
               },
               "untokenisedCardSummary" : {
                  "description" : "Card summary without tokenization.",
                  "type" : "string"
               },
               "xid" : {
                  "description" : "The 3DS transaction ID of the 3DS session sent in notifications. The value is Base64-encoded and is returned for transactions with directoryResponse 'N' or 'Y'. If you want to submit the xid in your 3D Secure 1 request, use the `mpiData.xid`, field.\n\nExample: ODgxNDc2MDg2MDExODk5MAAAAAA=",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "AuthorisationNotificationRequest" : {
            "properties" : {
               "live" : {
                  "description" : "Informs about the origin of the notification. The value is **true** when originating from the live environment, **false** for the test environment.",
                  "type" : "string"
               },
               "notificationItems" : {
                  "description" : "A container object for the details included in the notification.",
                  "items" : {
                     "$ref" : "#/components/schemas/AuthorisationNotificationRequestItemWrapper"
                  },
                  "type" : "array"
               }
            },
            "type" : "object"
         },
         "AuthorisationNotificationRequestItem" : {
            "properties" : {
               "additionalData" : {
                  "description" : "This object is a generic container that can hold extra fields.",
                  "$ref" : "#/components/schemas/AuthorisationNotificationAdditionalData"
               },
               "amount" : {
                  "description" : "The payment amount. For HTTP POST notifications, currency and value are returned as URL parameters.",
                  "$ref" : "#/components/schemas/Amount"
               },
               "eventCode" : {
                  "description" : "The type of event the notification item is for.",
                  "type" : "string"
               },
               "eventDate" : {
                  "description" : "The time when the event was generated. Format: ISO 8601; yyyy-MM-DDThh:mm:ssTZD",
                  "example" : "2021-07-17T13:42:40+01:00",
                  "format" : "date-time",
                  "type" : "string"
               },
               "merchantAccountCode" : {
                  "description" : "The merchant account identifier used in the transaction the notification item is for.",
                  "type" : "string"
               },
               "merchantReference" : {
                  "description" : "Your reference to uniquely identify the payment.",
                  "type" : "string"
               },
               "operations" : {
                  "description" : "The operations indicate the supported follow-up actions concerning the payment.\n> This is an **experimental field**. Do not base your code on this field. Not all specific cases are covered yet. It's possible that the field is empty or contains generic information.",
                  "enum" : [
                     "CAPTURE",
                     "CANCEL",
                     "REFUND"
                  ],
                  "items" : {
                     "type" : "string"
                  },
                  "type" : "string"
               },
               "paymentMethod" : {
                  "description" : "The payment method used in the transaction.",
                  "example" : "visa, mc, iDeal",
                  "type" : "string"
               },
               "pspReference" : {
                  "description" : "Adyen's 16-character unique reference associated with the transaction or request. This value is globally unique. Use it when communicating with us about this request.",
                  "type" : "string"
               },
               "reason" : {
                  "description" : "If `success` = `true` and `paymentMethod` = `visa`, `mc`, or `amex` then this field contains the following details: \nAuthorisation code, last 4 digits of the card, card expiry date. \n In case of failure, this contains information about the authorisation failure",
                  "example" : "874574:1935:11/2012",
                  "type" : "string"
               },
               "success" : {
                  "description" : "If `true`: The payment request was successful. \n If `false`: The payment request failed. \n Check the `reason` field for failure information.",
                  "type" : "string"
               }
            },
            "required" : [
               "merchantReference",
               "merchantAccountCode",
               "eventDate",
               "eventCode",
               "amount",
               "paymentMethod"
            ],
            "type" : "object"
         },
         "AuthorisationNotificationRequestItemWrapper" : {
            "properties" : {
               "AuthorisationNotificationRequestItem" : {
                  "$ref" : "#/components/schemas/AuthorisationNotificationRequestItem"
               }
            }
         },
         "NotificationAdditionalData" : {
            "properties" : {
               "PaymentAccountReference" : {
                  "description" : "Reference of the payment account.",
                  "type" : "string"
               },
               "acquirerAccountCode" : {
                  "description" : "The acquirer account code.",
                  "type" : "string"
               },
               "acquirerCode" : {
                  "description" : "The acquirer code.",
                  "type" : "string"
               },
               "acquirerReference" : {
                  "description" : "The acquirer reference.",
                  "type" : "string"
               },
               "acsRenderingType.acsInterface" : {
                  "description" : "ACS interface. Related to 3DS.",
                  "type" : "string"
               },
               "acsRenderingType.acsUiTemplate" : {
                  "description" : "ACS UI template.",
                  "type" : "string"
               },
               "alias" : {
                  "description" : "Alias for this card.",
                  "type" : "string"
               },
               "aliasType" : {
                  "description" : "Alias type.",
                  "type" : "string"
               },
               "arn" : {
                  "description" : "Acquirer Reference Number of the dispute.",
                  "type" : "string"
               },
               "authCode" : {
                  "description" : "Authcode of the scheme.",
                  "type" : "string"
               },
               "authenticationType" : {
                  "description" : "3DS authentication type",
                  "type" : "string"
               },
               "authorisationMid" : {
                  "description" : "Authorisation MID of the acquirer.",
                  "type" : "string"
               },
               "authorisedAmountCurrency" : {
                  "description" : "The currency authorised for a dynamic zero auth request.",
                  "type" : "string"
               },
               "authorisedAmountValue" : {
                  "description" : "The amount authorised for a dynamic zero auth request.",
                  "type" : "string"
               },
               "avsResult" : {
                  "description" : "Address Verification Service result.",
                  "type" : "string"
               },
               "avsResultRaw" : {
                  "description" : "Address Verification Service result raw.",
                  "type" : "string"
               },
               "bankAccountNumber" : {
                  "description" : "The bank account number.",
                  "type" : "string"
               },
               "bankLocation" : {
                  "description" : "The bank location.",
                  "type" : "string"
               },
               "bankLocationId" : {
                  "description" : "The bank location ID.",
                  "type" : "string"
               },
               "bankName" : {
                  "description" : "The bank name.",
                  "type" : "string"
               },
               "bankVerificationResult" : {
                  "description" : "The bank verificaiton result.",
                  "type" : "string"
               },
               "bankVerificationResultRaw" : {
                  "description" : "The bank verification result raw.",
                  "type" : "string"
               },
               "bic" : {
                  "description" : "Business Identifier Code.",
                  "type" : "string"
               },
               "billingAddress.city" : {
                  "description" : "BillingAddress: county.",
                  "type" : "string"
               },
               "billingAddress.houseNumberOrName" : {
                  "description" : "BillingAddress: house number or name.",
                  "type" : "string"
               },
               "billingAddress.postalCode" : {
                  "description" : "BillingAddress: postal code.",
                  "type" : "string"
               },
               "billingAddress.stateOrProvince" : {
                  "description" : "BillingAddress: state or province",
                  "type" : "string"
               },
               "billingAddress.street" : {
                  "description" : "BillingAddress: street",
                  "type" : "string"
               },
               "browserCode" : {
                  "description" : "Browser code.",
                  "type" : "string"
               },
               "captureDelayHours" : {
                  "description" : "The amount of delay after authorisation.",
                  "type" : "string"
               },
               "captureMerchantReference" : {
                  "description" : "The merchant reference of the capture.",
                  "type" : "string"
               },
               "capturePspReference" : {
                  "description" : "The PSP reference of the capture.",
                  "type" : "string"
               },
               "cardBin" : {
                  "description" : "Card Bank Identification number.",
                  "type" : "string"
               },
               "cardIssuingBank" : {
                  "description" : "Card issuing bank.",
                  "type" : "string"
               },
               "cardIssuingCountry" : {
                  "description" : "Card issuing country.",
                  "type" : "string"
               },
               "cardIssuingCurrency" : {
                  "description" : "Card issuing currency.",
                  "type" : "string"
               },
               "cardPaymentMethod" : {
                  "description" : "Card payment method.",
                  "type" : "string"
               },
               "cardSchemeEnhancedDataLevel" : {
                  "description" : "Card scheme enhanced data level.",
                  "type" : "string"
               },
               "cardSummary" : {
                  "description" : "Card summary",
                  "type" : "string"
               },
               "cavv" : {
                  "description" : "Secure Cardholder Authentication Verification Value.",
                  "type" : "string"
               },
               "cavvAlgorithm" : {
                  "description" : "CAVV algorithm.",
                  "type" : "string"
               },
               "challengeCancel" : {
                  "description" : "Information about the 3DS challenge being canceled.",
                  "type" : "string"
               },
               "checkoutSessionId" : {
                  "description" : "ID of the Checkout Session.",
                  "type" : "string"
               },
               "cvcResult" : {
                  "description" : "Card Verification Code result.",
                  "type" : "string"
               },
               "cvcResultRaw" : {
                  "description" : "Card Verification Code result raw.",
                  "type" : "string"
               },
               "deliveryAddress.city" : {
                  "description" : "Delivery address: city.",
                  "type" : "string"
               },
               "deliveryAddress.country" : {
                  "description" : "Delivery address: country.",
                  "type" : "string"
               },
               "deliveryAddress.houseNumberOrName" : {
                  "description" : "Delivery address: house number or name.",
                  "type" : "string"
               },
               "deliveryAddress.postalCode" : {
                  "description" : "Delivery address: postal code.",
                  "type" : "string"
               },
               "deliveryAddress.stateOrProvince" : {
                  "description" : "Delivery address: state or province.",
                  "type" : "string"
               },
               "deliveryAddress.street" : {
                  "description" : "Delivery address: street.",
                  "type" : "string"
               },
               "deviceType" : {
                  "description" : "Type of device the request was made from.",
                  "type" : "string"
               },
               "directdebit_GB.dateOfSignature" : {
                  "description" : "Direct debit GB: date of signature.",
                  "type" : "string"
               },
               "directdebit_GB.mandateId" : {
                  "description" : "Direct debit GB: mandate ID.",
                  "type" : "string"
               },
               "directdebit_GB.sequenceType" : {
                  "description" : "Direct debit GB: sequence type.",
                  "type" : "string"
               },
               "directdebit_GB.serviceUserName" : {
                  "description" : "Direct debit GB: service user name.",
                  "type" : "string"
               },
               "directdebit_GB.serviceUserNumber" : {
                  "description" : "Direct debit GB: service user number.",
                  "type" : "string"
               },
               "eci" : {
                  "description" : "3DS: Electronic Commerce Indicator.",
                  "type" : "string"
               },
               "expiryDate" : {
                  "description" : "Expiry date of the card.",
                  "type" : "string"
               },
               "extraCostsCurrency" : {
                  "description" : "Additional cost used in [BIN or card verification](https://docs.adyen.com/payment-methods/cards/bin-data-and-card-verification).",
                  "type" : "string"
               },
               "extraCostsValue" : {
                  "description" : "Related additional cost value.",
                  "type" : "string"
               },
               "extraCostsValueGratuity" : {
                  "description" : "Gratuity related additional cost value.",
                  "type" : "string"
               },
               "extraCostsValueSurcharge" : {
                  "description" : "Surcharge related additional cost value.",
                  "type" : "string"
               },
               "fraudCheck-<check ID>-<name>" : {
                  "description" : "Information on the fraud check in a dynamic format.",
                  "type" : "string"
               },
               "fraudManualReview" : {
                  "description" : "Indicates if the risk check was done manually.",
                  "type" : "string"
               },
               "fraudOffset" : {
                  "description" : "The fraud offset.",
                  "type" : "string"
               },
               "fraudResultType" : {
                  "description" : "Result type of the fraud check.",
                  "type" : "string"
               },
               "fundingSource" : {
                  "description" : "Funding source.",
                  "type" : "string"
               },
               "grossCurrency" : {
                  "description" : "Chargeback gross currency.",
                  "type" : "string"
               },
               "grossValue" : {
                  "description" : "Chargeback gross value.",
                  "type" : "string"
               },
               "iban" : {
                  "description" : "International Bank Account Number.",
                  "type" : "string"
               },
               "installments.value" : {
                  "description" : "The number of installments that the payment amount should be charged with.\n\nExample: 5\n> Only relevant for card payments in countries that support installments.",
                  "type" : "string"
               },
               "interactionCounter" : {
                  "description" : "3DS interaction counter.",
                  "type" : "string"
               },
               "issuerComments.cardholderName" : {
                  "description" : "Card holder name.",
                  "type" : "string"
               },
               "issuerCountry" : {
                  "description" : "Country of the card issuer.",
                  "type" : "string"
               },
               "latestCard.bin" : {
                  "description" : "Recurring: Latest card BIN.",
                  "type" : "string"
               },
               "latestCard.expiryDate" : {
                  "description" : "Recurring: Latest card expiry date.",
                  "type" : "string"
               },
               "latestCard.summary" : {
                  "description" : "Recurring: Latest card summary.",
                  "type" : "string"
               },
               "liabilityShift" : {
                  "description" : "Risk liability shift.",
                  "type" : "string"
               },
               "metadata" : {
                  "additionalProperties" : {
                     "type" : "string"
                  },
                  "description" : "A set of key-value pairs provided in the request, prefixed with 'metadata.'. For example, 'metadata.myField: myValue'",
                  "type" : "object"
               },
               "networkToken.available" : {
                  "description" : "Recurring related.",
                  "type" : "string"
               },
               "networkToken.bin" : {
                  "description" : "Recurring related.",
                  "type" : "string"
               },
               "networkToken.tokenSummary" : {
                  "description" : "Recurring related.",
                  "type" : "string"
               },
               "nfc.expire" : {
                  "description" : "NFC related.",
                  "type" : "string"
               },
               "nfc.issue" : {
                  "description" : "NFC related.",
                  "type" : "string"
               },
               "nfc.pin.provided" : {
                  "description" : "NFC related.",
                  "type" : "string"
               },
               "nfc.uid" : {
                  "description" : "NFC related.",
                  "type" : "string"
               },
               "opi.transToken" : {
                  "description" : "Trans token related to Oracle Opera.",
                  "type" : "string"
               },
               "ownerCity" : {
                  "description" : "Owner city.",
                  "type" : "string"
               },
               "ownerName" : {
                  "description" : "Owner name.",
                  "type" : "string"
               },
               "payULatamTrazabilityCode" : {
                  "description" : "Related to PayU in LATAM.",
                  "type" : "string"
               },
               "paymentLinkId" : {
                  "description" : "ID of the Checkout payment link.",
                  "type" : "string"
               },
               "realtimeAccountUpdaterStatus" : {
                  "description" : "Real time Account Update status.",
                  "type" : "string"
               },
               "recurring.contractTypes" : {
                  "description" : "Recurring contract types.",
                  "type" : "string"
               },
               "recurring.firstPspReference" : {
                  "description" : "Recurring first PSP reference.",
                  "type" : "string"
               },
               "recurring.recurringDetailReference" : {
                  "description" : "recurring detail reference.",
                  "type" : "string"
               },
               "referred" : {
                  "description" : "If the payment is referred, this field is set to true.\n\nThis field is unavailable if the payment is referred and is usually not returned with ecommerce transactions.\n\nExample: true",
                  "type" : "string"
               },
               "refusalReasonRaw" : {
                  "description" : "Raw refusal reason received from the acquirer, where available.\n\nExample: AUTHORISED",
                  "type" : "string"
               },
               "retry.rescueScheduled" : {
                  "description" : "Indicates if an auto rescue for a pyment is scheduled.",
                  "type" : "string"
               },
               "riskProfile" : {
                  "description" : "Related to Risk.",
                  "type" : "string"
               },
               "riskProfileReference" : {
                  "description" : "Related to Risk.",
                  "type" : "string"
               },
               "shopperCountry" : {
                  "description" : "Country of the shopper.",
                  "type" : "string"
               },
               "shopperIP" : {
                  "description" : "IP of the shopper.",
                  "type" : "string"
               },
               "shopperInteraction" : {
                  "description" : "The shopper interaction type of the payment request.\n\nExample: Ecommerce",
                  "type" : "string"
               },
               "shopperLocale" : {
                  "description" : "The locale of the shopper.",
                  "type" : "string"
               },
               "shopperSocialSecurityNumber" : {
                  "description" : "The social security number of the shopper.",
                  "type" : "string"
               },
               "shopperStatement" : {
                  "description" : "The text to be shown on the shopper's bank statement.",
                  "type" : "string"
               },
               "shopperTelephone" : {
                  "description" : "The telephone number of the shopper.",
                  "type" : "string"
               },
               "store" : {
                  "description" : "Identifier of the store processing the transaction.",
                  "type" : "string"
               },
               "tenderReference" : {
                  "description" : "Tender reference. For point-of-sale integrations only.",
                  "type" : "string"
               },
               "terminalId" : {
                  "description" : "Terminal ID. For point-of-sale integrations only.",
                  "type" : "string"
               },
               "threeDAuthenticated" : {
                  "description" : "A Boolean value indicating whether 3DS authentication was completed on this payment.\n\nExample: true",
                  "type" : "string"
               },
               "threeDAuthenticatedResponse" : {
                  "description" : "The raw 3DS authentication result from the card issuer.\n\nExample: N",
                  "type" : "string"
               },
               "threeDOffered" : {
                  "description" : "A Boolean value indicating whether 3DS was offered for this payment.\n\nExample: true",
                  "type" : "string"
               },
               "threeDOfferedResponse" : {
                  "description" : "The raw enrollment result from the 3DS directory services of the card schemes.\n\nExample: Y",
                  "type" : "string"
               },
               "threeDSVersion" : {
                  "description" : "The 3D Secure 2 version.",
                  "type" : "string"
               },
               "tokenTxVariant" : {
                  "description" : "Payment method variant of the token/wallet payment method.",
                  "type" : "string"
               },
               "totalFraudScore" : {
                  "description" : "Total fraud score from risk.",
                  "type" : "string"
               },
               "untokenisedCardSummary" : {
                  "description" : "Card summary without tokenization.",
                  "type" : "string"
               },
               "xid" : {
                  "description" : "The 3DS transaction ID of the 3DS session sent in notifications. The value is Base64-encoded and is returned for transactions with directoryResponse 'N' or 'Y'. If you want to submit the xid in your 3D Secure 1 request, use the `mpiData.xid`, field.\n\nExample: ODgxNDc2MDg2MDExODk5MAAAAAA=",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "NotificationRequest" : {
            "properties" : {
               "live" : {
                  "description" : "Informs about the origin of the notification. The value is **true** when originating from the live environment, **false** for the test environment.",
                  "type" : "string"
               },
               "notificationItems" : {
                  "description" : "A container object for the details included in the notification.",
                  "items" : {
                     "$ref" : "#/components/schemas/NotificationRequestItemWrapper"
                  },
                  "type" : "array"
               }
            },
            "type" : "object"
         },
         "NotificationRequestItem" : {
            "properties" : {
               "additionalData" : {
                  "description" : "A generic container for extra fields.",
                  "$ref" : "#/components/schemas/NotificationAdditionalData"
               },
               "amount" : {
                  "description" : "The payment amount. For HTTP POST notifications, currency and value are returned as URL parameters.",
                  "$ref" : "#/components/schemas/Amount"
               },
               "eventCode" : {
                  "description" : "The type of event the notification item is for.",
                  "type" : "string"
               },
               "eventDate" : {
                  "description" : "The time when the event was generated. Format: ISO 8601; yyyy-MM-DDThh:mm:ssTZD",
                  "example" : "2021-07-17T13:42:40+01:00",
                  "format" : "date-time",
                  "type" : "string"
               },
               "merchantAccountCode" : {
                  "description" : "The merchant account identifier used in the transaction the notification item is for.",
                  "type" : "string"
               },
               "merchantReference" : {
                  "description" : "Your reference to uniquely identify the payment.",
                  "type" : "string"
               },
               "paymentMethod" : {
                  "description" : "The payment method used in the transaction.",
                  "example" : "visa, mc, iDeal",
                  "type" : "string"
               },
               "pspReference" : {
                  "description" : "Adyen's 16-character unique reference associated with the transaction or request. This value is globally unique. Use it when communicating with us about this request.",
                  "type" : "string"
               },
               "reason" : {
                  "description" : "If `success` = `false`, then this includes a short message with an explanation for the refusal.",
                  "type" : "string"
               },
               "success" : {
                  "description" : "Informs about the outcome of the event (`eventCode`) the notification is for. \nIf `true`: the event was executed successfully. \nIf `false`: the event was not executed successfully.",
                  "type" : "string"
               }
            },
            "required" : [
               "merchantReference",
               "merchantAccountCode",
               "eventDate",
               "eventCode",
               "amount",
               "paymentMethod"
            ],
            "type" : "object"
         },
         "NotificationRequestItemWrapper" : {
            "properties" : {
               "NotificationRequestItem" : {
                  "$ref" : "#/components/schemas/NotificationRequestItem"
               }
            }
         },
         "NotificationResponse" : {
            "properties" : {
               "notificationResponse" : {
                  "description" : "Set this parameter to **[accepted]** to acknowledge that you received a notification from Adyen.",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "PaidoutReversedNotificationRequest" : {
            "properties" : {
               "live" : {
                  "description" : "Informs about the origin of the notification. The value is **true** when originating from the live environment, **false** for the test environment.",
                  "type" : "string"
               },
               "notificationItems" : {
                  "description" : "A container object for the details included in the notification.",
                  "items" : {
                     "$ref" : "#/components/schemas/PaidoutReversedNotificationRequestItemWrapper"
                  },
                  "type" : "array"
               }
            },
            "type" : "object"
         },
         "PaidoutReversedNotificationRequestItem" : {
            "properties" : {
               "additionalData" : {
                  "description" : "A generic container for extra fields.",
                  "$ref" : "#/components/schemas/NotificationAdditionalData"
               },
               "amount" : {
                  "description" : "The payment amount. For HTTP POST notifications, currency and value are returned as URL parameters.",
                  "$ref" : "#/components/schemas/Amount"
               },
               "eventCode" : {
                  "description" : "The type of event the notification item is for.",
                  "type" : "string"
               },
               "eventDate" : {
                  "description" : "The time when the event was generated. Format: ISO 8601; yyyy-MM-DDThh:mm:ssTZD",
                  "example" : "2021-07-17T13:42:40+01:00",
                  "format" : "date-time",
                  "type" : "string"
               },
               "merchantAccountCode" : {
                  "description" : "The merchant account identifier used in the transaction the notification item is for.",
                  "type" : "string"
               },
               "merchantReference" : {
                  "description" : "Your reference to uniquely identify the payment.",
                  "type" : "string"
               },
               "paymentMethod" : {
                  "description" : "The payment method used in the transaction.",
                  "example" : "visa, mc, iDeal",
                  "type" : "string"
               },
               "pspReference" : {
                  "description" : "The PSP reference for the Capture's PSP reference.",
                  "type" : "string"
               },
               "reason" : {
                  "description" : "Contains the bank statement description if present, else it contains `PaidOutReversed`.",
                  "type" : "string"
               },
               "success" : {
                  "description" : "Informs about the outcome of the event (`eventCode`) the notification is for. \nIf `true`: the event was executed successfully. \nIf `false`: the event was not executed successfully.",
                  "type" : "string"
               }
            },
            "required" : [
               "merchantReference",
               "merchantAccountCode",
               "eventDate",
               "eventCode",
               "amount",
               "paymentMethod"
            ],
            "type" : "object"
         },
         "PaidoutReversedNotificationRequestItemWrapper" : {
            "properties" : {
               "PaidoutReversedNotificationRequestItem" : {
                  "$ref" : "#/components/schemas/PaidoutReversedNotificationRequestItem"
               }
            }
         },
         "RecurringContractNotificationAdditionalData" : {
            "properties" : {
               "PaymentAccountReference" : {
                  "description" : "Reference of the payment account.",
                  "type" : "string"
               },
               "acquirerAccountCode" : {
                  "description" : "The acquirer account code.",
                  "type" : "string"
               },
               "acquirerCode" : {
                  "description" : "The acquirer code.",
                  "type" : "string"
               },
               "acquirerReference" : {
                  "description" : "The acquirer reference.",
                  "type" : "string"
               },
               "acsRenderingType.acsInterface" : {
                  "description" : "ACS interface. Related to 3DS.",
                  "type" : "string"
               },
               "acsRenderingType.acsUiTemplate" : {
                  "description" : "ACS UI template.",
                  "type" : "string"
               },
               "alias" : {
                  "description" : "Alias for this card.",
                  "type" : "string"
               },
               "aliasType" : {
                  "description" : "Alias type.",
                  "type" : "string"
               },
               "arn" : {
                  "description" : "Acquirer Reference Number of the dispute.",
                  "type" : "string"
               },
               "authCode" : {
                  "description" : "Authcode of the scheme.",
                  "type" : "string"
               },
               "authenticationType" : {
                  "description" : "3DS authentication type",
                  "type" : "string"
               },
               "authorisationMid" : {
                  "description" : "Authorisation MID of the acquirer.",
                  "type" : "string"
               },
               "authorisedAmountCurrency" : {
                  "description" : "The currency authorised for a dynamic zero auth request.",
                  "type" : "string"
               },
               "authorisedAmountValue" : {
                  "description" : "The amount authorised for a dynamic zero auth request.",
                  "type" : "string"
               },
               "avsResult" : {
                  "description" : "Address Verification Service result.",
                  "type" : "string"
               },
               "avsResultRaw" : {
                  "description" : "Address Verification Service result raw.",
                  "type" : "string"
               },
               "bankAccountNumber" : {
                  "description" : "The bank account number.",
                  "type" : "string"
               },
               "bankLocation" : {
                  "description" : "The bank location.",
                  "type" : "string"
               },
               "bankLocationId" : {
                  "description" : "The bank location ID.",
                  "type" : "string"
               },
               "bankName" : {
                  "description" : "The bank name.",
                  "type" : "string"
               },
               "bankVerificationResult" : {
                  "description" : "The bank verificaiton result.",
                  "type" : "string"
               },
               "bankVerificationResultRaw" : {
                  "description" : "The bank verification result raw.",
                  "type" : "string"
               },
               "bic" : {
                  "description" : "Business Identifier Code.",
                  "type" : "string"
               },
               "billingAddress.city" : {
                  "description" : "BillingAddress: county.",
                  "type" : "string"
               },
               "billingAddress.houseNumberOrName" : {
                  "description" : "BillingAddress: house number or name.",
                  "type" : "string"
               },
               "billingAddress.postalCode" : {
                  "description" : "BillingAddress: postal code.",
                  "type" : "string"
               },
               "billingAddress.stateOrProvince" : {
                  "description" : "BillingAddress: state or province",
                  "type" : "string"
               },
               "billingAddress.street" : {
                  "description" : "BillingAddress: street",
                  "type" : "string"
               },
               "browserCode" : {
                  "description" : "Browser code.",
                  "type" : "string"
               },
               "captureDelayHours" : {
                  "description" : "The amount of delay after authorisation.",
                  "type" : "string"
               },
               "captureMerchantReference" : {
                  "description" : "The merchant reference of the capture.",
                  "type" : "string"
               },
               "capturePspReference" : {
                  "description" : "The PSP reference of the capture.",
                  "type" : "string"
               },
               "cardBin" : {
                  "description" : "Card Bank Identification number.",
                  "type" : "string"
               },
               "cardIssuingBank" : {
                  "description" : "Card issuing bank.",
                  "type" : "string"
               },
               "cardIssuingCountry" : {
                  "description" : "Card issuing country.",
                  "type" : "string"
               },
               "cardIssuingCurrency" : {
                  "description" : "Card issuing currency.",
                  "type" : "string"
               },
               "cardPaymentMethod" : {
                  "description" : "Card payment method.",
                  "type" : "string"
               },
               "cardSchemeEnhancedDataLevel" : {
                  "description" : "Card scheme enhanced data level.",
                  "type" : "string"
               },
               "cardSummary" : {
                  "description" : "Card summary",
                  "type" : "string"
               },
               "cavv" : {
                  "description" : "Secure Cardholder Authentication Verification Value.",
                  "type" : "string"
               },
               "cavvAlgorithm" : {
                  "description" : "CAVV algorithm.",
                  "type" : "string"
               },
               "challengeCancel" : {
                  "description" : "Information about the 3DS challenge being canceled.",
                  "type" : "string"
               },
               "checkoutSessionId" : {
                  "description" : "ID of the Checkout Session.",
                  "type" : "string"
               },
               "cvcResult" : {
                  "description" : "Card Verification Code result.",
                  "type" : "string"
               },
               "cvcResultRaw" : {
                  "description" : "Card Verification Code result raw.",
                  "type" : "string"
               },
               "deliveryAddress.city" : {
                  "description" : "Delivery address: city.",
                  "type" : "string"
               },
               "deliveryAddress.country" : {
                  "description" : "Delivery address: country.",
                  "type" : "string"
               },
               "deliveryAddress.houseNumberOrName" : {
                  "description" : "Delivery address: house number or name.",
                  "type" : "string"
               },
               "deliveryAddress.postalCode" : {
                  "description" : "Delivery address: postal code.",
                  "type" : "string"
               },
               "deliveryAddress.stateOrProvince" : {
                  "description" : "Delivery address: state or province.",
                  "type" : "string"
               },
               "deliveryAddress.street" : {
                  "description" : "Delivery address: street.",
                  "type" : "string"
               },
               "deviceType" : {
                  "description" : "Type of device the request was made from.",
                  "type" : "string"
               },
               "directdebit_GB.dateOfSignature" : {
                  "description" : "Direct debit GB: date of signature.",
                  "type" : "string"
               },
               "directdebit_GB.mandateId" : {
                  "description" : "Direct debit GB: mandate ID.",
                  "type" : "string"
               },
               "directdebit_GB.sequenceType" : {
                  "description" : "Direct debit GB: sequence type.",
                  "type" : "string"
               },
               "directdebit_GB.serviceUserName" : {
                  "description" : "Direct debit GB: service user name.",
                  "type" : "string"
               },
               "directdebit_GB.serviceUserNumber" : {
                  "description" : "Direct debit GB: service user number.",
                  "type" : "string"
               },
               "eci" : {
                  "description" : "3DS: Electronic Commerce Indicator.",
                  "type" : "string"
               },
               "expiryDate" : {
                  "description" : "Expiry date of the card.",
                  "type" : "string"
               },
               "extraCostsCurrency" : {
                  "description" : "Additional cost used in [BIN or card verification](https://docs.adyen.com/payment-methods/cards/bin-data-and-card-verification).",
                  "type" : "string"
               },
               "extraCostsValue" : {
                  "description" : "Related additional cost value.",
                  "type" : "string"
               },
               "extraCostsValueGratuity" : {
                  "description" : "Gratuity related additional cost value.",
                  "type" : "string"
               },
               "extraCostsValueSurcharge" : {
                  "description" : "Surcharge related additional cost value.",
                  "type" : "string"
               },
               "fraudCheck-<check ID>-<name>" : {
                  "description" : "Information on the fraud check in a dynamic format.",
                  "type" : "string"
               },
               "fraudManualReview" : {
                  "description" : "Indicates if the risk check was done manually.",
                  "type" : "string"
               },
               "fraudOffset" : {
                  "description" : "The fraud offset.",
                  "type" : "string"
               },
               "fraudResultType" : {
                  "description" : "Result type of the fraud check.",
                  "type" : "string"
               },
               "fundingSource" : {
                  "description" : "Funding source.",
                  "type" : "string"
               },
               "grossCurrency" : {
                  "description" : "Chargeback gross currency.",
                  "type" : "string"
               },
               "grossValue" : {
                  "description" : "Chargeback gross value.",
                  "type" : "string"
               },
               "iban" : {
                  "description" : "International Bank Account Number.",
                  "type" : "string"
               },
               "installments.value" : {
                  "description" : "The number of installments that the payment amount should be charged with.\n\nExample: 5\n> Only relevant for card payments in countries that support installments.",
                  "type" : "string"
               },
               "interactionCounter" : {
                  "description" : "3DS interaction counter.",
                  "type" : "string"
               },
               "issuerComments.cardholderName" : {
                  "description" : "Card holder name.",
                  "type" : "string"
               },
               "issuerCountry" : {
                  "description" : "Country of the card issuer.",
                  "type" : "string"
               },
               "latestCard.bin" : {
                  "description" : "Recurring: Latest card BIN.",
                  "type" : "string"
               },
               "latestCard.expiryDate" : {
                  "description" : "Recurring: Latest card expiry date.",
                  "type" : "string"
               },
               "latestCard.summary" : {
                  "description" : "Recurring: Latest card summary.",
                  "type" : "string"
               },
               "liabilityShift" : {
                  "description" : "Risk liability shift.",
                  "type" : "string"
               },
               "metadata" : {
                  "additionalProperties" : {
                     "type" : "string"
                  },
                  "description" : "A set of key-value pairs provided in the request, prefixed with 'metadata.'. For example, 'metadata.myField: myValue'",
                  "type" : "object"
               },
               "networkToken.available" : {
                  "description" : "Recurring related.",
                  "type" : "string"
               },
               "networkToken.bin" : {
                  "description" : "Recurring related.",
                  "type" : "string"
               },
               "networkToken.tokenSummary" : {
                  "description" : "Recurring related.",
                  "type" : "string"
               },
               "nfc.expire" : {
                  "description" : "NFC related.",
                  "type" : "string"
               },
               "nfc.issue" : {
                  "description" : "NFC related.",
                  "type" : "string"
               },
               "nfc.pin.provided" : {
                  "description" : "NFC related.",
                  "type" : "string"
               },
               "nfc.uid" : {
                  "description" : "NFC related.",
                  "type" : "string"
               },
               "opi.transToken" : {
                  "description" : "Trans token related to Oracle Opera.",
                  "type" : "string"
               },
               "ownerCity" : {
                  "description" : "Owner city.",
                  "type" : "string"
               },
               "ownerName" : {
                  "description" : "Owner name.",
                  "type" : "string"
               },
               "payULatamTrazabilityCode" : {
                  "description" : "Related to PayU in LATAM.",
                  "type" : "string"
               },
               "paymentLinkId" : {
                  "description" : "ID of the Checkout payment link.",
                  "type" : "string"
               },
               "realtimeAccountUpdaterStatus" : {
                  "description" : "Real time Account Update status.",
                  "type" : "string"
               },
               "recurring.contractTypes" : {
                  "description" : "Recurring contract types.",
                  "type" : "string"
               },
               "recurring.firstPspReference" : {
                  "description" : "Recurring first PSP reference.",
                  "type" : "string"
               },
               "recurring.recurringDetailReference" : {
                  "description" : "recurring detail reference.",
                  "type" : "string"
               },
               "referred" : {
                  "description" : "If the payment is referred, this field is set to true.\n\nThis field is unavailable if the payment is referred and is usually not returned with ecommerce transactions.\n\nExample: true",
                  "type" : "string"
               },
               "refusalReasonRaw" : {
                  "description" : "Raw refusal reason received from the acquirer, where available.\n\nExample: AUTHORISED",
                  "type" : "string"
               },
               "retry.rescueScheduled" : {
                  "description" : "Indicates if an auto rescue for a pyment is scheduled.",
                  "type" : "string"
               },
               "riskProfile" : {
                  "description" : "Related to Risk.",
                  "type" : "string"
               },
               "riskProfileReference" : {
                  "description" : "Related to Risk.",
                  "type" : "string"
               },
               "shopperCountry" : {
                  "description" : "Country of the shopper.",
                  "type" : "string"
               },
               "shopperEmail" : {
                  "description" : "The shopper's email address.",
                  "type" : "string"
               },
               "shopperIP" : {
                  "description" : "IP of the shopper.",
                  "type" : "string"
               },
               "shopperInteraction" : {
                  "description" : "The shopper interaction type of the payment request.\n\nExample: Ecommerce",
                  "type" : "string"
               },
               "shopperLocale" : {
                  "description" : "The locale of the shopper.",
                  "type" : "string"
               },
               "shopperReference" : {
                  "description" : "The ID that uniquely identifies the shopper. The `shopperReference` is the same as the `shopperReference` used in the initial payment.",
                  "type" : "string"
               },
               "shopperSocialSecurityNumber" : {
                  "description" : "The social security number of the shopper.",
                  "type" : "string"
               },
               "shopperStatement" : {
                  "description" : "The text to be shown on the shopper's bank statement.",
                  "type" : "string"
               },
               "shopperTelephone" : {
                  "description" : "The telephone number of the shopper.",
                  "type" : "string"
               },
               "store" : {
                  "description" : "Identifier of the store processing the transaction.",
                  "type" : "string"
               },
               "tenderReference" : {
                  "description" : "Tender reference. For point-of-sale integrations only.",
                  "type" : "string"
               },
               "terminalId" : {
                  "description" : "Terminal ID. For point-of-sale integrations only.",
                  "type" : "string"
               },
               "threeDAuthenticated" : {
                  "description" : "A Boolean value indicating whether 3DS authentication was completed on this payment.\n\nExample: true",
                  "type" : "string"
               },
               "threeDAuthenticatedResponse" : {
                  "description" : "The raw 3DS authentication result from the card issuer.\n\nExample: N",
                  "type" : "string"
               },
               "threeDOffered" : {
                  "description" : "A Boolean value indicating whether 3DS was offered for this payment.\n\nExample: true",
                  "type" : "string"
               },
               "threeDOfferedResponse" : {
                  "description" : "The raw enrollment result from the 3DS directory services of the card schemes.\n\nExample: Y",
                  "type" : "string"
               },
               "threeDSVersion" : {
                  "description" : "The 3D Secure 2 version.",
                  "type" : "string"
               },
               "tokenTxVariant" : {
                  "description" : "Payment method variant of the token/wallet payment method.",
                  "type" : "string"
               },
               "totalFraudScore" : {
                  "description" : "Total fraud score from risk.",
                  "type" : "string"
               },
               "untokenisedCardSummary" : {
                  "description" : "Card summary without tokenization.",
                  "type" : "string"
               },
               "xid" : {
                  "description" : "The 3DS transaction ID of the 3DS session sent in notifications. The value is Base64-encoded and is returned for transactions with directoryResponse 'N' or 'Y'. If you want to submit the xid in your 3D Secure 1 request, use the `mpiData.xid`, field.\n\nExample: ODgxNDc2MDg2MDExODk5MAAAAAA=",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "RecurringContractNotificationRequest" : {
            "properties" : {
               "live" : {
                  "description" : "Informs about the origin of the notification. The value is **true** when originating from the live environment, **false** for the test environment.",
                  "type" : "string"
               },
               "notificationItems" : {
                  "description" : "A container object for the details included in the notification.",
                  "items" : {
                     "$ref" : "#/components/schemas/RecurringContractNotificationRequestItemWrapper"
                  },
                  "type" : "array"
               }
            },
            "type" : "object"
         },
         "RecurringContractNotificationRequestItem" : {
            "properties" : {
               "additionalData" : {
                  "description" : "This object is a generic container that can hold extra fields.",
                  "$ref" : "#/components/schemas/RecurringContractNotificationAdditionalData"
               },
               "amount" : {
                  "description" : "The payment amount. For HTTP POST notifications, currency and value are returned as URL parameters.",
                  "$ref" : "#/components/schemas/Amount"
               },
               "eventCode" : {
                  "description" : "The type of event the notification item is for.",
                  "type" : "string"
               },
               "eventDate" : {
                  "description" : "The time when the event was generated. Format: ISO 8601; yyyy-MM-DDThh:mm:ssTZD",
                  "example" : "2021-07-17T13:42:40+01:00",
                  "format" : "date-time",
                  "type" : "string"
               },
               "merchantAccountCode" : {
                  "description" : "The merchant account identifier used in the transaction the notification item is for.",
                  "type" : "string"
               },
               "merchantReference" : {
                  "description" : "Your reference to uniquely identify the payment.",
                  "type" : "string"
               },
               "originalPsp" : {
                  "description" : "The `pspReference` of the initial payment.",
                  "type" : "string"
               },
               "paymentMethod" : {
                  "description" : "The payment method used in the transaction.",
                  "example" : "visa, mc, iDeal",
                  "type" : "string"
               },
               "pspReference" : {
                  "description" : "The token for the shopper's saved payment details that you need to make recurring payments.",
                  "type" : "string"
               },
               "reason" : {
                  "description" : "If `success` = `false`, then this includes a short message with an explanation for the refusal.",
                  "type" : "string"
               },
               "success" : {
                  "description" : "Informs about the outcome of the event (`eventCode`) the notification is for. \nIf `true`: the event was executed successfully. \nIf `false`: the event was not executed successfully.",
                  "type" : "string"
               }
            },
            "required" : [
               "merchantReference",
               "merchantAccountCode",
               "eventDate",
               "eventCode",
               "amount",
               "paymentMethod",
               "originalPsp",
               "pspReference"
            ],
            "type" : "object"
         },
         "RecurringContractNotificationRequestItemWrapper" : {
            "properties" : {
               "RecurringContractNotificationRequestItem" : {
                  "$ref" : "#/components/schemas/RecurringContractNotificationRequestItem"
               }
            }
         },
         "ReportAvailableNotificationRequest" : {
            "properties" : {
               "live" : {
                  "description" : "Informs about the origin of the notification. The value is **true** when originating from the live environment, **false** for the test environment.",
                  "type" : "string"
               },
               "notificationItems" : {
                  "description" : "A container object for the details included in the notification.",
                  "items" : {
                     "$ref" : "#/components/schemas/ReportAvailableNotificationRequestItemWrapper"
                  },
                  "type" : "array"
               }
            },
            "type" : "object"
         },
         "ReportAvailableNotificationRequestItem" : {
            "properties" : {
               "additionalData" : {
                  "description" : "A generic container for extra fields.",
                  "$ref" : "#/components/schemas/NotificationAdditionalData"
               },
               "amount" : {
                  "description" : "The payment amount. For HTTP POST notifications, currency and value are returned as URL parameters.",
                  "$ref" : "#/components/schemas/Amount"
               },
               "eventCode" : {
                  "description" : "The type of event the notification item is for.",
                  "type" : "string"
               },
               "eventDate" : {
                  "description" : "The time when the event was generated. Format: ISO 8601; yyyy-MM-DDThh:mm:ssTZD",
                  "example" : "2021-07-17T13:42:40+01:00",
                  "format" : "date-time",
                  "type" : "string"
               },
               "merchantAccountCode" : {
                  "description" : "The merchant account identifier used in the transaction the notification item is for.",
                  "type" : "string"
               },
               "merchantReference" : {
                  "description" : "Your reference to uniquely identify the payment.",
                  "type" : "string"
               },
               "paymentMethod" : {
                  "description" : "The payment method used in the transaction.",
                  "example" : "visa, mc, iDeal",
                  "type" : "string"
               },
               "pspReference" : {
                  "description" : "Contains the file name of the report.",
                  "type" : "string"
               },
               "reason" : {
                  "description" : "Contains the download URL where you can obtain a copy of the report.",
                  "type" : "string"
               },
               "success" : {
                  "description" : "Always `true`.",
                  "type" : "string"
               }
            },
            "required" : [
               "merchantReference",
               "merchantAccountCode",
               "eventDate",
               "eventCode",
               "amount",
               "paymentMethod",
               "reason",
               "success"
            ],
            "type" : "object"
         },
         "ReportAvailableNotificationRequestItemWrapper" : {
            "properties" : {
               "ReportAvailableNotificationRequestItem" : {
                  "$ref" : "#/components/schemas/ReportAvailableNotificationRequestItem"
               }
            }
         }
      },
      "securitySchemes" : {
         "ApiKeyAuth" : {
            "in" : "header",
            "name" : "X-API-Key",
            "type" : "apiKey"
         },
         "BasicAuth" : {
            "scheme" : "basic",
            "type" : "http"
         }
      },
      "examples" : {
         "WebhookAck" : {
            "summary" : "Acknowledge Webhook",
            "value" : "[accepted]"
         },
         "post-AUTHORISATION-authorisation" : {
            "summary" : "AUTHORISATION example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "recurring.recurringDetailReference" : "9915692881181044",
                           "recurring.shopperReference" : "YOUR_SHOPPER_REFERENCE"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "AUTHORISATION",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "paymentMethod" : "ach",
                        "operations" : [
                           "CANCEL",
                           "CAPTURE",
                           "REFUND"
                        ],
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "null",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-AUTHORISATION_ADJUSTMENT-authorisation_adjustment" : {
            "summary" : "AUTHORISATION_ADJUSTMENT example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "AUTHORISATION_ADJUSTMENT",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "visa",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-AUTORESCUE-autorescue" : {
            "summary" : "AUTORESCUE example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "retry.rescueReference" : "8826173525728789",
                           "merchantOrderReference" : "8826173525728789",
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7..."
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "AUTORESCUE",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-CANCELLATION-cancellation" : {
            "summary" : "CANCELLATION example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "CANCELLATION",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "visa",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-CANCEL_AUTORESCUE-cancel_autorescue" : {
            "summary" : "CANCEL_AUTORESCUE example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7..."
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "CANCEL_AUTORESCUE",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "No AutoRescue process for retry.rescueReference 8826173525728789",
                        "success" : "false"
                     }
                  }
               ]
            }
         },
         "post-CANCEL_OR_REFUND-cancel_or_refund" : {
            "summary" : "CANCEL_OR_REFUND example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "modification.action" : "cancel"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "CANCEL_OR_REFUND",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "visa",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-CAPTURE-capture" : {
            "summary" : "CAPTURE example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "CAPTURE",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "visa",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-CAPTURE_FAILED-capture_failed" : {
            "summary" : "CAPTURE_FAILED example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "paymentMethodVariant" : "facilypay_3x",
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "shopperCountry" : "NL"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "CAPTURE_FAILED",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "facilypay_3x",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "Capture Failed",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-CHARGEBACK-chargeback" : {
            "summary" : "CHARGEBACK example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "captureMerchantReference" : "shopperReferenceTest",
                           "chargebackReasonCode" : " 4853",
                           "InvoiceCreditorAccount" : "Creditor.AdyenInvoiceService",
                           "grossCurrency" : "EUR",
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "defensePeriodEndsAt" : "2021-07-31T03:03:07+02:00",
                           "defendable" : "true",
                           "grossValue" : "2000",
                           "modificationMerchantReferences" : "shopperReferenceTest",
                           "chargebackSchemeCode" : "mc",
                           "capturePspReference" : "8636172945333378",
                           "paymentMethodVariant" : "mc",
                           "shopperReference" : "123456"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "CHARGEBACK",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "mc",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "Payment.TxId=300000000524534724 dispute",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-CHARGEBACK_REVERSED-chargeback_reversed" : {
            "summary" : "CHARGEBACK_REVERSED example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7..."
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "CHARGEBACK_REVERSED",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "paymentMethod" : "mc",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "Fraudulent Processing of Transactions",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-MANUAL_REVIEW_ACCEPT-manual_review_accept" : {
            "summary" : "MANUAL_REVIEW_ACCEPT example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "paymentMethodVariant" : "scheme"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "MANUAL_REVIEW_ACCEPT",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "expire",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-MANUAL_REVIEW_REJECT-manual_review_reject" : {
            "summary" : "MANUAL_REVIEW_REJECT example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "paymentMethodVariant" : "visa"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "MANUAL_REVIEW_REJECT",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "visa",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "expire",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-NOTIFICATION_OF_CHARGEBACK-notification_of_chargeback" : {
            "summary" : "NOTIFICATION_OF_CHARGEBACK example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "captureMerchantReference" : "shopperReferenceTest",
                           "chargebackReasonCode" : " 4853",
                           "grossCurrency" : "EUR",
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "defensePeriodEndsAt" : "2021-07-31T03:03:08+02:00",
                           "defendable" : "false",
                           "grossValue" : "2000",
                           "modificationMerchantReferences" : "YourModificationReference,shopperReferenceTest",
                           "chargebackSchemeCode" : "mc",
                           "capturePspReference" : "8536173024791891",
                           "autoDefended" : "true",
                           "paymentMethodVariant" : "mc"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "NOTIFICATION_OF_CHARGEBACK",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "mc",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "Payment.TxId=300000000524659113 dispute (automatically defended)",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-NOTIFICATION_OF_FRAUD-notification_of_fraud" : {
            "summary" : "NOTIFICATION_OF_FRAUD example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "nofReasonCode" : "6",
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "modificationMerchantReferences" : "shopperReferenceTest",
                           "nofSchemeCode" : "visa"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "NOTIFICATION_OF_FRAUD",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "visa",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "Fraudulent Use of Account Number",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-OFFER_CLOSED-offer_closed" : {
            "summary" : "OFFER_CLOSED example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "paymentMethodVariant" : "ideal"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "OFFER_CLOSED",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "paymentMethod" : "ideal",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-ORDER_CLOSED-order_closed" : {
            "summary" : "ORDER_CLOSED example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "order-1-pspReference" : "861617275047284E",
                           "order-1-paymentAmount" : "EUR 10.00",
                           "order-1-success" : "true",
                           "order-1-paymentMethod" : "ideal"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "ORDER_CLOSED",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "false"
                     }
                  }
               ]
            }
         },
         "post-ORDER_OPENED-order_opened" : {
            "summary" : "ORDER_OPENED example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "ORDER_OPENED",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-PAIDOUT_REVERSED-paidout_reversed" : {
            "summary" : "PAIDOUT_REVERSED example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "PAIDOUT_REVERSED",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-PAYOUT_DECLINE-payout_decline" : {
            "summary" : "PAYOUT_DECLINE example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "paymentMethodVariant" : "bankTransfer_IBAN"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "PAYOUT_DECLINE",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "bankTransfer_IBAN",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-PAYOUT_EXPIRE-payout_expire" : {
            "summary" : "PAYOUT_EXPIRE example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "PAYOUT_EXPIRE",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "bankTransfer_IBAN",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-PAYOUT_THIRDPARTY-payout_thirdparty" : {
            "summary" : "PAYOUT_THIRDPARTY example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "expiryDate" : "03/2030",
                           "paymentMethodVariant" : "visa",
                           "cardSummary" : "1111",
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7..."
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "PAYOUT_THIRDPARTY",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "paymentMethod" : "visa",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "Approved",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-POSTPONED_REFUND-postponed_refund" : {
            "summary" : "POSTPONED_REFUND example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7..."
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "POSTPONED_REFUND",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "directdebit_NL",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-PREARBITRATION_LOST-prearbitration_lost" : {
            "summary" : "PREARBITRATION_LOST example",
            "value" : {
               "live" : "true",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "metadata.type" : "web_pay",
                           "metadata.link_id" : "111111",
                           "arn" : "ACQUIRER_REFERENCE_NUMBER",
                           "metadata.company" : "abc"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "PREARBITRATION_LOST",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "paymentMethod" : "visa",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "Other Fraud-Card Absent Environment",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-PREARBITRATION_WON-prearbitration_won" : {
            "summary" : "PREARBITRATION_WON example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "PREARBITRATION_WON",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "paymentMethod" : "bankTransfer_IBAN",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-RECURRING_CONTRACT-recurring_contract" : {
            "summary" : "RECURRING_CONTRACT example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "shopperReference" : "YOUR_SHOPPER_REFERENCE"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "RECURRING_CONTRACT",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_PAYMENT_REFERENCE",
                        "originalReference" : "INITIAL_PAYMENT_PSP_REFERENCE",
                        "paymentMethod" : "ideal",
                        "pspReference" : "YOUR_RECURRING_DETAIL_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-REFUND-refund" : {
            "summary" : "REFUND example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "REFUND",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "visa",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "Transaction hasn't been captured, refund not possible",
                        "success" : "false"
                     }
                  }
               ]
            }
         },
         "post-REFUNDED_REVERSED-refunded_reversed" : {
            "summary" : "REFUNDED_REVERSED example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "REFUNDED_REVERSED",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "mc",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "test_AUTHORISATION_1",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-REFUND_FAILED-refund_failed" : {
            "summary" : "REFUND_FAILED example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "paymentMethodVariant" : "blik"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "REFUND_FAILED",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "blik",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "Refund Failed",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-REFUND_WITH_DATA-refund_with_data" : {
            "summary" : "REFUND_WITH_DATA example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "REFUND_WITH_DATA",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MODIFICATION_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "mc",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-REPORT_AVAILABLE-report_available" : {
            "summary" : "REPORT_AVAILABLE example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7..."
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "REPORT_AVAILABLE",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "URL_TO_DOWNLOAD_REPORT",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-REQUEST_FOR_INFORMATION-request_for_information" : {
            "summary" : "REQUEST_FOR_INFORMATION example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "modificationMerchantReferences" : "9123140123220028"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "REQUEST_FOR_INFORMATION",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "mc",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-SECOND_CHARGEBACK-second_chargeback" : {
            "summary" : "SECOND_CHARGEBACK example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "chargebackReasonCode" : "502",
                           "modificationMerchantReferences" : "shopperReferenceTest",
                           "chargebackSchemeCode" : "jcb"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "SECOND_CHARGEBACK",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "paymentMethod" : "jcb",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "502:Cardmember Dispute",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-TECHNICAL_CANCEL-technical_cancel" : {
            "summary" : "TECHNICAL_CANCEL example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "paymentMethodVariant" : "visa"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "TECHNICAL_CANCEL",
                        "eventDate" : "2018-07-18T22:35:14+02:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_ORIGINAL_REFERENCE",
                        "originalReference" : "8313547924770610",
                        "paymentMethod" : "visa",
                        "pspReference" : "8515208516304269",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-VOID_PENDING_REFUND-void_pending_refund" : {
            "summary" : "VOID_PENDING_REFUND example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "paymentMethodVariant" : "mc"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "VOID_PENDING_REFUND",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "mc",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         }
      }
   }
}