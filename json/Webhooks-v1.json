{
   "openapi" : "3.1.0",
   "info" : {
      "version" : "1",
      "x-publicVersion" : true,
      "title" : "Notification webhooks",
      "description" : "We use webhooks to send you notifications about payment status updates, newly available reports, and other events that you can subscribe to. For more information, refer to our [documentation](https://docs.adyen.com/development-resources/webhooks).",
      "termsOfService" : "https://www.adyen.com/legal/terms-and-conditions",
      "contact" : {
         "name" : "Adyen Developer Experience team",
         "url" : "https://www.adyen.help/hc/en-us/community/topics",
         "email" : "developer-experience@adyen.com"
      }
   },
   "x-groups" : [
      "standard",
      "additional configuration",
      "dispute",
      "payout"
   ],
   "x-staticResponse" : "response.json",
   "webhooks" : {
      "/AUTHORISATION" : {
         "post" : {
            "tags" : [
               "standard"
            ],
            "summary" : "Informs you of the outcome of payment request.",
            "description" : "Informs you of the outcome of payment request.",
            "operationId" : "post-AUTHORISATION",
            "x-groupName" : "standard",
            "x-sortIndex" : 1,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "authorisation" : {
                           "$ref" : "#/components/examples/post-AUTHORISATION-authorisation"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/AuthorisationNotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "authorisation" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/AUTHORISATION_ADJUSTMENT" : {
         "post" : {
            "tags" : [
               "standard"
            ],
            "summary" : "Informs you of the outcome of a request to adjust the authorised amount.",
            "description" : "Informs you of the outcome of a request to [adjust the authorised amount](https://docs.adyen.com/online-payments/adjust-authorisation) sent through the [/adjustAuthorisation](https://docs.adyen.com/api-explorer/#/Payment/latest/post/adjustAuthorisation) endpoint.",
            "operationId" : "post-AUTHORISATION_ADJUSTMENT",
            "x-groupName" : "standard",
            "x-sortIndex" : 1,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "authorisation_adjustment" : {
                           "$ref" : "#/components/examples/post-AUTHORISATION_ADJUSTMENT-authorisation_adjustment"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "authorisation_adjustment" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/AUTORESCUE" : {
         "post" : {
            "tags" : [
               "additional configuration"
            ],
            "summary" : "Informs you that an Auto Rescue process has ended.",
            "description" : "Informs you that an [Auto Rescue process](https://docs.adyen.com/online-payments/auto-rescue#rescue-process-ended) has ended.",
            "operationId" : "post-AUTORESCUE",
            "x-groupName" : "additional configuration",
            "x-sortIndex" : 4,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "autorescue" : {
                           "$ref" : "#/components/examples/post-AUTORESCUE-autorescue"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "autorescue" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/CANCELLATION" : {
         "post" : {
            "tags" : [
               "standard"
            ],
            "summary" : "Informs you of the outcome of a request to cancel a payment.",
            "description" : "Informs you of the outcome of a request to [cancel a payment](https://docs.adyen.com/online-payments/cancel).",
            "operationId" : "post-CANCELLATION",
            "x-groupName" : "standard",
            "x-sortIndex" : 1,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "cancellation" : {
                           "$ref" : "#/components/examples/post-CANCELLATION-cancellation"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "cancellation" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/CANCEL_AUTORESCUE" : {
         "post" : {
            "tags" : [
               "additional configuration"
            ],
            "summary" : "Informs you that an Auto Rescue cancel request has been processed.",
            "description" : "Informs you that an [Auto Rescue cancel request](https://docs.adyen.com/online-payments/auto-rescue#cancel-auto-rescue-process) has been processed.",
            "operationId" : "post-CANCEL_AUTORESCUE",
            "x-groupName" : "additional configuration",
            "x-sortIndex" : 4,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "cancel_autorescue" : {
                           "$ref" : "#/components/examples/post-CANCEL_AUTORESCUE-cancel_autorescue"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "cancel_autorescue" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/CANCEL_OR_REFUND" : {
         "post" : {
            "tags" : [
               "standard"
            ],
            "summary" : "Informs you of the outcome of a request to cancel or refund a payment.",
            "description" : "Informs you of the outcome of a request to [cancel or refund a payment](https://docs.adyen.com/online-payments/cancel-or-refund).",
            "operationId" : "post-CANCEL_OR_REFUND",
            "x-groupName" : "standard",
            "x-sortIndex" : 1,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "cancel_or_refund" : {
                           "$ref" : "#/components/examples/post-CANCEL_OR_REFUND-cancel_or_refund"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "cancel_or_refund" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/CAPTURE" : {
         "post" : {
            "tags" : [
               "standard"
            ],
            "summary" : "Informs you of the outcome of a request to capture a payment.",
            "description" : "Informs you of the outcome of a request to [capture a payment](https://docs.adyen.com/online-payments/capture).",
            "operationId" : "post-CAPTURE",
            "x-groupName" : "standard",
            "x-sortIndex" : 1,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "capture" : {
                           "$ref" : "#/components/examples/post-CAPTURE-capture"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "capture" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/CAPTURE_FAILED" : {
         "post" : {
            "tags" : [
               "standard"
            ],
            "summary" : "Informs you about a failed capture.",
            "description" : "Informs you about a failed capture due to a [technical issue](https://docs.adyen.com/online-payments/capture#failed-capture).",
            "operationId" : "post-CAPTURE_FAILED",
            "x-groupName" : "standard",
            "x-sortIndex" : 1,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "capture_failed" : {
                           "$ref" : "#/components/examples/post-CAPTURE_FAILED-capture_failed"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "capture_failed" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/CHARGEBACK" : {
         "post" : {
            "tags" : [
               "dispute"
            ],
            "summary" : "Informs you that a payment was charged back, and the funds were deducted from your account.",
            "description" : "Informs you that a payment was [charged back](https://docs.adyen.com/risk-management/disputes-api/dispute-notifications#chargeback), and the funds were deducted from your account.",
            "operationId" : "post-CHARGEBACK",
            "x-groupName" : "dispute",
            "x-sortIndex" : 2,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "chargeback" : {
                           "$ref" : "#/components/examples/post-CHARGEBACK-chargeback"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "chargeback" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/CHARGEBACK_REVERSED" : {
         "post" : {
            "tags" : [
               "dispute"
            ],
            "summary" : "Informs you that a chargeback has been defended towards the issuing bank.",
            "description" : "Informs you that a chargeback has been defended towards the issuing bank. This stage is not final. If the issuing bank decides to present a second chargeback, you might still lose the chargeback case.",
            "operationId" : "post-CHARGEBACK_REVERSED",
            "x-groupName" : "dispute",
            "x-sortIndex" : 2,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "chargeback_reversed" : {
                           "$ref" : "#/components/examples/post-CHARGEBACK_REVERSED-chargeback_reversed"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "chargeback_reversed" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/MANUAL_REVIEW_ACCEPT" : {
         "post" : {
            "tags" : [
               "additional configuration"
            ],
            "summary" : "Informs you that the manual review has been accepted.",
            "description" : "Informs you that the manual review has been accepted.",
            "operationId" : "post-MANUAL_REVIEW_ACCEPT",
            "x-groupName" : "additional configuration",
            "x-sortIndex" : 4,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "manual_review_accept" : {
                           "$ref" : "#/components/examples/post-MANUAL_REVIEW_ACCEPT-manual_review_accept"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "manual_review_accept" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/MANUAL_REVIEW_REJECT" : {
         "post" : {
            "tags" : [
               "additional configuration"
            ],
            "summary" : "Informs you that the manual review has been rejected.",
            "description" : "Informs you that the manual review has been rejected.",
            "operationId" : "post-MANUAL_REVIEW_REJECT",
            "x-groupName" : "additional configuration",
            "x-sortIndex" : 4,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "manual_review_reject" : {
                           "$ref" : "#/components/examples/post-MANUAL_REVIEW_REJECT-manual_review_reject"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "manual_review_reject" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/NOTIFICATION_OF_CHARGEBACK" : {
         "post" : {
            "tags" : [
               "dispute"
            ],
            "summary" : "Informs you that the dispute process has been opened.",
            "description" : "Informs you that the dispute process has been opened. You should investigate the dispute and [supply the defense documents](https://docs.adyen.com/risk-management/disputes-api#supply-dispute-defense-documents).",
            "operationId" : "post-NOTIFICATION_OF_CHARGEBACK",
            "x-groupName" : "dispute",
            "x-sortIndex" : 2,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "notification_of_chargeback" : {
                           "$ref" : "#/components/examples/post-NOTIFICATION_OF_CHARGEBACK-notification_of_chargeback"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "notification_of_chargeback" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/NOTIFICATION_OF_FRAUD" : {
         "post" : {
            "tags" : [
               "dispute"
            ],
            "summary" : "The alert notification passed on by issuers to schemes and subsequently to processors.",
            "description" : "The alert notification passed on by issuers to schemes and subsequently to processors. Visa calls them TC40 and Mastercard calls them System to Avoid Fraud Effectively (SAFE). These are informational notifications offered by Adyen, providing you the opportunity to take action, such as blocking a shopper or issuing a refund before a chargeback is incurred.",
            "operationId" : "post-NOTIFICATION_OF_FRAUD",
            "x-groupName" : "dispute",
            "x-sortIndex" : 2,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "notification_of_fraud" : {
                           "$ref" : "#/components/examples/post-NOTIFICATION_OF_FRAUD-notification_of_fraud"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "notification_of_fraud" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/OFFER_CLOSED" : {
         "post" : {
            "tags" : [
               "additional configuration"
            ],
            "summary" : "Informs you that the offer has expired.",
            "description" : "Informs you that the offer has expired, for example because the shopper abandoned the session. For cards, offers expire after 12 hours by default.",
            "operationId" : "post-OFFER_CLOSED",
            "x-groupName" : "additional configuration",
            "x-sortIndex" : 4,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "offer_closed" : {
                           "$ref" : "#/components/examples/post-OFFER_CLOSED-offer_closed"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "offer_closed" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/ORDER_CLOSED" : {
         "post" : {
            "tags" : [
               "standard"
            ],
            "summary" : "Informs you of the outcome of a shopper's last payment when paying for an order in partial payments.",
            "description" : "Informs you of the outcome of a shopper's last payment when paying for an order in [partial payments](https://docs.adyen.com/online-payments/classic-integrations/hosted-payment-pages/payment-request/partial-payments#notifications).",
            "operationId" : "post-ORDER_CLOSED",
            "x-groupName" : "standard",
            "x-sortIndex" : 1,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "order_closed" : {
                           "$ref" : "#/components/examples/post-ORDER_CLOSED-order_closed"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "order_closed" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/ORDER_OPENED" : {
         "post" : {
            "tags" : [
               "standard"
            ],
            "summary" : "Informs you that the first payment for your payment request is a partial payment, and an order has been created.",
            "description" : "Informs you that the first payment for your payment request is a [partial payment](https://docs.adyen.com/online-payments/classic-integrations/hosted-payment-pages/payment-request/partial-payments#notifications), and an order has been created.",
            "operationId" : "post-ORDER_OPENED",
            "x-groupName" : "standard",
            "x-sortIndex" : 1,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "order_opened" : {
                           "$ref" : "#/components/examples/post-ORDER_OPENED-order_opened"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "order_opened" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/PAIDOUT_REVERSED" : {
         "post" : {
            "tags" : [
               "payout"
            ],
            "summary" : "Informs you that the financial institution has rejected the payout.",
            "description" : "Informs you that the financial institution has rejected the payout. We will return the funds back to your account. \nThe reason field contains the bank statement description if present.",
            "operationId" : "post-PAIDOUT_REVERSED",
            "x-groupName" : "payout",
            "x-sortIndex" : 3,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "paidout_reversed" : {
                           "$ref" : "#/components/examples/post-PAIDOUT_REVERSED-paidout_reversed"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/PaidoutReversedNotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "paidout_reversed" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/PAYOUT_DECLINE" : {
         "post" : {
            "tags" : [
               "payout"
            ],
            "summary" : "Informs you that the user reviewing the payout has declined it.",
            "description" : "Informs you that the user reviewing the payout has [declined](https://docs.adyen.com/online-payments/online-payouts/confirm-or-decline-payout) it.",
            "operationId" : "post-PAYOUT_DECLINE",
            "x-groupName" : "payout",
            "x-sortIndex" : 3,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "payout_decline" : {
                           "$ref" : "#/components/examples/post-PAYOUT_DECLINE-payout_decline"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "payout_decline" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/PAYOUT_EXPIRE" : {
         "post" : {
            "tags" : [
               "payout"
            ],
            "summary" : "Informs you that the payout has expired.",
            "description" : "Informs you that the [payout has expired](https://docs.adyen.com/online-payments/online-payouts/payout-notifications).",
            "operationId" : "post-PAYOUT_EXPIRE",
            "x-groupName" : "payout",
            "x-sortIndex" : 3,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "payout_expire" : {
                           "$ref" : "#/components/examples/post-PAYOUT_EXPIRE-payout_expire"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "payout_expire" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/PAYOUT_THIRDPARTY" : {
         "post" : {
            "tags" : [
               "payout"
            ],
            "summary" : "Informs you of the outcome of a payout request.",
            "description" : "Informs you of the outcome of a payout request.",
            "operationId" : "post-PAYOUT_THIRDPARTY",
            "x-groupName" : "payout",
            "x-sortIndex" : 3,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "payout_thirdparty" : {
                           "$ref" : "#/components/examples/post-PAYOUT_THIRDPARTY-payout_thirdparty"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "payout_thirdparty" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/POSTPONED_REFUND" : {
         "post" : {
            "tags" : [
               "additional configuration"
            ],
            "summary" : "Informs you that the refund for the payment will be performed after the payment is captured.",
            "description" : "Informs you that the refund for the payment will be performed after the payment is captured.",
            "operationId" : "post-POSTPONED_REFUND",
            "x-groupName" : "additional configuration",
            "x-sortIndex" : 4,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "postponed_refund" : {
                           "$ref" : "#/components/examples/post-POSTPONED_REFUND-postponed_refund"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "postponed_refund" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/PREARBITRATION_LOST" : {
         "post" : {
            "tags" : [
               "dispute"
            ],
            "summary" : "Informs you that your pre-arbitration case has been declined by the cardholder's bank.",
            "description" : "Informs you that your pre-arbitration case has been declined by the cardholder's bank.",
            "operationId" : "post-PREARBITRATION_LOST",
            "x-groupName" : "dispute",
            "x-sortIndex" : 2,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "prearbitration_lost" : {
                           "$ref" : "#/components/examples/post-PREARBITRATION_LOST-prearbitration_lost"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "prearbitration_lost" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/PREARBITRATION_WON" : {
         "post" : {
            "tags" : [
               "dispute"
            ],
            "summary" : "Informs you that your pre-arbitration case has been accepted by the cardholder's bank.",
            "description" : "Informs you that your pre-arbitration case has been accepted by the cardholder's bank.",
            "operationId" : "post-PREARBITRATION_WON",
            "x-groupName" : "dispute",
            "x-sortIndex" : 2,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "prearbitration_won" : {
                           "$ref" : "#/components/examples/post-PREARBITRATION_WON-prearbitration_won"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "prearbitration_won" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/RECURRING_CONTRACT" : {
         "post" : {
            "tags" : [
               "additional configuration"
            ],
            "summary" : "Informs you that a recurring contract has been created.",
            "description" : "Informs you that a recurring contract has been created.",
            "operationId" : "post-RECURRING_CONTRACT",
            "x-groupName" : "additional configuration",
            "x-sortIndex" : 4,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "recurring_contract" : {
                           "$ref" : "#/components/examples/post-RECURRING_CONTRACT-recurring_contract"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/RecurringContractNotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "recurring_contract" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/REFUND" : {
         "post" : {
            "tags" : [
               "standard"
            ],
            "summary" : "Informs you of the outcome of a request to refund a payment.",
            "description" : "Informs you of the outcome of a request to [refund a payment](https://docs.adyen.com/online-payments/refund).",
            "operationId" : "post-REFUND",
            "x-groupName" : "standard",
            "x-sortIndex" : 1,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "refund" : {
                           "$ref" : "#/components/examples/post-REFUND-refund"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "refund" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/REFUND_FAILED" : {
         "post" : {
            "tags" : [
               "standard"
            ],
            "summary" : "Informs you that the refund failed due to a technical issue.",
            "description" : "Informs you that the refund failed due to a [technical issue](https://docs.adyen.com/online-payments/refund#failed-refund).",
            "operationId" : "post-REFUND_FAILED",
            "x-groupName" : "standard",
            "x-sortIndex" : 1,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "refund_failed" : {
                           "$ref" : "#/components/examples/post-REFUND_FAILED-refund_failed"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "refund_failed" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/REFUND_REVERSED" : {
         "post" : {
            "tags" : [
               "standard"
            ],
            "summary" : "Informs you that the refunded amount has been returned to Adyen, and is back in your account.",
            "description" : "Informs you that the refunded amount has been returned to Adyen, and is back in your account.",
            "operationId" : "post-REFUND_REVERSED",
            "x-groupName" : "standard",
            "x-sortIndex" : 1,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "refund_reversed" : {
                           "$ref" : "#/components/examples/post-REFUND_REVERSED-refund_reversed"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "refund_reversed" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/REFUND_WITH_DATA" : {
         "post" : {
            "tags" : [
               "standard"
            ],
            "summary" : "Informs you of the outcome of a request to refund with data.",
            "description" : "Informs you of the outcome of a request to [refund with data](https://docs.adyen.com/online-payments/refund#unreferenced-refund).",
            "operationId" : "post-REFUND_WITH_DATA",
            "x-groupName" : "standard",
            "x-sortIndex" : 1,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "refund_with_data" : {
                           "$ref" : "#/components/examples/post-REFUND_WITH_DATA-refund_with_data"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "refund_with_data" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/REPORT_AVAILABLE" : {
         "post" : {
            "tags" : [
               "standard"
            ],
            "summary" : "Informs you that a new report is available.",
            "description" : "Informs you that a [new report](https://docs.adyen.com/reporting/downloading-reports#automate-downloading-reports) is available.",
            "operationId" : "post-REPORT_AVAILABLE",
            "x-groupName" : "standard",
            "x-sortIndex" : 1,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "report_available" : {
                           "$ref" : "#/components/examples/post-REPORT_AVAILABLE-report_available"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/ReportAvailableNotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "report_available" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/REQUEST_FOR_INFORMATION" : {
         "post" : {
            "tags" : [
               "dispute"
            ],
            "summary" : "Informs you that a shopper has opened an RFI.",
            "description" : "Informs you that a shopper has opened an RFI (Request for Information) case with the bank. You should [supply defense documents](https://docs.adyen.com/risk-management/disputes-api#supply-dispute-defense-documents) to help shopper understand the charge.",
            "operationId" : "post-REQUEST_FOR_INFORMATION",
            "x-groupName" : "dispute",
            "x-sortIndex" : 2,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "request_for_information" : {
                           "$ref" : "#/components/examples/post-REQUEST_FOR_INFORMATION-request_for_information"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "request_for_information" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/SECOND_CHARGEBACK" : {
         "post" : {
            "tags" : [
               "dispute"
            ],
            "summary" : "Informs you that the issuing bank has declined the defense documents.",
            "description" : "Informs you that the issuing bank has declined the material submitted during defense of the original chargeback. The disputed amount is deducted from your account.",
            "operationId" : "post-SECOND_CHARGEBACK",
            "x-groupName" : "dispute",
            "x-sortIndex" : 2,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "second_chargeback" : {
                           "$ref" : "#/components/examples/post-SECOND_CHARGEBACK-second_chargeback"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "second_chargeback" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/TECHNICAL_CANCEL" : {
         "post" : {
            "tags" : [
               "standard"
            ],
            "summary" : "Informs you of the outcome of the technical cancel request.",
            "description" : "Informs you of the outcome of the [technical cancel](https://docs.adyen.com/online-payments/cancel#technical-cancel) request.",
            "operationId" : "post-TECHNICAL_CANCEL",
            "x-groupName" : "standard",
            "x-sortIndex" : 1,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "technical_cancel" : {
                           "$ref" : "#/components/examples/post-TECHNICAL_CANCEL-technical_cancel"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "technical_cancel" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      },
      "/VOID_PENDING_REFUND" : {
         "post" : {
            "tags" : [
               "standard"
            ],
            "summary" : "Informs you of the outcome of a request to cancel a POS refund.",
            "description" : "Informs you of the outcome of a request to [cancel a POS refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-a-pos-refund-request).",
            "operationId" : "post-VOID_PENDING_REFUND",
            "x-groupName" : "standard",
            "x-sortIndex" : 1,
            "security" : [
               {
                  "BasicAuth" : [
                     ]
               },
               {
                  "ApiKeyAuth" : [
                     ]
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "examples" : {
                        "void_pending_refund" : {
                           "$ref" : "#/components/examples/post-VOID_PENDING_REFUND-void_pending_refund"
                        }
                     },
                     "schema" : {
                        "$ref" : "#/components/schemas/NotificationRequest"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "examples" : {
                           "void_pending_refund" : {
                              "$ref" : "#/components/examples/WebhookAck"
                           }
                        },
                        "schema" : {
                           "$ref" : "#/components/schemas/NotificationResponse"
                        }
                     }
                  },
                  "description" : "OK - the request has succeeded."
               }
            }
         }
      }
   },
   "components" : {
      "schemas" : {
         "Amount" : {
            "properties" : {
               "currency" : {
                  "description" : "The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).",
                  "maxLength" : 3,
                  "minLength" : 3,
                  "type" : "string"
               },
               "value" : {
                  "description" : "The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
                  "format" : "int64",
                  "type" : "integer"
               }
            },
            "required" : [
               "value",
               "currency"
            ]
         },
         "AuthorisationNotificationAdditionalData" : {
            "properties" : {
               "authCode" : {
                  "description" : "When the payment is authorised successfully, this fields holds the authorisation code for the payment, otherwise it's empty.",
                  "type" : "string"
               },
               "authorisedAmountCurrency" : {
                  "description" : "Currency of the authorised amount.",
                  "type" : "string"
               },
               "authorisedAmountValue" : {
                  "description" : "Value of the amount authorised. <TODO>: a bunch more information",
                  "type" : "string"
               },
               "cardSummary" : {
                  "description" : "Returns the last 4 digits of the credit card.",
                  "type" : "string"
               },
               "expiryDate" : {
                  "description" : "Returns the card expiry date.",
                  "type" : "string"
               },
               "iDealConsumerAccountNumber" : {
                  "description" : "Only included for iDeal payments.",
                  "type" : "string"
               },
               "iDealConsumerBIC" : {
                  "description" : "Only included for iDeal payments.",
                  "type" : "string"
               },
               "iDealConsumerCity" : {
                  "description" : "Only included for iDeal payments.",
                  "type" : "string"
               },
               "iDealConsumerIBAN" : {
                  "description" : "Only included for iDeal payments.",
                  "type" : "string"
               },
               "iDealConsumerIban" : {
                  "description" : "Only included for iDeal payments.",
                  "type" : "string"
               },
               "iDealConsumerName" : {
                  "description" : "Only included for iDeal payments.",
                  "type" : "string"
               },
               "iDealTransactionId" : {
                  "description" : "Only included for iDeal payments.",
                  "type" : "string"
               },
               "opi.transToken" : {
                  "description" : "The transaction token to be used in your Oracle Opera integration.",
                  "type" : "string"
               },
               "paypalEmail" : {
                  "description" : "The buyer's PayPal account email address.\n\nExample: paypaltest@adyen.com",
                  "type" : "string"
               },
               "paypalPayerId" : {
                  "description" : "The buyer's PayPal ID.\n\nExample: LF5HCWWBRV2KL",
                  "type" : "string"
               },
               "paypalPayerResidenceCountry" : {
                  "description" : "The buyer's country of residence.\n\nExample: NL",
                  "type" : "string"
               },
               "paypalPayerStatus" : {
                  "description" : "The status of the buyer's PayPal account.\n\nExample: unverified",
                  "type" : "string"
               },
               "paypalProtectionEligibility" : {
                  "description" : "The eligibility for PayPal Seller Protection for this payment.\n\nExample: Ineligible",
                  "type" : "string"
               },
               "sepadirectdebit.dateOfSignature" : {
                  "description" : "The transaction signature date.\n\nFormat: yyyy-MM-dd",
                  "type" : "string"
               },
               "sepadirectdebit.mandateId" : {
                  "description" : "Its value corresponds to the pspReference value of the transaction.",
                  "type" : "string"
               },
               "sepadirectdebit.sequenceType" : {
                  "description" : "This field can take one of the following values:\n* OneOff: (OOFF) Direct debit instruction to initiate exactly one direct debit transaction.\n\n* First: (FRST) Initial/first collection in a series of direct debit instructions.\n* Recurring: (RCUR) Direct debit instruction to carry out regular direct debit transactions initiated by the creditor.\n* Final: (FNAL) Last/final collection in a series of direct debit instructions.\n\nExample: OOFF",
                  "type" : "string"
               }
            }
         },
         "AuthorisationNotificationRequest" : {
            "properties" : {
               "live" : {
                  "description" : "Informs about the origin of the notification. The value is `true` when originating from the live environment, `false` for the test environment.",
                  "type" : "boolean"
               },
               "notificationItems" : {
                  "description" : "A container object for the details included in the notification.",
                  "items" : {
                     "$ref" : "#/components/schemas/AuthorisationNotificationRequestItem"
                  },
                  "type" : "array"
               }
            }
         },
         "AuthorisationNotificationRequestItem" : {
            "properties" : {
               "additionalData" : {
                  "description" : "This object is a generic container that can hold extra fields.",
                  "$ref" : "#/components/schemas/AuthorisationNotificationAdditionalData"
               },
               "amount" : {
                  "description" : "A container object vor the payable amount information for the transaction. For HTTP POST notifications, currency and value are returned as URL parameters.",
                  "$ref" : "#/components/schemas/Amount"
               },
               "eventCode" : {
                  "description" : "The type of event the notification item refers to. <TODO> : This equals the name of the 'endpoint'.",
                  "type" : "string"
               },
               "eventDate" : {
                  "description" : "The time when the event was generated. Format: ISO 8601; yyyy-MM-DDThh:mm:ssTZD",
                  "example" : "2021-07-17T13:42:40+01:00",
                  "format" : "date-time",
                  "type" : "string"
               },
               "merchantAccountCode" : {
                  "description" : "The merchant account identifier used in the transaction the notification item refers to.",
                  "type" : "string"
               },
               "merchantReference" : {
                  "description" : "A reference to uniquely identify the payment. <TODO>",
                  "type" : "string"
               },
               "operations" : {
                  "description" : "The operations indicate the supported follow-up actions concerning the payment.\n> This is an **experimental field**. Do not base your code on this field. Not all specific cases are covered yet. It's possible that the field is empty or contains generic information.",
                  "enum" : [
                     "CAPTURE",
                     "CANCEL",
                     "REFUND"
                  ],
                  "items" : {
                     "type" : "string"
                  },
                  "type" : "string"
               },
               "paymentMethod" : {
                  "description" : "The payment method used in the transaction.",
                  "example" : "visa, mc, iDeal",
                  "type" : "string"
               },
               "pspReference" : {
                  "description" : "Adyen's 16-character unique reference associated with the transaction/the request. This value is globally unique; quote it when communicating with us about this request.",
                  "type" : "string"
               },
               "reason" : {
                  "description" : "If `success` = `true` and `paymentMethod` = `visa`, `mc`, or `amex` then this field contains the following details: \nAuhtorisation code, last 4 digits of the card, card expiry date. \n In case of failure, this contains information about the authorisation failure",
                  "example" : "874574:1935:11/2012",
                  "type" : "string"
               },
               "success" : {
                  "description" : "If `true`: The payment request was successful. \n If `false`: The payment request failed. \n Check the `reason` field for failure information.",
                  "type" : "string"
               }
            },
            "required" : [
               "pspReference",
               "merchantReference",
               "merchantAccountCode",
               "eventDate",
               "eventCode",
               "amount",
               "paymentMethod",
               "success",
               "operations"
            ]
         },
         "NotificationAdditionalData" : {
            "properties" : {
               "authCode" : {
                  "description" : "When the payment is authorised successfully, this fields holds the authorisation code for the payment, otherwise it's empty.",
                  "type" : "string"
               },
               "authorisedAmountCurrency" : {
                  "description" : "Currency of the authorised amount.",
                  "type" : "string"
               },
               "authorisedAmountValue" : {
                  "description" : "Value of the amount authorised. <TODO>: a bunch more information",
                  "type" : "string"
               },
               "cardSummary" : {
                  "description" : "Returns the last 4 digits of the credit card.",
                  "type" : "string"
               },
               "expiryDate" : {
                  "description" : "Returns the card expiry date.",
                  "type" : "string"
               }
            }
         },
         "NotificationRequest" : {
            "properties" : {
               "live" : {
                  "description" : "Informs about the origin of the notification. The value is `true` when originating from the live environment, `false` for the test environment.",
                  "type" : "boolean"
               },
               "notificationItems" : {
                  "description" : "A container object for the details included in the notification.",
                  "items" : {
                     "$ref" : "#/components/schemas/NotificationRequestItem"
                  },
                  "type" : "array"
               }
            }
         },
         "NotificationRequestItem" : {
            "properties" : {
               "additionalData" : {
                  "description" : "This object is a generic container that can hold extra fields.",
                  "$ref" : "#/components/schemas/NotificationAdditionalData"
               },
               "amount" : {
                  "description" : "A container object vor the payable amount information for the transaction. For HTTP POST notifications, currency and value are returned as URL parameters.",
                  "$ref" : "#/components/schemas/Amount"
               },
               "eventCode" : {
                  "description" : "The type of event the notification item refers to. <TODO> : This equals the name of the 'endpoint'.",
                  "type" : "string"
               },
               "eventDate" : {
                  "description" : "The time when the event was generated. Format: ISO 8601; yyyy-MM-DDThh:mm:ssTZD",
                  "example" : "2021-07-17T13:42:40+01:00",
                  "format" : "date-time",
                  "type" : "string"
               },
               "merchantAccountCode" : {
                  "description" : "The merchant account identifier used in the transaction the notification item refers to.",
                  "type" : "string"
               },
               "merchantReference" : {
                  "description" : "A reference to uniquely identify the payment. <TODO>",
                  "type" : "string"
               },
               "paymentMethod" : {
                  "description" : "The payment method used in the transaction.",
                  "example" : "visa, mc, iDeal",
                  "type" : "string"
               },
               "pspReference" : {
                  "description" : "Adyen's 16-character unique reference associated with the transaction/the request. This value is globally unique; quote it when communicating with us about this request.",
                  "type" : "string"
               },
               "reason" : {
                  "description" : "If `success` = `false`, then this includes a short message with an explanation for the refusal.",
                  "type" : "string"
               },
               "success" : {
                  "description" : "Informs about the outcome of the event (`eventCode`) the notification refers to. \nIf `true`: the event the notification refers to was executed successfully. \nIf `false`: the event was not executed successfully.",
                  "type" : "boolean"
               }
            },
            "required" : [
               "pspReference",
               "merchantReference",
               "merchantAccountCode",
               "eventDate",
               "eventCode",
               "amount",
               "success",
               "paymentMethod"
            ]
         },
         "NotificationResponse" : {
            "properties" : {
               "notificationResponse" : {
                  "description" : "Set this parameter to **[accepted]** to acknowledge that you received a notification from Adyen.",
                  "type" : "string"
               }
            }
         },
         "PaidoutReversedNotificationRequest" : {
            "properties" : {
               "live" : {
                  "description" : "Informs about the origin of the notification. The value is `true` when originating from the live environment, `false` for the test environment.",
                  "type" : "boolean"
               },
               "notificationItems" : {
                  "description" : "A container object for the details included in the notification.",
                  "items" : {
                     "$ref" : "#/components/schemas/PaidoutReversedNotificationRequestItem"
                  },
                  "type" : "array"
               }
            }
         },
         "PaidoutReversedNotificationRequestItem" : {
            "properties" : {
               "additionalData" : {
                  "description" : "This object is a generic container that can hold extra fields.",
                  "$ref" : "#/components/schemas/NotificationAdditionalData"
               },
               "amount" : {
                  "description" : "A container object vor the payable amount information for the transaction. For HTTP POST notifications, currency and value are returned as URL parameters.",
                  "$ref" : "#/components/schemas/Amount"
               },
               "eventCode" : {
                  "description" : "The type of event the notification item refers to. <TODO> : This equals the name of the 'endpoint'.",
                  "type" : "string"
               },
               "eventDate" : {
                  "description" : "The time when the event was generated. Format: ISO 8601; yyyy-MM-DDThh:mm:ssTZD",
                  "example" : "2021-07-17T13:42:40+01:00",
                  "format" : "date-time",
                  "type" : "string"
               },
               "merchantAccountCode" : {
                  "description" : "The merchant account identifier used in the transaction the notification item refers to.",
                  "type" : "string"
               },
               "merchantReference" : {
                  "description" : "A reference to uniquely identify the payment. <TODO>",
                  "type" : "string"
               },
               "paymentMethod" : {
                  "description" : "The payment method used in the transaction.",
                  "example" : "visa, mc, iDeal",
                  "type" : "string"
               },
               "pspReference" : {
                  "description" : "The PSP reference for the Capture's PSP reference.",
                  "type" : "string"
               },
               "reason" : {
                  "description" : "Contains the bank statement description if present, else it contains `PaidOutReversed`.",
                  "type" : "string"
               },
               "success" : {
                  "description" : "Informs about the outcome of the event (`eventCode`) the notification refers to. \nIf `true`: the event the notification refers to was executed successfully. \nIf `false`: the event was not executed successfully.",
                  "type" : "boolean"
               }
            },
            "required" : [
               "merchantReference",
               "merchantAccountCode",
               "eventDate",
               "eventCode",
               "amount",
               "success",
               "paymentMethod",
               "pspReference"
            ]
         },
         "RecurringContractNoficationRequestItem" : {
            "properties" : {
               "additionalData" : {
                  "description" : "This object is a generic container that can hold extra fields.",
                  "$ref" : "#/components/schemas/RecurringContractNotificationAdditionalData"
               },
               "amount" : {
                  "description" : "A container object vor the payable amount information for the transaction. For HTTP POST notifications, currency and value are returned as URL parameters.",
                  "$ref" : "#/components/schemas/Amount"
               },
               "eventCode" : {
                  "description" : "The type of event the notification item refers to. <TODO> : This equals the name of the 'endpoint'.",
                  "type" : "string"
               },
               "eventDate" : {
                  "description" : "The time when the event was generated. Format: ISO 8601; yyyy-MM-DDThh:mm:ssTZD",
                  "example" : "2021-07-17T13:42:40+01:00",
                  "format" : "date-time",
                  "type" : "string"
               },
               "merchantAccountCode" : {
                  "description" : "The merchant account identifier used in the transaction the notification item refers to.",
                  "type" : "string"
               },
               "merchantReference" : {
                  "description" : "A reference to uniquely identify the payment. <TODO>",
                  "type" : "string"
               },
               "paymentMethod" : {
                  "description" : "The payment method used in the transaction.",
                  "example" : "visa, mc, iDeal",
                  "type" : "string"
               },
               "pspReference" : {
                  "description" : "Adyen's 16-character unique reference associated with the transaction/the request. This value is globally unique; quote it when communicating with us about this request.",
                  "type" : "string"
               },
               "reason" : {
                  "description" : "If `success` = `false`, then this includes a short message with an explanation for the refusal.",
                  "type" : "string"
               },
               "success" : {
                  "description" : "Informs about the outcome of the event (`eventCode`) the notification refers to. \nIf `true`: the event the notification refers to was executed successfully. \nIf `false`: the event was not executed successfully.",
                  "type" : "boolean"
               }
            },
            "required" : [
               "pspReference",
               "merchantReference",
               "merchantAccountCode",
               "eventDate",
               "eventCode",
               "amount",
               "success",
               "paymentMethod"
            ]
         },
         "RecurringContractNotificationAdditionalData" : {
            "properties" : {
               "authCode" : {
                  "description" : "When the payment is authorised successfully, this fields holds the authorisation code for the payment, otherwise it's empty.",
                  "type" : "string"
               },
               "authorisedAmountCurrency" : {
                  "description" : "Currency of the authorised amount.",
                  "type" : "string"
               },
               "authorisedAmountValue" : {
                  "description" : "Value of the amount authorised. <TODO>: a bunch more information",
                  "type" : "string"
               },
               "cardSummary" : {
                  "description" : "Returns the last 4 digits of the credit card.",
                  "type" : "string"
               },
               "expiryDate" : {
                  "description" : "Returns the card expiry date.",
                  "type" : "string"
               },
               "shopperEmail" : {
                  "description" : "The shopper's email address.",
                  "type" : "string"
               },
               "shopperReference" : {
                  "description" : "The ID that uniquely identifies the shopper. The `shopperReference` is the same as the `shopperReference` used in the initial payment.",
                  "type" : "string"
               }
            }
         },
         "RecurringContractNotificationRequest" : {
            "properties" : {
               "live" : {
                  "description" : "Informs about the origin of the notification. The value is `true` when originating from the live environment, `false` for the test environment.",
                  "type" : "boolean"
               },
               "notificationItems" : {
                  "description" : "A container object for the details included in the notification.",
                  "items" : {
                     "$ref" : "#/components/schemas/RecurringContractNoficationRequestItem"
                  },
                  "type" : "array"
               }
            }
         },
         "ReportAvailableNotificationRequest" : {
            "properties" : {
               "live" : {
                  "description" : "Informs about the origin of the notification. The value is `true` when originating from the live environment, `false` for the test environment.",
                  "type" : "boolean"
               },
               "notificationItems" : {
                  "description" : "A container object for the details included in the notification.",
                  "items" : {
                     "$ref" : "#/components/schemas/ReportAvailableNotificationRequestItem"
                  },
                  "type" : "array"
               }
            }
         },
         "ReportAvailableNotificationRequestItem" : {
            "properties" : {
               "additionalData" : {
                  "description" : "This object is a generic container that can hold extra fields.",
                  "$ref" : "#/components/schemas/NotificationAdditionalData"
               },
               "amount" : {
                  "description" : "A container object vor the payable amount information for the transaction. For HTTP POST notifications, currency and value are returned as URL parameters.",
                  "$ref" : "#/components/schemas/Amount"
               },
               "eventCode" : {
                  "description" : "The type of event the notification item refers to. <TODO> : This equals the name of the 'endpoint'.",
                  "type" : "string"
               },
               "eventDate" : {
                  "description" : "The time when the event was generated. Format: ISO 8601; yyyy-MM-DDThh:mm:ssTZD",
                  "example" : "2021-07-17T13:42:40+01:00",
                  "format" : "date-time",
                  "type" : "string"
               },
               "merchantAccountCode" : {
                  "description" : "The merchant account identifier used in the transaction the notification item refers to.",
                  "type" : "string"
               },
               "merchantReference" : {
                  "description" : "A reference to uniquely identify the payment. <TODO>",
                  "type" : "string"
               },
               "paymentMethod" : {
                  "description" : "The payment method used in the transaction.",
                  "example" : "visa, mc, iDeal",
                  "type" : "string"
               },
               "pspReference" : {
                  "description" : "Contains the file name of the report.",
                  "type" : "string"
               },
               "reason" : {
                  "description" : "Contains the download URL where you can obtain a copy of the report.",
                  "type" : "string"
               },
               "success" : {
                  "description" : "Always `true`.",
                  "type" : "string"
               }
            },
            "required" : [
               "merchantReference",
               "merchantAccountCode",
               "eventDate",
               "eventCode",
               "amount",
               "paymentMethod",
               "reason",
               "success",
               "pspReference"
            ]
         }
      },
      "securitySchemes" : {
         "ApiKeyAuth" : {
            "in" : "header",
            "name" : "X-API-Key",
            "type" : "apiKey"
         },
         "BasicAuth" : {
            "scheme" : "basic",
            "type" : "http"
         }
      },
      "examples" : {
         "WebhookAck" : {
            "summary" : "Acknowledge Webhook",
            "value" : {
               "notificationResponse" : "[accepted]"
            }
         },
         "post-AUTHORISATION-authorisation" : {
            "summary" : "AUTHORISATION example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "recurring.recurringDetailReference" : "9915692881181044",
                           "recurring.shopperReference" : "YOUR_SHOPPER_REFERENCE"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "AUTHORISATION",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "paymentMethod" : "ach",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "null",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-AUTHORISATION_ADJUSTMENT-authorisation_adjustment" : {
            "summary" : "AUTHORISATION_ADJUSTMENT example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "AUTHORISATION_ADJUSTMENT",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "visa",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-AUTORESCUE-autorescue" : {
            "summary" : "AUTORESCUE example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "retry.rescueReference" : "8826173525728789",
                           "merchantOrderReference" : "8826173525728789",
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7..."
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "AUTORESCUE",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-CANCELLATION-cancellation" : {
            "summary" : "CANCELLATION example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "CANCELLATION",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "visa",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-CANCEL_AUTORESCUE-cancel_autorescue" : {
            "summary" : "CANCEL_AUTORESCUE example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7..."
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "CANCEL_AUTORESCUE",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "No AutoRescue process for retry.rescueReference 8826173525728789",
                        "success" : "false"
                     }
                  }
               ]
            }
         },
         "post-CANCEL_OR_REFUND-cancel_or_refund" : {
            "summary" : "CANCEL_OR_REFUND example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "modification.action" : "cancel"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "CANCEL_OR_REFUND",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "visa",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-CAPTURE-capture" : {
            "summary" : "CAPTURE example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "CAPTURE",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "visa",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-CAPTURE_FAILED-capture_failed" : {
            "summary" : "CAPTURE_FAILED example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "paymentMethodVariant" : "facilypay_3x",
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "shopperCountry" : "NL"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "CAPTURE_FAILED",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "facilypay_3x",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "Capture Failed",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-CHARGEBACK-chargeback" : {
            "summary" : "CHARGEBACK example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "captureMerchantReference" : "shopperReferenceTest",
                           "chargebackReasonCode" : " 4853",
                           "InvoiceCreditorAccount" : "Creditor.AdyenInvoiceService",
                           "grossCurrency" : "EUR",
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "defensePeriodEndsAt" : "2021-07-31T03:03:07+02:00",
                           "defendable" : "true",
                           "grossValue" : "2000",
                           "modificationMerchantReferences" : "shopperReferenceTest",
                           "chargebackSchemeCode" : "mc",
                           "capturePspReference" : "8636172945333378",
                           "paymentMethodVariant" : "mc",
                           "shopperReference" : "123456"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "CHARGEBACK",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "mc",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "Payment.TxId=300000000524534724 dispute",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-CHARGEBACK_REVERSED-chargeback_reversed" : {
            "summary" : "CHARGEBACK_REVERSED example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7..."
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "CHARGEBACK_REVERSED",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "paymentMethod" : "mc",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "Fraudulent Processing of Transactions",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-MANUAL_REVIEW_ACCEPT-manual_review_accept" : {
            "summary" : "MANUAL_REVIEW_ACCEPT example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "paymentMethodVariant" : "scheme"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "MANUAL_REVIEW_ACCEPT",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "expire",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-MANUAL_REVIEW_REJECT-manual_review_reject" : {
            "summary" : "MANUAL_REVIEW_REJECT example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "paymentMethodVariant" : "visa"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "MANUAL_REVIEW_REJECT",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "visa",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "expire",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-NOTIFICATION_OF_CHARGEBACK-notification_of_chargeback" : {
            "summary" : "NOTIFICATION_OF_CHARGEBACK example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "captureMerchantReference" : "shopperReferenceTest",
                           "chargebackReasonCode" : " 4853",
                           "grossCurrency" : "EUR",
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "defensePeriodEndsAt" : "2021-07-31T03:03:08+02:00",
                           "defendable" : "false",
                           "grossValue" : "2000",
                           "modificationMerchantReferences" : "YourModificationReference,shopperReferenceTest",
                           "chargebackSchemeCode" : "mc",
                           "capturePspReference" : "8536173024791891",
                           "autoDefended" : "true",
                           "paymentMethodVariant" : "mc"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "NOTIFICATION_OF_CHARGEBACK",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "mc",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "Payment.TxId=300000000524659113 dispute (automatically defended)",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-NOTIFICATION_OF_FRAUD-notification_of_fraud" : {
            "summary" : "NOTIFICATION_OF_FRAUD example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "nofReasonCode" : "6",
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "modificationMerchantReferences" : "shopperReferenceTest",
                           "nofSchemeCode" : "visa"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "NOTIFICATION_OF_FRAUD",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "visa",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "Fraudulent Use of Account Number",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-OFFER_CLOSED-offer_closed" : {
            "summary" : "OFFER_CLOSED example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "paymentMethodVariant" : "ideal"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "OFFER_CLOSED",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "paymentMethod" : "ideal",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-ORDER_CLOSED-order_closed" : {
            "summary" : "ORDER_CLOSED example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "order-1-pspReference" : "861617275047284E",
                           "order-1-paymentAmount" : "EUR 10.00",
                           "order-1-success" : "true",
                           "order-1-paymentMethod" : "ideal"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "ORDER_CLOSED",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "false"
                     }
                  }
               ]
            }
         },
         "post-ORDER_OPENED-order_opened" : {
            "summary" : "ORDER_OPENED example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "ORDER_OPENED",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-PAIDOUT_REVERSED-paidout_reversed" : {
            "summary" : "PAIDOUT_REVERSED example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "PAIDOUT_REVERSED",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-PAYOUT_DECLINE-payout_decline" : {
            "summary" : "PAYOUT_DECLINE example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "paymentMethodVariant" : "bankTransfer_IBAN"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "PAYOUT_DECLINE",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "bankTransfer_IBAN",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-PAYOUT_EXPIRE-payout_expire" : {
            "summary" : "PAYOUT_EXPIRE example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "PAYOUT_EXPIRE",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "bankTransfer_IBAN",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-PAYOUT_THIRDPARTY-payout_thirdparty" : {
            "summary" : "PAYOUT_THIRDPARTY example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "expiryDate" : "03/2030",
                           "paymentMethodVariant" : "visa",
                           "cardSummary" : "1111",
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7..."
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "PAYOUT_THIRDPARTY",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "paymentMethod" : "visa",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "Approved",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-POSTPONED_REFUND-postponed_refund" : {
            "summary" : "POSTPONED_REFUND example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7..."
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "POSTPONED_REFUND",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "directdebit_NL",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-PREARBITRATION_LOST-prearbitration_lost" : {
            "summary" : "PREARBITRATION_LOST example",
            "value" : {
               "live" : "true",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "metadata.type" : "web_pay",
                           "metadata.link_id" : "111111",
                           "arn" : "ACQUIRER_REFERENCE_NUMBER",
                           "metadata.company" : "abc"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "PREARBITRATION_LOST",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "paymentMethod" : "visa",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "Other Fraud-Card Absent Environment",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-PREARBITRATION_WON-prearbitration_won" : {
            "summary" : "PREARBITRATION_WON example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "PREARBITRATION_WON",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "paymentMethod" : "bankTransfer_IBAN",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-RECURRING_CONTRACT-recurring_contract" : {
            "summary" : "RECURRING_CONTRACT example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "shopperEmail" : "s.hopper@adyen.com",
                           "paymentMethodVariant" : "ideal",
                           "paymentLinkId" : "PL50C5F751CED39G71",
                           "shopperReference" : "YOU_SHOPPER_REFERENCE"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "RECURRING_CONTRACT",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "ideal",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-REFUND-refund" : {
            "summary" : "REFUND example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "REFUND",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "visa",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "Transaction hasn't been captured, refund not possible",
                        "success" : "false"
                     }
                  }
               ]
            }
         },
         "post-REFUND_FAILED-refund_failed" : {
            "summary" : "REFUND_FAILED example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "paymentMethodVariant" : "blik"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "REFUND_FAILED",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "blik",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "Refund Failed",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-REFUND_REVERSED-refund_reversed" : {
            "summary" : "REFUNDED_REVERSED example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "REFUNDED_REVERSED",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "mc",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "test_AUTHORISATION_1",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-REFUND_WITH_DATA-refund_with_data" : {
            "summary" : "REFUND_WITH_DATA example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "REFUND_WITH_DATA",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MODIFICATION_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "mc",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-REPORT_AVAILABLE-report_available" : {
            "summary" : "REPORT_AVAILABLE example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7..."
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "REPORT_AVAILABLE",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "URL_TO_DOWNLOAD_REPORT",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-REQUEST_FOR_INFORMATION-request_for_information" : {
            "summary" : "REQUEST_FOR_INFORMATION example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "hmacSignature" : "b0ea55c2fe60d4d1d605e9c385e0e7...",
                           "modificationMerchantReferences" : "9123140123220028"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "REQUEST_FOR_INFORMATION",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "mc",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-SECOND_CHARGEBACK-second_chargeback" : {
            "summary" : "SECOND_CHARGEBACK example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "chargebackReasonCode" : "502",
                           "modificationMerchantReferences" : "shopperReferenceTest",
                           "chargebackSchemeCode" : "jcb"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "SECOND_CHARGEBACK",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "paymentMethod" : "jcb",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "502:Cardmember Dispute",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-TECHNICAL_CANCEL-technical_cancel" : {
            "summary" : "TECHNICAL_CANCEL example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "paymentMethodVariant" : "visa"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "TECHNICAL_CANCEL",
                        "eventDate" : "2018-07-18T22:35:14+02:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_ORIGINAL_REFERENCE",
                        "originalReference" : "8313547924770610",
                        "paymentMethod" : "visa",
                        "pspReference" : "8515208516304269",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         },
         "post-VOID_PENDING_REFUND-void_pending_refund" : {
            "summary" : "VOID_PENDING_REFUND example",
            "value" : {
               "live" : "false",
               "notificationItems" : [
                  {
                     "NotificationRequestItem" : {
                        "additionalData" : {
                           "paymentMethodVariant" : "mc"
                        },
                        "amount" : {
                           "currency" : "EUR",
                           "value" : 1000
                        },
                        "eventCode" : "VOID_PENDING_REFUND",
                        "eventDate" : "2021-01-01T01:00:00+01:00",
                        "merchantAccountCode" : "YOUR_MERCHANT_ACCOUNT",
                        "merchantReference" : "YOUR_MERCHANT_REFERENCE",
                        "originalReference" : "9913140798220028",
                        "paymentMethod" : "mc",
                        "pspReference" : "YOUR_PSP_REFERENCE",
                        "reason" : "",
                        "success" : "true"
                     }
                  }
               ]
            }
         }
      }
   }
}